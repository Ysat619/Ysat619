[{"id":"90287f2d1cda5dcde7895722d8985714","title":"如何在个人博客(hexo)中放入图片","content":"这个问题的本质其实是在讨论如何将本地的图片上传到服务器中，并在 markdown 写作中引用已上传的图片。最理想的方式当然是：截图工具一截图，然后就直接把图片 Ctrl V 进文章中啦。那么具体如何做呢？本文将介绍两种方法\n方法 1. Github + Typora第一种方法是直接将图片存入 Github 的仓库中，这种方法最大的优点就是免费了，缺点是 Repository 的存储空间不能太大，官方推荐是小于 1GB，如下面我从 Github Docs 中截的图。\n\n如果一张图 1MB，那么大约可以放 1000 张图到 Repository 中， emmm这么算下来的话，其实大部分人使用肯定是戳戳有余了\n众所周知，在用 hexo 写博客的时候，可以将图片放在 source 的文件夹内，然后用相对路径进行引用，比如将图片都放在 ./source/images 中，如果你的文章是 ./source/_posts/xxx.md 的话，可以在文章中使用类似于 ![](../images/xxx.png) 的方式引用图片。最终 hexo generate 的时候会将你的 images 文件夹原封不动的放入 ./build 文件夹，部署的时候也会将这些图片部署到 Github Repository 中。\n利用这个hexo 的特性，我们就可以将 github 作为我们自己放文章图片的地方了。但这样的问题是，使用起来很是麻烦，要在文章中插入图片，首先要将截的图存入博客中专门放图片的文件夹如 ./source/images ，还要将图片归个类…还要在 markdown 中写上插入图片的语法…这可太麻烦了。\n于是我们可以使用 Typora 图片上传的特性完美解决这个痛点。打开 Typora 的 Setting，Image，选择 Copy image to custom folder，意思就是当插入图片的时候会将图片复制到指定的文件夹中，指定的那个文件夹我们用相对路径表示就行，如下图（请务必按照你自己的实际情况来配置）\n\n最后大功告成啦，截个图，然后直接粘贴到 Typora 里就行。\n方法 2. 阿里云 OSS + PicGo第二种方法就是图床 + 图片上传工具啦，市面上的图床有很多，但免费的一些野鸡图床一般都很不稳定，比如随便谷歌或百度搜免费图床，会出来一大堆，具体稳定性如何，就需要大家自己去甄别了。\n这里我只介绍我用的：阿里云 OSS 当图床，PicGo 当图片上传工具。\n\n前往 阿里云 OSS官网，点击立即购买。然后按照下图购买方案即可，一年 9 块钱，也不算很贵\n\n\n然后点击 Bucket 列表，创建 Bucket，填写 Bucket 名称、地域还有读写权限(改成公共读)，如下图\n\n\n阿里云OSS 创建完之后，我们需要下载个图片上传的软件，PicGo下载链接\n如果 mac 下载安装完 PicGo，打开后提示「文件已损坏」的情况，可以按照以下方式操作：\n\n信任开发者，会要求输入密码:\nbashsudo spctl --master-disable\n\n然后放行 PicGo :\nbashxattr -cr /Applications/PicGo.app\n\n然后就能正常打开。\n\n打开PicGo 的主窗口，图床设置，阿里云 OSS\n这里需要填入 设定KeyId 和 设定KeySecret，可以在「阿里云 -&gt; 右上角头像 -&gt; AccessKey 管理」中创建 AccessKey。\n\n然后分别把刚刚在阿里云中创建的 AssessKey ID和 AssessKey Secret 填入PicGo中的 设定KeyId 和 设定KeySecret 。\n\n\n\n\n\n\n\n\n\n记得把你自己的 AssessKey ID和 AssessKey Secret 妥善保管好\n然后 设定Bucket 和 设定存储区域 根据自身情况填，可参考下图，最后按确定即可\n\n使用起来就非常方便了，用微信、Snipaste 等一些截图工具，截图后直接点状态栏中 PigGo 的图标就能上传啦~\n软件具体的操作细节可以自己探索，很简单的\n\n","slug":"tools/blog-image-upload-strategy","date":"2023-09-13T07:12:47.000Z","categories_index":"常用工具","tags_index":"杂谈","author_index":"Joshlee"},{"id":"44adc1e67c8364c54a9fb52ef95b3372","title":"颉斌斌の阅读方法论","content":"\n\n解码考研阅读：\n\n单词\n长难句\n掌握主旨\n查找细节\n\n课程目录\n阅读应试思维理论部分讲解\n阅读应试思维具体应用：细节题\n阅读应试思维具体应用：主旨题\n阅读应试思维整体性训练做法（刷题）\n\n低分思维和满分思维\n理论部分讲解\n如何精准定位\n如何对比选项\n选择题的固有缺陷\n\n如何精准定位定位明显的题定位不明显的题定位找不到出题句的题避免问题和解决问题谁更重要？\n\n\n\n\n\n\n\n\n先避免问题；避免不了问题，再解决问题\n怎么避开干扰？\n\n一定要学会精准定位\n回答题干问题所问，而不是题干有什么就去定位什么！需要深度理解问题：题干+选项（共性）\n\n如何对比选项真实接收信息对比信息选择题的固有缺陷问题的暗示选项的暗示原文的暗示一致性（前后题）的暗示","slug":"english/xie_bin_bin_reading_note","date":"2023-09-10T03:25:56.000Z","categories_index":"英语","tags_index":"英语","author_index":"Joshlee"},{"id":"8559ab85236f0cb2d5fafd0366ccdb0b","title":"《汇编语言》第4版.王爽 Lab 全集","content":"Assembly Language Lab In 8086PC\n\n\n\n\n\n\n\n\n使用教材：《汇编语言》第 4 版 - 王爽\n环境搭建由于王爽的《汇编语言》是以 Intel 8086 CPU为基础进行教学的，全书处于实模式（Real Mode）中进行讲解，在 Real Mode 下 CPU 以 16 位模式运行，可以访问 1MB 的物理内存，并且没有内存保护的机制，可以随意访问和修改其他程序的内存，这是相当的有利于我们学习~\n而现代的操作系统，如 Windows10、Windows11 通常使用的是保护模式（Protected Mode）和长模式（Long Mode），这也就意味着我们想要运行书中的汇编代码，需要使用模拟器（DOSBox）去模拟早期的 DOS 操作系统环境。\n下面进入正题，将介绍如何在现代的操作系统中搭建 8086CPU 的环境\n\n下载并安装 DOSBox\n下载 DEBUG.COM 文件并放入 [Your Folder] 内，注意[Your Folder] 指的是你自己的文件夹路径，请将此替换成你自己的路径，如 D:\\Debug 。 // 在MS-DOS中，扩展名为.COM 的文件通常是可执行的二进制文件，全称为”Command File”，即“命令文件” \n配置 DOSBox\n打开配置文件：打开 DOSBox 的安装目录，双击运行DOSBox 0.74-3 Options.bat，成功运行后会自动打开配置文件 dosbox-0.74-3.conf。若你使用的是 Mac OS ，则可以直接打开配置文件 ~/Library/Preferences/DOSBox 0.73 Preferences，其余方法和 Windows 同理。\n添加启动后自动执行的命令：直接前往配置文件的底部，在[autoexec]下添加下面代码（记得改成自己的路径）\n\n\n\nMOUNT C [Your Folder]\nC:\nDEBUG.com\n最后保存文件然后退出。\n做到这里，将DOSBox运行起来，不出意外的话会自动运行 debug 程序，可以输入 r 命令验证一下，效果如下，这样就大功告成啦~\n\n实验1 查看CPU和内存，用机器指令和汇编指令编程(Register) 查看、改变CPU寄存器内容\n\n\n\n\n\n\n\n\nr [register]\n查看所有的 8086 寄存器的内容 r：\n\n改变寄存器的内容 r [寄存器名称]：\n\n(Dump) 查看内存\n\n\n\n\n\n\n\n\nd [range]\n\nd [段地址:偏移地址]\n查看内存 10000H 处的内容：d 1000:0\n查看内存 11451H 处的内容：d 1145:1\n\n\nd [段地址:偏移地址] [长度]\n查看 1000:0~1000:9 中的内容：d 1000:0 9\n仅查看内存单元 10000H 中的内容：d 1000:0 0\n\n\n\n(Enter) 改写内存内容\n\n\n\n\n\n\n\n\ne address [list]\n\n将内存 1000:01000:9 单元中的内容分别写为19: e 1000:0 0 1 2 3 4 5 6 7 8 9\n向内存 1000:10 处写入字符串”Hello, World”：e 1000:10 \"Hello, World\"\n\n同理也可以在内存中写入机器码 e 1000:0 b8 01 00 b9 02 00 01 c8\n\n\n\n机器码\n对应的汇编指令\n\n\n\nb80100\nmov ax,0001\n\n\nb90200\nmov cx,0002\n\n\n01c8\nadd ax cx\n\n\n接下来我们可以用 u 命令进行反汇编d 200\n(Unassemble) 将内存中的机器指令翻译成汇编指令\n\n\n\n\n\n\n\n\nu [range]\nu 1000:0:\n\n(Trace) 执行一条机器指令\n\n\n\n\n\n\n\n\nt [=address] [number]\n在内存地址 1000:0 处执行并追溯两条指令：\n\n(Assemble) 以汇编指令的格式在内存中写入一条机器指令\n\n\n\n\n\n\n\n\na [address]\n从内存 1000:0 开始写入指令：\n-a 1000:0\n1000:0000 mov ax,1\n1000:0003 mov bx,2\n1000:0006 mov cx,3\n\n实验2 用机器指令和汇编指令编程实验任务 1\n\n\n\n\n\n\n\n\n使用 Debug，将下面的程序段写入内存，逐条执行，根据指令执行后的实际运行情况填空\n\nmov ax,ffff\nmov ds,ax\n\nmov ax,2200\nmov ss,ax\n\nmov sp,0100\n\nmov ax,[0]            ;ax=C0EA\nadd ax,[2]            ;ax=C0FC\nmov bx,[4]            ;bx=30F0\nadd bx,[6]            ;bx=6021\n\npush ax               ;sp=00FE; 修改的内存单元的地址是 2200:00FE 内容为 C0FC\npush bx               ;sp=00FC; 修改的内存单元的地址是 2200:00FC 内容为 6021\npop ax                ;sp=00FE; ax=6021   \npop bx                ;sp=0100; bx=C0FC\n\npush [4]              ;sp=00FE; 修改的内存单元的地址是 2200:00FE 内容为 30F0\npush [6]              ;sp=00FC; 修改的内存单元的地址是 2200:00FC 内容为 2F31\n\n实验任务 2\n\n\n\n\n\n\n\n\n观察下图中的实验过程，然后分析：为什么2000:0~2000:f中的内容会发生改变？可能要再做些实验才能发现其中的规律。如果你在这里就正确回答了这个问题，那么要恭喜你，因为你有很好的悟性。大多数的学习者对这个问题还是比较迷惑的，不过不要紧，因为随着课程的进行，这个问题的答案将逐渐变得显而易见。\n\n\n2023-8-8 20:51:28：确确实实，执行了 MOV SS,AX 后 MOV SP 10 也会自动执行，栈内存会被填充一些数据，通过分析发现被填充的是 IP, DS 和 ES，但具体用处还有待研究\n\n实验3 编程、编译、连接、跟踪实验任务1\n\n\n\n\n\n\n\n\n将下面的程序保存为 t1.asm 文件，将其生成可执行文件 t1.exe\nassume cs:codesg\n\ncodesg segment\n\n\tmov ax,2000H\n\tmov ss,ax\n\tmov sp,0\n\tadd sp,10\n\tpop ax\n\tpop bx\n\tpush ax\n\tpush bx\n\tpop ax\n\tpop bx\n\n\tmov ax,4c00H\n\tint 21H\n\ncodesg ends\n\nend\n\n由于我们使用的是 DOSBox，需要下载编译器(masm)，连接器(link)和编辑器(edit)，并且将其放到你所挂载的目录[Your Folder]，如 D:\\debug\n出于个人习惯问题，我比较喜欢用一些流行的编辑器，比如 Sublime Text。我们在 [Your Folder] 中新建个文件，并改名为 t1.asm，然后开始写代码。\n写完代码之后，我们重启 DOSBox 以重新挂载目录，然后开始编译 masm c:\\t1; 得到T1.OBJ，最后进行连接 link t1; 得到可执行文件 T1.EXE\n实验任务2\n\n\n\n\n\n\n\n\n用Debug跟踪 t1.exe 的执行过程，写出每一步执行后，相关寄存器的内容和栈顶的内容\n\n答：\n用 Debug 运行 t1.exe: debug T1.EXE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n实验任务3\n\n\n\n\n\n\n\n\nPSP的头两个字节是CD 20，用 Debug 加载 t1.exe，查看 PSP 的内容\n\n答：\n通过 r 命令我们可知 CS 为 04AD，那么PSP的地址则为 04ADH-10H=049D，查看其内存，发现开头两个字节确实如此\n\n可以看到 PSP 的首个指令为 INT 20 ，是一个软中断（Software interrupt）指令，用于向 DOS 操作系统发出终止程序的请求。\n实验4 [bx]和loop的使用实验任务1\n\n\n\n\n\n\n\n\n编程，向内存 0:200 ~ 0:23F 依次传递数据 0~63(3FH)\n\n答：\nassume cs:codesg\n\ncodesg segment\n\n\tmov ax,0\n\tmov ds,ax\n\tmov bx,200h\n\tmov cx,40h\ns:  mov [bx],ax\n\tinc bx\n\tinc ax\n\tloop s\n\t\n\tmov ax,4c00h\n\tint 21h\n\ncodesg ends\n\nend\n\n实验任务2\n\n\n\n\n\n\n\n\n编程，向内存 0:200 ~ 0:23F 依次传递数据 0~63(3FH)，程序中只能使用 9 条指令，9 条指令中包括 mov ax,4c00h 和 int 21h\n\n答：\n; Acknowledgement: chan_honman \nassume cs:codesg\n\ncodesg segment\n\n\tmov ax,20h\n\tmov ds,ax\n\tmov bx,0\n\tmov cx,40h\ns:  mov [bx],bx\n\tinc bx\n\tloop s\n\t\n\tmov ax,4c00h\n\tint 21h\n\ncodesg ends\n\nend\n\n实验任务3\n\n\n\n\n\n\n\n\n下面的程序的功能是将 mov ax,4c00h  之前的指令复制到内存 0:200 处，补全程序。上机调试，跟踪运行结果。\nassume cs:code\n\ncode segment\n\nmov ax,____\nmov ds,ax\nmov ax,0020h\nmov es,ax\nmov bx,0\nmov cx,____\ns:  mov al,[bx]\nmov es:[bx],al\ninc bx\nloop s\nmov ax,4c00h\nint 21h\n\ncode ends\n\nend\n\n提示：\n\n复制的是什么？从哪里到哪里？\n复制的是什么？有多少个字节？你如何知道要复制的字节的数量？\n\n\n答：\n复制的是可执行文件的机器指令，从 cs 复制到内存 20:0 处，故第一个空填入 cs\n通过 u 命令对程序进行反汇编，可得知每条指令对应的机器码和其所占用的字节数\n\ninc register 这种类型的指令占用 1 Byte\nmov register,register 和 loop 类型的指令占用 2 Byte，如 MOV DS,AX，对应的机器码为8ED8\nmov register,value 这种类型的指令占用 3 Byte\n\nassume cs:code\n\ncode segment\n\n\tmov ax,cs          ; 2B\n\tmov ds,ax          ; 2B\n\tmov ax,0020h       ; 3B\n\tmov es,ax          ; 2B\n\tmov bx,0           ; 3B\n\tmov cx,23          ; 3B\ns:  mov al,[bx]        ; 2B\n\tmov es:[bx],al     ; 2B\n\tinc bx             ; 1B\n\tloop s             ; 2B\n\tmov ax,4c00h\n\tint 21h\n\ncode ends\n\nend\n\n计算逐个指令后，可得出 mov ax,4c00h 之前的指令共占 22 字节，又因为每次 loop 只会复制一个字节，则需要循环 23 次，故第二个空填入 23\n实验 5 编写、调试具有多个段的程序实验任务 1\n\n\n\n\n\n\n\n\n 将下面的程序编译、连接，用 Debug 加载、跟踪，然后回答问题。\nassume cs:code,ds:data,ss:stack\n\ndata segment\n\tdw 0123h,0456h,0789h,0abch,0defh,0fedh,0cbah,0987h\ndata ends\n\nstack segment\n\tdw 0,0,0,0,0,0,0,0\nstack ends\n\ncode segment\n\nstart: mov ax,stack\n       mov ss,ax\n       mov sp,16\n       \n       mov ax,data\n       mov ds,ax\n       \n       push ds:[0]\n       push ds:[2]\n       pop ds:[2]\n       pop ds:[0]\n       \n       mov ax,4c00h\n       int 21h\n\ncode ends\nend start\n\n\nCPU执行程序，程序返回前，data 段中的数据为多少？\nCPU 执行程序，程序返回前，cs=_____、ss=_____、ds=_____。\n设程序加载后，code 段的段地址为 X，则 data 段的段地址为 _____，stack 段的段地址为 _____。\n\n\n答：\n\n0123h,0456h,0789h,0abch,0defh,0fedh,0cbah,0987h\nCS=04AF, SS=04AE,DS=04AD\nX-2, X-1\n\n实验任务 2\n\n\n\n\n\n\n\n\n将下面的程序编译、连接，用 Debug 加载、跟踪，然后回答问题。\nassume cs:code,ds:data,ss:stack\n\ndata segment\n\tdw 0123h,0456h\ndata ends\n\nstack segment\n\tdw 0,0\nstack ends\n\ncode segment\n\nstart: mov ax,stack\n    mov ss,ax\n    mov sp,16\n\n    mov ax,data\n    mov ds,ax\n\n    push ds:[0]\n    push ds:[2]\n    pop ds:[2]\n    pop ds:[0]\n\n    mov ax,4c00h\n    int 21h\n\ncode ends\nend start\n\n\nCPU执行程序，程序返回前，data 段中的数据为多少？\nCPU 执行程序，程序返回前，cs=_____、ss=_____、ds=_____。\n设程序加载后，code 段的段地址为 X，则 data 段的段地址为 _____，stack 段的段地址为 _____。\n对于如下定义的段：\n\nname segement\n...\nname ends\n\n​        如果段中的数据占 N 个字节，则程序加载后，该段实际占有的空间为 _____。\n\n答：\n\n23 01 56 04\nCS=04AF, SS=04AE, DS=04AD\nX-2, X-1\n\n\n实验任务 3\n\n\n\n\n\n\n\n\n 将下面的程序编译、连接，用 Debug 加载、跟踪，然后回答问题。\nassume cs:code,ds:data,ss:stack\n\ncode segment\nstart: \n\tmov ax,stack\n    mov ss,ax\n    mov sp,16\n\n    mov ax,data\n    mov ds,ax\n\n    push ds:[0]\n    push ds:[2]\n    pop ds:[2]\n    pop ds:[0]\n\n\tmov ax,4c00h\n\tint 21h\ncode ends\n\ndata segment\n\tdw 0123h,0456h\ndata ends\n\nstack segment\n\tdw 0,0\nstack ends\n\nend start\n\n\nCPU执行程序，程序返回前，data 段中的数据为多少？\nCPU 执行程序，程序返回前，cs=_____、ss=_____、ds=_____。\n设程序加载后，code 段的段地址为 X，则 data 段的段地址为 _____，stack 段的段地址为 _____。\n\n\n答：\n\n仍不变，为：21 01 56 04 ...\nCS=04AD, SS=04B1,DS=04B0\nX+3, X+4\n\n实验任务 4\n\n\n\n\n\n\n\n\n如果将实验任务 1、2 和 3 题中的最后一条伪指令“end start”改为“end”（也就是说不指明程序的入口），则哪个程序仍然可以正常执行？请说明原因\n\n答：\n第三题的可以正常执行，因为它的代码段在前面，而前两题的程序都是数据段放在前面，没有标记程序的入口程序则会将 IP 指向到程序的最上方，也就是数据段，从而将数据段的机器码错误地当做指令去执行，那显然是错误的。\n实验任务 5\n\n\n\n\n\n\n\n\n程序如下，编写 code 段中的代码，将 a 段和 b 段中的数据依次相加到 c 段中。\nassume cs:code\na segment\n\tdb 1,2,3,4,5,6,7,8\na ends\nb segment\n\tdb 1,2,3,4,5,6,7,8\nb ends\nc segment\n\tdb 0,0,0,0,0,0,0,0\nc ends\ncode segment\nstart:\n\t?\ncode ends\nend start\n\n答：\n首先能想到的最简单粗暴的办法就是不断的更换 DS 去计算 a 段和 b 段的数据，代码如下，显得非常冗余\nassume cs:code\na segment\n\tdb 1,2,3,4,5,6,7,8\na ends\nb segment\n\tdb 1,2,3,4,5,6,7,8\nb ends\nc segment\n\tdb 0,0,0,0,0,0,0,0\nc ends\ncode segment\nstart:\n\tmov cx,8\n\tmov bx,0\n\ns:  mov dx,0\n\n    mov ax,a\n    mov ds,ax\n    add dx,[bx]\n    \n    mov ax,b\n    mov ds,ax\n    add dx,[bx]\n    \n    mov ax,c\n    mov ds,ax\n    mov [bx],dx\n    \n    inc bx\n\tloop s\n\n\tmov ax,4c00h\n\tint 21h\ncode ends\nend start\n\n但通过前几个实验，我们可以知道 a 段和、b 段和 c 段都是可以通过计算而得出来的，如果a段的地址为X:0, 那么 b 段的地址则为 X:10, c 段的地址则为 X:20，那么我们就可以利用这个特性去简化代码了，如下：\nassume cs:code\n\na segment\n    db 1,2,3,4,5,6,7,8\na ends\n\nb segment\n    db 1,2,3,4,5,6,7,8\nb ends\n\nc segment\n    db 0,0,0,0,0,0,0,0\nc ends\n\ncode segment\nstart:\n    mov ax,a\n    mov ds,ax\n    mov cx,8\n    mov bx,0\n    mov si,10h\n    mov di,20h\ns:  \n    mov ax,[bx]\n    add ax,[bx+si]\n    mov [bx+di],ax\n    add bx,2\n    loop s\n\n    mov ax,4c00h\n    int 21h\ncode ends\n\nend start\n\n实验任务 6\n\n\n\n\n\n\n\n\n程序如下，编写 code 段中的代码，用 push 指令将 a 段中的前 8 个字型数据，逆序存储到 b 段中。\nassume cs:code\na segment\n\tdw 1,2,3,4,5,6,7,8,9,0ah,0bh,0ch,0dh,0eh,0fh,0ffh\na ends\nb segment\n\tdw 0,0,0,0,0,0,0,0\nb ends\ncode segment\n\t?\ncode ends\nend start\n\n答：\n根据题目的要求可知，我们将 b 段设为栈，长度为 16 字节，push 的时候刚好就可以将 a 段的前 8 个数据逆序，代码如下：\nassume cs:code\na segment\n    dw 1,2,3,4,5,6,7,8,9,0ah,0bh,0ch,0dh,0eh,0fh,0ffh\na ends\nb segment\n    dw 0,0,0,0,0,0,0,0\nb ends\ncode segment\nstart:\n    mov ax,b\n    mov ss,ax\n    mov sp,16\n    mov cx,8\n    mov ax,a\n    mov ds,ax\n    mov bx,0\ns:  push [bx]\n    add bx,2\n    loop s\n\n    mov ax,4c00h\n    int 21h\ncode ends\nend start\n\n\n\n实验 6 实践课程中的程序实验任务 1\n\n\n\n\n\n\n\n\n将课程中所有讲解过的程序上机调试，用 Debug 跟踪其执行过程，并在过程中进一步理解所讲内容。\n实验任务 2\n\n\n\n\n\n\n\n\n编程，完成问题7.9中的程序。\n问题 7.9：将 datasg 段中每个单词的前 4 个字母改为大写字母\nassume cs:codesg,ss:stacksg,ds:datasg\n\nstacksg segment\n  dw 0,0,0,0,0,0,0,0\nstacksg ends\n\ndatasg segment\n  db '1. display      '\n  db '2. brows        '\n  db '3. replace      '\n  db '4. modify       '\ndatasg ends\n\ncodesg segment\n  start: \ncodesg ends\n\nend start\n\n答：\nassume cs:codesg,ss:stacksg,ds:datasg\n\nstacksg segment\n  dw 0,0,0,0,0,0,0,0\nstacksg ends\n\ndatasg segment\n  db '1. display      '\n  db '2. brows        '\n  db '3. replace      '\n  db '4. modify       '\ndatasg ends\n\nstacksg segment\n\tdw 0,0,0,0,0,0,0,0\nstacksg ends\n\ncodesg segment\n\n  start: mov ax,stacksg\n  \t     mov ss,ax\n  \t     mov sp,16\n  \t\t mov ax,datasg\n  \t     mov ds,ax\n  \t     mov cx,4\n  \t     mov bx,0\n  \t  s0:push cx\n  \t     mov cx,4\n  \t     mov si,0\n      s: mov al,[bx+si+3]\n         and al,11011111B\n         mov [bx+si+3],al\n         inc si\n         loop s\n         \n         add bx,16\n         pop cx\n         loop s0\n         \n         mov ax,4c00h\n         int 21h\n         \ncodesg ends\n\nend start\n\n实验 7 寻址方式在结构化数据访问中的应用\n\n\n\n\n\n\n\n\nPower idea 公司从 1975 年成立一直到 1995 年的基本情况如下\n\n\n\n年份\n收入(千美元)\n雇员(人)\n人均收入(千美元)\n\n\n\n1975\n16\n3\n?\n\n\n1976\n22\n7\n?\n\n\n1977\n382\n9\n?\n\n\n1978\n1356\n13\n?\n\n\n1979\n2390\n28\n?\n\n\n1980\n8000\n38\n?\n\n\n…\n…\n…\n…\n\n\n1995\n5937000\n17800\n?\n\n\ndata segment\n   db '1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982', '1983'\n   db '1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992'\n   db 1993, 1994, 1995!\n   ;以上是表示21年的21个字符串\n   \n   dd 16,22,382,1356,2390, 8000, 16000,24486,50065,97479,140417,197514\n   dd 345980, 590827, 803530,1183000,1843000,2759000, 3753000, 4649000,5937000\n   ;以上是表示21年公司总收入的21个 dword 型数据\n   \n   dw 3,7,9,13,28, 38,130,220,476, 778, 1001, 1442,2258,2793, 4037, 5635, 8226\n   dw 11542, 14430,15257,17800\n   ;以上是表示21年公司雇员人数的21个word型数据\ndata ends\ntable segment\ndb 21 dup ('year summ ne ??)\ntable ends\n实验 10 编写子程序\n\n\n\n\n\n\n\n\n在指定的位置，用指定的颜色，显示一个用 0 结束的字符串。\n参数：(dh)=行号，(dl)=列号\n​            (cl)=颜色，ds:si 指向字符串的首地址。\nassume cs:code\ndata segment\n    db 'Welcome to masm!',0\ndata ends\n\ncode segment\n\nstart:  mov dh,8\n        mov dl,3\n        mov cl,2\n        mov ax,data\n        mov ds,ax\n        mov si,0\n        call show_str\n\n        mov ax,4c00h\n        int 21h\nshow_str:\n        mov ds,b800h\n\n\ncode ends\nend start\n\n","slug":"assembly/Assembly_Language_Lab_In_8086_PC","date":"2023-08-22T12:56:51.000Z","categories_index":"汇编","tags_index":"汇编","author_index":"Joshlee"},{"id":"0e64c25e3be51245c5ad83f092c399cf","title":"摘录 -《被讨厌的勇气》","content":"被讨厌的勇气：“自我启发之父”阿德勒的哲学课第一夜 我们的不幸是谁的错？\n无论过去发生了什么样的事情，现在的状态取决于你赋予既有事件的意义。\n\n人并不受过去的原因所左右，而是朝着自己定下的目标前进\n\n重要的不是被给予了什么，而是如何去利用被给予的东西。\n\n无论是继续选择与之前一样的生活方式还是重新选择新的生活方式，那都在于你自己。\n\n无论之前的人生发生过什么，都对今后的人生如何度过没有影响。\n第二夜 一切烦恼都来自人际关系\n考生会想“如果考中的话人生就会一片光明”，公司职员则会想“如果能够改行的话一切都会顺利发展”。但是，很多情况下即使那些愿望实现了，事态也不会有太大的变化。\n\n首先让其接受“现在的自己”，不管结果如何，首先让其树立起向前迈进的勇气。阿德勒心理学把这叫作“鼓励”。\n\n之所以感觉孤独并不是因为只有你自己一个人，感觉自己被周围的他人、社会和共同体所疏远才会孤独。我们要想体会孤独也需要有他人的存在。也就是说，人只有在社会关系中才会成为“个人”。\n\n你由于太惧怕人际关系所以才会变得讨厌自己，你是在通过自我厌弃来逃避人际关系。\n\n蹒跚学步的孩子学会独自站立；他们学会语言，可以与周围的人自由沟通。我们都有想要摆脱无力状态、追求进步的普遍欲求。人类史上的科学进步也是“追求优越性”的结果。\n\n自卑感本身并不是坏事。这一点你能够理解吧？就像阿德勒说过的那样，自卑感也可以成为促成努力和进步的契机\n\n例如，虽然对学历抱有自卑感，但若是正因为如此，才下定“我学历低所以更要付出加倍的努力”之类的决心，那反而成了好事。\n\n自卑情结是指把自己的自卑感当作某种借口使用的状态\n\n具体就像“我因为学历低所以无法成功”或者“我因为长得不漂亮所以结不了婚”之类的想法。像这样在日常生活中大肆宣扬“因为有A所以才做不到B”这样的理论，这已经超出了自卑感的范畴，它是一种自卑情结。\n\n如果有人骄傲自大，那一定是因为他有自卑感”。\n\n担心如果不那么做的话，就会得不到周围的认可。这完全是一种优越情结。\n\n通过把自卑感尖锐化来实现异常优越感的模式。具体就是指夸耀不幸。\n\n就是说那些津津乐道甚至是夸耀自己成长史中各种不幸的人。而且，即使别人想要去安慰或者帮助其改变，他们也会用“你无法了解我的心情”来推开援手。\n\n例如，我的身高很矮。对此，心善的人会用“没必要在意”或者“人的价值并不由身高决定”之类的话来安慰我。但是，此时我如果甩出“你怎么能够理解矮子的烦恼呢！”之类的话加以拒绝的话，那谁都会再无话可说。如此一来，恐怕周围的人一定会小心翼翼地来对待我吧。\n\n阿德勒甚至指出：“在我们的文化中，弱势其实非常强大而且具有特权。”\n\n在我们的文化中，如果要问谁最强大，那答案也许应该是婴儿。婴儿其实总是处于支配而非被支配的地位。”婴儿就是通过其弱势特点来支配大人。并且，婴儿因为弱势所以不受任何人的支配。\n\n“无法真心祝福过得幸福的他人”，那就是因为站在竞争的角度来考虑人际关系，把他人的幸福看作“我的失败”，所以才无法给予祝福。\n\n关于权力之争，还有一点需要注意。那就是无论认为自己多么正确，也不要以此为理由去责难对方。这是很多人都容易陷落进去的人际关系圈套。\n\n当人能够感觉到“与这个人在一起可以无拘无束”的时候，才能够体会到爱。既没有自卑感也不必炫耀优越性，能够保持一种平静而自然的状态。真正的爱应该是这样的。\n第三夜 让干涉你生活的人见鬼去\n阿德勒心理学否定寻求他人的认可。\n\n在犹太教教义中有这么一句话：“倘若自己都不为自己活出自己的人生，那还有谁会为自己而活呢？”\n\n基本上，一切人际关系矛盾都起因于对别人的课题妄加干涉或者自己的课题被别人妄加干涉。只要能够进行课题分离，人际关系就会发生巨大改变。\n\n可以把马带到水边，但不能强迫其喝水\n\n如果你正在为自己的人生而苦恼——这种苦恼源于人际关系——那首先请弄清楚“这不是自己的课题”这一界限；然后，请丢开别人的课题。这是减轻人生负担，使其变得简单的第一步。\n\n假设他们进行了更加直接、更加激烈的反对，父亲大发雷霆，母亲痛哭流涕，总之都想方设法地反对，甚至威胁说绝对不会承认图书管理员儿子，如果不和哥哥一起继承家族事业就与你断绝亲子关系。\n\n如何克服这种“不认可”的感情，那并不是你的课题，而是你父母的课题。你根本不需要在意。\n\n关于自己的人生你能够做的就只有“选择自己认为最好的道路”。另一方面，别人如何评价你的选择，那是别人的课题，你根本无法左右。\n\n人为什么会如此在意别人的视线呢？阿德勒心理学给出的答案非常简单，那就是因为你还不会进行课题分离。把原本应该是别人的课题也看成是自己的课题。\n\n在意你的脸的只有你自己\n\n首先要思考一下“这是谁的课题”。然后进行课题分离——哪些是自己的课题，哪些是别人的课题，要冷静地划清界限。而且，不去干涉别人的课题也不让别人干涉自己的课题。这就是阿德勒心理学给出的具体而且有可能彻底改变人际关系烦恼的具有划时代意义的观点。\n\n课题分离并不是人际关系的最终目标，而是入口。\n\n如果对方为自己做了什么——即使那不是自己所期望的事情——自己也必须给予报答。这其实并非是不辜负好意，而仅仅是受回报思想的束缚。无论对方做什么，决定自己应该如何做的都应该是自己。\n\n羁绊的本质其实是回报思想\n\n如果人际关系中有“回报思想”存在，那就会产生“因为我为你做了这些，所以你就应该给予相应回报”这样的想法。当然，这是一种与课题分离相悖的思想。我们既不可以寻求回报，也不可以受其束缚\n\n为了满足别人的期望而活以及把自己的人生托付给别人，这是一种对自己撒谎也不断对周围人撒谎的生活方式。\n\n选择了不自由生活方式的大人看着自由活在当下的年轻人就会批判其“享乐主义”。当然，这其实是为了让自己接受不自由生活而捏造出的一种人生谎言。选择了真正自由的大人就不会说这样的话，相反还会鼓励年轻人要勇于争取自由。\n\n自由就是被别人讨厌\n\n毫不在意别人的评价、不害怕被别人讨厌、不追求被他人认可，如果不付出以上这些代价，那就无法贯彻自己的生活方式，也就是不能获得自由。\n\n“应该喜欢我”或者“我已经这么努力了还不喜欢我也太奇怪了”之类的想法也是一种干涉对方课题的回报式的思维。\n\n获得幸福的勇气也包括“被讨厌的勇气”。一旦拥有了这种勇气，你的人际关系也会一下子变得轻松起来。\n第四夜 要有被讨厌的勇气\n把人看作不可分割的存在和作为“整体的我”来考虑的方式叫作“整体论”。\n\n阿德勒心理学认为“一切烦恼皆源于人际关系”。不幸之源也在于人际关系。反过来说就是，幸福之源也在于人际关系。\n\n把对自己的执著(self interest)变成对他人的关心(social interest)。\n\n我们首先是作为共同体的一员从属于共同体，能够感觉到在共同体中有自己的位置并能体会到“可以在这里”，也就是拥有归属感，这是人的基本欲求。\n\n例如，学业、工作、交友，还有恋爱和结婚等，这一切都与寻求归属感紧密相关的。\n\n阿德勒心理学认为归属感不是仅仅靠在那里就可以得到的，它必须靠积极地参与到共同体中去才能够得到。\n\n无论是你还是我，我们都不是世界的中心，必须用自己的脚主动迈出一步去面对人际关系课题\n\n不是考虑“这个人会给我什么”，而是要必须思考一下“我能给这个人什么”。这就是对共同体的参与和融入。\n\n当我们在人际关系中遇到困难或者看不到出口的时候，首先应该考虑的是“倾听更大共同体的声音”这一原则。\n\n假设在你的学校教师是绝对的权力主导者，但那种权力或权威只是通用于学校这个小的共同体的一种常识，其他什么都不是。如果按照“人的社会”这个共同体来考虑的话，你和教师都是平等的“人”。如果被提出不合理的要求，那就可以正面拒绝。\n\n如果是因为你的反对就能崩塌的关系，那么这种关系从一开始就没有必要缔结，由自己主动舍弃也无所谓。活在害怕关系破裂的恐惧之中，那是为他人而活的一种不自由的生活方式。\n\n关于以育儿活动为代表的一切与他人的交流，阿德勒心理学都采取“不可以表扬”的立场。\n\n不可以批评也不可以表扬，这就是阿德勒心理学的立场。\n\n表扬这种行为含有“有能力者对没能力者所做的评价”这方面的特点\n\n有的母亲会赞美帮忙准备晚饭的孩子说“你真了不起”。但是，如果是丈夫做了同样的事情则一般不会表扬说“你真了不起”吧。\n\n希望被别人表扬或者反过来想要去表扬别人，这是一种把一切人际关系都理解为“纵向关系”的证明。你也是因为生活在纵向关系中，所以才希望得到表扬\n\n自卑感原本就是从纵向关系中产生的一种意识。只要能够对所有人都建立起“虽不同但平等”的横向关系，那就根本不会产生自卑情结。\n\n假如你会因为得到表扬而感到喜悦，那就等于是从属于纵向关系和承认“自己没能力”。因为表扬是“有能力的人对没能力的人所作出的评价”。\n\n如果以获得表扬为目的，那最终就会选择迎合他人价值观的生活方式\n\n首先应该进行课题分离，然后应该在接受双方差异的同时建立平等的横向关系。“鼓励”则是这种基础之上的一种方法。\n\n被表扬是得到他人“很好”之类的评价\n第五夜 认真的人生“活在当下”\n“自我接纳”“他者信赖”和“他者贡献”。\n\n自我接纳是指假如做不到就诚实地接受这个“做不到的自己”，然后尽量朝着能够做到的方向去努力，不对自己撒谎。\n\n对得了60分的自己说“这次只是运气不好，真正的自己能得100分”，这就是自我肯定；与此相对，在诚实地接受60分的自己的基础上努力思考“如何才能接近100分”，这就是自我接纳。\n\n你现在认为“无条件地信赖别人只会遭到背叛”。但是，决定背不背叛的不是你，那是他人的课题。你只需要考虑“我该怎么做”。\n\n无条件的信赖是搞好人际关系和构建横向关系的一种“手段”。如果你并不想与那个人搞好关系的话，也可以用手中的剪刀彻底剪断关系，因为剪断关系是你自己的课题。\n\n你现在一味地担心“被背叛”，也只关注因此受到的伤痛。但是，如果不敢去信赖别人，那最终就会与任何人都建立不了深厚的关系。\n\n如果关系浅，破裂时的痛苦就会小，但这种关系在生活中产生的喜悦也小。只有拿出通过“他者信赖”进一步加深关系的勇气之后，人际关系的喜悦才会增加，人生的喜悦也会随之增加。\n\n悲伤的时候尽管悲伤就可以。因为，正是想要逃避痛苦或悲伤才不敢付诸行动，以至于与任何人都无法建立起深厚的关系。\n\n人际关系不顺利既不是因为口吃也不是因为脸红恐惧症，真正的问题在于无法做到自我接纳、他者信赖和他者贡献，却将焦点聚集到微不足道的一个方面并企图以此来评价整个世界。这就是缺乏人生和谐的错误生活方式。\n\n如果人生是一条线，那么人生规划就有可能。但是，我们的人生只是点的连续。计划式的人生不是有没有必要，而是根本不可能。\n\n无论你过着怎样的刹那，即使有人讨厌你，只要没有迷失“他者贡献”这颗引导之星，那么你就不会迷失，而且做什么都可以。即使被讨厌自己的人讨厌着也可以自由地生活。\n\n“必须有人开始。即使别人不合作，那也与你无关。我的意见就是这样。应该由你开始，不用去考虑别人是否合作。”\n","slug":"life/exceprts_the_courage_to_be_disliked","date":"2023-07-18T05:48:25.000Z","categories_index":"生活","tags_index":"摘录,读书","author_index":"Joshlee"},{"id":"8a89322b01b8dbf1c4abca1aef01be31","title":"摘录 -《人性的弱点》","content":"\n\nChapter 01 人际关系的基本技巧\n\n\n\n\n\n\n\n\n你都看到了——这就是人性。作恶者怪罪所有人，却从不悔过。世人皆是如此。\n\n\n\n\n\n\n\n\n\n人并非理性生物。他们由情感驱使，被偏见支配，傲慢与虚荣是他们的动力之源。\n\n\n\n\n\n\n\n\n\n「原则 1：不要批评，不要指责，不要抱怨」\n\n\n\n\n\n\n\n\n\n“我的能力在于激发周围人的热情，”施瓦布说，“我拥有的最大资本，是赞赏和鼓励，我以此方式激发人们的潜能。\n\n\n\n\n\n\n\n\n\n我们总是对伴侣的付出习以为常，却忘记了他们也需要被称赞、被感激。\n\n\n\n\n\n\n\n\n\n阿谀奉承当然注定失败。明辨是非的人一眼就能看穿其肤浅与虚伪。当然，也有些人恰恰相反，对赞美的渴求往往会令其不辨真假照单全收，正如久饿之人会饥不择食一样。\n\n\n\n\n\n\n\n\n\n那么赞美和奉承究竟有何分别？前者真诚，后者虚伪；前者无私，后者自私；前者发自肺腑，后者流于表面；前者为世人所歌颂，后者为世人所不齿。\n\n\n\n\n\n\n\n\n\n与人打交道时请不要忘记，我们身边的每个人都是渴求认同的平凡人。普天之下的每一颗心，都会因他人的赞许而欢愉。\n\n\n\n\n\n\n\n\n\n此生之路，我将走过；走过这一次，便再也无法重来。所有力所能及的善行，所有充盈于心的善意，我将毫不吝惜，即刻倾予。我将再不拖延，再不淡漠，只因此生之路，再也无法重来。\n\n\n\n\n\n\n\n\n\n爱默生曾经说过：“我遇见的每个人都必定在某一方面胜于我。正因如此，我向每个人学习。”\n\n\n\n\n\n\n\n\n\n「原则 2：真心实意地感谢他人、赞美他人」\n\n\n\n\n\n\n\n\n\n普天之下唯一能够影响他人的方式，就是找出他们想要什么，并且教给他们如何获得。\n\n\n\n\n\n\n\n\n\n下一次，你需要说服别人的时候，请先不要冒失地开口，喋喋不休地讲自己想要什么。在开口之前，先问问自己：“怎样才能让对方主动自发地去做这件事？”\n\n\n\n\n\n\n\n\n\n请记得：“说服别人的首要途径，是引发对方的强烈欲求。能者纵横四海，庸者踽踽独行。” \n\n\n\n\n\n\n\n\n\n「原则 3：激发他人的需求」 \nChapter 02 赢得他人喜爱的六个方式\n\n\n\n\n\n\n\n\n人们真正关心的只有自己，这一点永远不会变，无论今天还是明天，无论现在还是未来。\n\n\n\n\n\n\n\n\n\n他清楚地记得每一位用人的名字，连洗碗工的名字都叫得出来。他对民众发自内心的关爱可见一斑。\n\n\n\n\n\n\n\n\n\n建立对他人的兴趣，真心诚意地关注他人\n\n\n\n\n\n\n\n\n\n面带微笑的人在管理、教学和营销上能做出更大成绩，子女也更有幸福感。微笑比蹙眉传递的信息要丰富得多，因而在教学中，鼓励比惩罚有效。\n\n\n\n\n\n\n\n\n\n如果你希望人们乐于同你相处，那你自己要先乐于和对方相处。\n\n\n\n\n\n\n\n\n\n我改掉了批评的习惯，以赞许代替抱怨。我也不再一天到晚把我要怎样挂在嘴边，而是试着从别人的视角看待问题。这些改变真的颠覆了我的生活。现在的我好似变成了完全不同的人，更幸福，内心也更富足，还收获了友谊和快乐——人生中真正重要的两件事。\n\n\n\n\n\n\n\n\n\n人们往往认为感觉先于行为，但实际上，感觉与行为是同步的。相较于情绪，个人意志对行为的影响更为直接，只要调整行为，我们就能够间接地调整情绪。\n\n\n\n\n\n\n\n\n\n无论对于何人，无论以何种语言，自己的名字都是世界上最甜蜜最重要的词汇\n\n\n\n\n\n\n\n\n\n假如你希望别人躲着你，在背后嘲笑你甚至鄙视你，就请这样做吧——不听任何人说话，一味谈论自己；如果在别人说话的时候想到了什么，不等对方说完就直接插嘴。\n\n\n\n\n\n\n\n\n\n那些只在乎自己的人，都是尚未开化的凡庸之辈。无论他们受过多高的教育，他们都尚未开化。\n\n\n\n\n\n\n\n\n\n假如你立志要能言善辩，请先学会专注聆听。做一个有趣的人，并对他人感兴趣。问对方乐于回答的问题，鼓励他们谈论自己的经历。\n\n\n\n\n\n\n\n\n\n「原则1：建立对他人的兴趣，真心诚意地关注他人」\n\n\n\n\n\n\n\n\n\n「原则2：微笑」\n\n\n\n\n\n\n\n\n\n「原则3：无论对于何人，无论以何种语言，自己的名字都是世界上最甜蜜最重要的词汇」\n\n\n\n\n\n\n\n\n\n「原则 4：专注地倾听，鼓励他人谈论自己」\n\n\n\n\n\n\n\n\n\n「原则 5：谈论对方感兴趣的事情」\n\n\n\n\n\n\n\n\n\n「原则6：真心实意地让对方知道他有多重要」\nChapter 03 如何让他人想你之所想\n\n\n\n\n\n\n\n\n正如本杰明·富兰克林的智慧箴言所述：“争辩、抱怨和反驳或许会带来暂时的胜利，但你永远无法通过这表面上的胜利赢得对方的尊敬。”\n\n\n\n\n\n\n\n\n\n也许你总是对的，也许你总能驳倒别人，但是那又有什么意义呢。无论输赢，你都无法改变他人的想法。\n\n\n\n\n\n\n\n\n\n接受分歧。请记住这句话：“如果两个合作伙伴总是意见一致，那么其中一个人就没有存在的意义。”\n\n\n\n\n\n\n\n\n\n「原则1：赢得争论的方法只有一个，那就是避免争论」\n\n\n\n\n\n\n\n\n\n伽利略也曾说过：“你无法教会他人，唯一能做的，只是引导他自行领悟。”\n\n\n\n\n\n\n\n\n\n苏格拉底在希腊一再向信众强调：“我唯一知道的，是我一无所知。”我的智慧远远不及苏格拉底，所以我从此再也不指责任何人。事实证明此举行之有效。\n\n\n\n\n\n\n\n\n\n承认自己有可能犯错并不意味着惹祸上身，反而会令你远离纷争。你的开阔胸怀会感染对方，令对方力求如你一般公正宽容，甚至承认他也有可能是错的。\n\n\n\n\n\n\n\n\n\n“现在我确信，直言不讳地说对方错了非但没有任何益处，还会引发种种恶果。你唯一的收获就是践踏了对方的自尊，让你自己在任何场合都不受欢迎。”\n\n\n\n\n\n\n\n\n\n请不要与客户、爱人或是敌人争辩。不要直接指出他们的错误或激怒他们。请圆融处事。\n\n\n\n\n\n\n\n\n\n「原则 2：尊重他人的观点，绝不要说“你错了”」\n\n\n\n\n\n\n\n\n\n斗争无法餍足人类，退让却能令人受益匪浅。\n\n\n\n\n\n\n\n\n\n「原则 3：如果你错了，请坚决果断地承认错误」\n\n\n\n\n\n\n\n\n\n没有人愿意改变自己的想法。你无法强迫他们认同你的观点。然而如果我们温和友好，永远温和友好，也许他们终有一天会被感动。\n\n\n\n\n\n\n\n\n\n太阳可以比风更快地让人脱下外套，友好和善的态度比恫吓与暴力更有说服力。\n\n\n\n\n\n\n\n\n\n「原则 4：沟通始于友善」\n\n\n\n\n\n\n\n\n\n与人商谈时，请先强调你赞同的观点，不要急于挑明分歧。如果可能的话，请让对方了解，你们的差异在于方法而非目的。\n\n\n\n\n\n\n\n\n\n「原则 5：让对方点头称“是”」\n\n\n\n\n\n\n\n\n\n如果朋友胜过我们，他们会觉得自己很重要；如果我们胜过他们，他们中的一部分人会对此感到自卑，甚至心生妒忌。\n\n\n\n\n\n\n\n\n\n「原则 6：让对方主导谈话」\n\n\n\n\n\n\n\n\n\n「原则 7：循循善诱，让对方自行得出结论」\n\n\n\n\n\n\n\n\n\n请记住，即使对方错了，他也不会承认这一点。智者以理解代替指责。愿意这样做的人凤毛麟角，也因此出类拔萃。\n\n\n\n\n\n\n\n\n\n万事皆有因。任何想法和行为背后都有其缘由。一旦找出动机，对方的脾气秉性就尽在掌握之中。\n\n\n\n\n\n\n\n\n\n你对个人事务有多上心，对世间万物就有多冷漠。然而世人皆是如此。只要认识到这一点，你就像林肯和罗斯福一样，抓住了人际关系的本质。同理心是为人处世的制胜之道。\n\n\n\n\n\n\n\n\n\n若想让交流变得顺畅，请像重视自己的感受一样重视对方。请在商谈之初就表明议题，并在开口之前先斟酌一下，如果你是对方，你愿不愿意听这些话。如果你希望对方认可你的观点，请先接受他的观点。\n\n\n\n\n\n\n\n\n\n如果你想让人扑灭林火、购买你的产品或是向你心仪的慈善机构捐款，请先不要急于行动。闭上眼睛，站在对方的角度考虑一下，问问你自己：“对方为什么要这样做？”尽管这样很花时间，但却能够减少摩擦、化敌为友，让你少走冤枉路。\n\n\n\n\n\n\n\n\n\n「原则 8：抛开成见，将心比心」\n\n\n\n\n\n\n\n\n\n「原则 9：体谅他人的想法和愿望」\n\n\n\n\n\n\n\n\n\n每个人的行为背后都有两个原因——一个高尚的借口，和一个真正的动机。\n\n\n\n\n\n\n\n\n\n哪怕是存心欺骗的人，一旦知道你认为他真诚正直，他们也不想辜负你的信任。\n\n\n\n\n\n\n\n\n\n「原则 10：激发对方内心深处的高尚情操」\nChapter 04 如何改变他人，成为领导者\n\n\n\n\n\n\n\n\n称赞的话语如同牙医诊疗时的麻醉剂，虽然牙钻仍会令患者感到不适，但是麻醉剂能够有效地缓解疼痛。\n\n\n\n\n\n\n\n\n\n「原则 1：欲抑先扬」\n\n\n\n\n\n\n\n\n\n「原则 2：间接地引起对方的注意」\n\n\n\n\n\n\n\n\n\n「原则 3：批评对方之前，先谈谈你自己的过错」\n\n\n\n\n\n\n\n\n\n「原则 4：以引导代替命令」\n\n\n\n\n\n\n\n\n\n「原则 5：给对方留足面子」\n\n\n\n\n\n\n\n\n\n「原则 6：夸奖他人每一点微小的进步，“由衷地赞许，不吝啬赞美之词”」\n\n\n\n\n\n\n\n\n\n「原则 7：用美誉激励他人，他就会努力不辜负你的期望」\n\n\n\n\n\n\n\n\n\n如果你对孩子、爱人或是员工说他在某件事上笨手笨脚、没有天赋、毫无可取之处，你会毁了他们进步的动力；如果你采用相反的方式，充分鼓励他，指出这件事对他来说易如反掌，告诉他你充分相信他的能力或者说他一定有潜能做成这件事，那么他一定会为此竭尽全力。\n\n\n\n\n\n\n\n\n\n如果你想帮助他人进步，请记得：「原则 8：鼓励对方勇于改变，让改正错误听起来轻而易举」\n\n\n\n\n\n\n\n\n\n如果想改变对方的态度或行为，领导者须将下述建议谨记在心：\n\n实事求是。做不到的事情请不要承诺。忘记自己的私利，关注对方的利益\n目的明确。清楚知道你希望对方做什么；\n有同理心。扪心自问什么是对方真正的需求；\n换位思考。想一想对方帮你做事能得到哪些好处；\n利益交换。找到上述好处与对方需求的结合点；\n表明态度。提出请求的时候，向对方说明他如何能从中受益。\n\nChapter 05 创造奇迹的信\n\n\n\n\n\n\n\n\n人们视欣赏和认同如瑰宝，弃虚伪与逢迎如尘灰。\nChapter 06 幸福家庭生活的七个法则\n\n\n\n\n\n\n\n\n贝茜·汉博格在纽约的家事法庭工作了十一年，处理过上千起离异案件。她说男人抛妻弃子的主要原因就是妻子的喋喋不休。正如《波士顿邮报》(Boston Post)所述：“妻子的步步紧逼，将婚姻送入坟墓。”\n\n\n\n\n\n\n\n\n\n「原则 1：别唠叨了」\n\n\n\n\n\n\n\n\n\n请记住这个重要的观点：“婚姻的第一课，是学会尊重对方独有的生活之道。”\n\n\n\n\n\n\n\n\n\n「原则 2：不要试图改变对方」\n\n\n\n\n\n\n\n\n\n格莱斯顿在政敌面前是强劲对手，在家中却和蔼可亲。如果他清晨下楼发现家人都还没起床，他就会以温和的方式间接地表达他的不满。他会提高嗓音，高唱赞美诗，提醒家庭成员这位全英国最忙碌的男人正孤零零地站在楼下等他的早餐。他从不允许自己把脾气带回家，在家里总是既通情达理又善解人意。\n\n\n\n\n\n\n\n\n\n多萝西·迪克斯是研究婚姻问题的权威人士。她声称全美有一半以上的婚姻堪称失败，而这些婚姻触礁的根本原因是对伴侣的责难。这些非难徒劳无用，却令对方痛彻心扉。\n\n\n\n\n\n\n\n\n\n「原则 3：请勿责难」\n\n\n\n\n\n\n\n\n\n对于女人在化妆打扮上花费的种种努力，男人应当时时表示赞赏。男人们总是忽视女人对于时装有多么热衷。女人上街的时候，几乎很少看男人；她们的关注点完全在于街上的其他女人是怎么穿着打扮的。\n\n\n\n\n\n\n\n\n\n不要羞于让对方知道她对你有多重要。迪斯雷利贵为英格兰最伟大的政治家，却从不讳于让全世界知道他有个“多么感激他的小女人”。\n\n\n\n\n\n\n\n\n\n「原则 4：真心诚意地欣赏对方」\n\n\n\n\n\n\n\n\n\n长远来看，婚姻就由琐碎之事构筑而成，漠视这一事实的人们只能自求多福了。埃德娜·圣文森特·米莱曾用睿智的诗句总结道：“令人心碎的不是爱情的消逝，而是它消逝时我们竟懵懂不知。”\n\n\n\n\n\n\n\n\n\n「原则 5：细微之处见真情」\n\n\n\n\n\n\n\n\n\n粗鲁无疑是葬送爱情的毒药。人人对此都心知肚明，但我们对陌生人比对亲人要客气得多。我们绝不会打断陌生人的话，抱怨说：“老天爷，这个故事你要讲多少遍！”我们也不会未经允许就拆开朋友的信或是窥探他的隐私。只有对我们的家人，我们最亲近的人，我们才会为了一点小小的过失大加嘲讽。\n\n\n\n\n\n\n\n\n\n备受尊敬的诗人奥利弗·温戴尔·霍姆斯是“早餐桌上的独裁者”，在家中却是一位谦谦君子。他对家人体贴入微，甚至在失落沮丧的时候都在家人面前装作若无其事。他说，悲伤一人承受就已足够，无需让家人一同忧心分神。\n\n\n\n\n\n\n\n\n\n荷兰人有一个习俗，进家门之前要把鞋子脱在屋外的台阶上。我们应当向荷兰人学习，回家之前把工作中的烦恼都留在门外。\n\n\n\n\n\n\n\n\n\n“女人早已把这些弱点毫无保留地教给了丈夫，却不知道男人为何仍然无动于衷。男人宁愿和她吵嘴打架、吃难以下咽的饭菜惩罚自己、给她买服饰和豪车，也不愿意以她渴望的方式取悦讨好她，对此女人实在不知道该生气还是放弃。”\n\n\n\n\n\n\n\n\n\n「原则 6：谦和有礼」\n\n\n\n\n\n\n\n\n\n洛杉矶家庭关系研究所的所长保罗·波普诺博士是全美家庭生活研究方面的权威人士，曾经调查过上千个婚姻案例。波普诺博士的结论是，失败的婚姻通常由四个原因导致，按重要性排序如下\n\n性生活失调；\n对于闲暇时光该如何度过的想法不同；\n经济困难；\n身体、精神或情感状况异常。\n\n\n\n\n\n\n\n\n\n\n令婚姻生活美满，须：「原则 7读一本解析婚姻中性事的好书」\n后序 卓然于众的捷径\n\n\n\n\n\n\n\n\n培养自信的方式就是放手去做自己惧怕的事情，直至成功为止。\n译后记 你就是自己的神明\n\n\n\n\n\n\n\n\n社会心理学的观点认为，他人的期望与现实之间的差距能够促使人们对自己的行为进行调校，当人们发现行为与群体的标准和价值观相悖时，就有动机改变自身行为，适应群体。\n\n\n\n\n\n\n\n\n\n只有打破惯性思维方式，并且知行合一，才能够将书中的理论变成生活的指南针。卡耐基分享的并非技巧，而是对人性的深刻洞察；他的本意也并非取悦他人，而是帮助人们成为更好的自己。\n","slug":"life/excerpts_how_to_win_friends_and_influence_people","date":"2023-07-18T04:46:54.000Z","categories_index":"生活","tags_index":"摘录,读书","author_index":"Joshlee"},{"id":"3217b66f0cb1b9a96a16a01e025f7ee8","title":"我的专升本心路历程","content":"2023年广东普通专升本对于这次考试，我的自我评价是：寄！\n在我大一大二的时候，总能听到师兄师姐们说：插本？很简单的啦，比高考还简单，一月份（大概三、四月考）开始准备都不迟。于是我便再没留意过升本的事情，一心打比赛去了，但也好在是拿了个两个省一和一个国三，现在再回头看那些比赛，到底给我带来了什么好处呢？或许也就是一点点知识、少量金钱和备赛经历了吧。以赛促学是个很好的学习方式，有了一个明确的目标、一个想要去获得的荣誉奖项，就能提供给我们很大的学习动力 （压力），这对于一个漫无目的的学习者来说，是极好的，能收获到很多东西。但如果让我重新选择，我会选择从大一开始就泡在图书馆，去阅读，去学英语、数学和本科 CS 的课程，而不是去将大量时间花在备赛上。\n直到了大二升大三的那个暑假，比赛生涯才算是告一段落了，以深技大为目标的我，慢慢开始了解了考试的内容。我深知我的数学基础非常薄弱，肯定要比别人学的慢一些，所以我最先开始复习的科目就是高数，大一那时候没学明白了，导致要开始复习了还是纯纯的 0 基础入门，函数都不会的那种（快进到高数虐我无数遍，我待高数如初恋）。没上过普高的我学起高数来尤其的吃力，无论是学科基础还是学习能力，都落后于身边同学，这让在学校里专业课学的还不错的我备受打击。是啊，我为什么专业课学的还不错，那其实仅仅是因为在专业课上我比身边同学的学习进度要快很多，上课学的东西是我早已自学过的了，于是才能表现出游刃有余的样子，这便是超前学习所起到的作用了。但超前学习并不是任何时候都是好用的，比如我当时备考时的处境，我的基础极差，距离考试还有几个月，需要在有限时间内将分数最大化，这显然超出了我的优势圈，只会使用超前学习扩大优势实则学习能力并不强的我，打了把逆风局。\n但仔细想想，我真的学习能力很差吗？为了提高学习能力，常年吸收的网络内容都是泛知识类型的，YJango 老师的断墨寻径系列的方法论更是记忆犹新，但知道和做到之间存在着巨大的鸿沟，即使做到了，也会有着千变万化的问题出现。也正如 YJango 老师一次在飞书群中所说的那样，应试就要用应试的方法：快去刷题。从那以后我便知道了，不是学了很多的“学习方法”以后你的学习能力就会变强的，还要多切身实践，从一次次实践中调整并优化自己脑中模型的参数，以提高我们对考试的泛化能力。这就和学理科很类似，比如学数学，光“看懂”了概念本身的文字描述是远远不够的，想要真正的理解并运用，这就需要去体会更多的例子，见更多与之相关的题目，又俗称“刷题”，这样才能逐渐地“学会”。\n\n\n断墨寻径@YJango-学习流程\n\n\n所以，学习能力到底是什么？在这里我们不谈天赋，因为这是由父母的基因所决定的，我们无法改变。\n就应试考试而言的学习能力，首先是自身的学科基础，两个基础不同的人，基础好的会比基础差的那个学的更快，会更轻松，这很容易就会让基础差的人陷入自我怀疑，即使想着要“勤能补拙”，但往往很多时候也会心有余而力不足，毕竟时间是很有限的。比如职高生和普高生相比，毋容置疑的是职高生的基础会更差，职高生的两年半（没错就是两年半🏀，剩下半年用来”实习“）只用学语数英这三门课，即使是只有三门课，所学的内容也是远远少于普高，难度远远低于普高，这就导致很多东西职高生是听都没听说过的，比如高数中的极限(Limit)，而这是每个普高生都学过的东西，甚至很多普高生是学过积分(Integral)的，到了升学考试要开始用高数的时候了，普高生要做的真的仅仅是复习(Review)，而非预习(Preview)🤡。众所周知，「第一次学」和「学以前学过的东西」，两者学出来的效果是天差地别，以前学过的东西即使是忘了或当时没学明白，学起来的速度和质量上会比「第一次学」的人要好很多（天赋好且说自己没啥天赋的人请绕道），这也就间接地体现了基础好的人要比基础差的人学习能力要强。（所以大一真的要学好数学😭不要光顾着敲那几个破代码）\n其次是学习时所采用的方法、技巧和策略，这包括了如何组织和管理时间，制定学习计划，使用记忆和复习策略等\n//TODO\n想要在一场选拔性考试中取得理想成绩，我觉得有几点非常重要，任意一点没做好可能都会翻车。\n\n① 备考初期要做好充分的调研，并在过程中动态调整计划，持续接收最新有效信息，信息特别特别特别重要！ 具体要怎么做呢？当然最直接有效的办法就是请教有经验的前辈，有的话最好，没有的话也可以在各大平台（如小红书、知乎、bilibili、QQ群微信群以及一些公众号）找经验贴，了解前辈们是怎么备考的，从什么时候开始备考的，考试是怎样个流程，需要买哪些资料，有哪些课程比较好，有哪些需要避的坑等等。在备考的过程中也还是需要持续不断地接收新的信息，比如新公布的考纲、考试报名的通知、一些重要的复习资料新鲜出炉（CB398）等等。当然这些只是备考中的其中一环，并不能直接决定最终考试成绩的高低，但这确是一盏能够指引我们在漆黑中前行的照明灯，一张能够让身处迷宫中的你找到前进方向的地图。\n② 专注力至关重要，专注力是做好事情的前提。\n③ 在保证了学习时长的情况下，追求效率\n\n以上观点皆为本人拙见，欢迎评论区指正~\n最后，考完试了最好要对下答案，自己大概是多少分心里要有一个底。这是为了防止一些不可控因素导致的分数出错，成绩出来后如果与预期差异过大就可以去「成绩复核」了，虽然这种出现的概率极低，但确确实实近期是有这样的案例的。但记住，不是考完一门就立刻去对答案，而是考完全部科目，结束后去对答案！考完一门后应该好好休息和准备下一门考试，以发挥出最佳状态。\n考试成绩\n最终去向：广州南方学院-软件工程（最低录取线：398分）\n不足及改善数学\n\n\n\n\n\n\n\n\n今年高数考的实在太简单了…可能是最简单的一年，但备考过程中还是存在着不少问题\n\n专注力：经常做题时并没有静下心来，没有去排开一切外界干扰因素（手机、电脑），导致做题时效率不高\nResolution: 与世隔绝：去图书馆、使用番茄 todo APP、将电脑微信退出\n\n\n畏难心理：遇到难题就非常容易分心，走神\nResolution: 适当放弃：遇到难题思考五分钟到十分钟想不出来就直接先跳过，完成其他简单的题\n\n\n时间分配：到了 12 月份临近四级考试那会，时间几乎全分给英语了，数学直接摆烂了半个月，要很大力气才能重新拾起来，导致后续刷库课 2000 题的效率一直很低\nResolution: 合理计划：制定合理的学习计划，计划指导实践\n\n\n基础问题：刷 2000 题吃力无比：其实 2000 题中有很多涉及到基础概念的题，不理解基础概念就是做不出来\nResolution: 放平心态，不会做的就下一道，实在搞不懂就明天再看！\nResolution: 多搞基础：要重视基础，不盲目刷题，讲义上的例题比习题更加重要，优先搞懂例题\n\n\n没有注重经典例题：备考到后期却发现一些经典的例题都还是不会，幸好是考试没考到，不然真的寄了\n遗忘问题：基础阶段学的，到强化阶段（刷2000题）就忘光光了，于是又会产生抵触心理、畏难\nResolution: 持续学习：数学的学习一天都不能断\nResolution: 多遍复习：每天开始学习数学前要巩固以往学习的知识，不能学了后就丢下不管了，要多多复习！\n\n\n\n英语\n\n\n\n\n\n\n\n\n真题的阅读理解考的过于简单，但还是有错。\n\n读：没有足够的阅读训练，一些简单的文章都能做错\n缺乏语法填空训练：考场上错了好多。。。\n写：缺乏写作训练，导致考场上写的依托答辩（单词拼写不正确、小学生级别的作文）\n单词量不扎实：单词背了很多，但却没有背熟\n\n政治\n即使是往年出过的大题，依旧可能会再次出现，我就是挂在了这上面😭\n必须要早点开始背大题，凭借我的背诵能力，晚开始了真的来不及。。\n\n专业课\n要把书中的每一个概念复习到位，不要抱有任何侥幸心理（就因为一个没记清楚，简答题 10 分没了）\n代码题或许要写注释，不然不应该少这么多分的\n\n学习资源来源\n\n\n\n\n\n\n\n\n我的网盘资源：https://www.aliyundrive.com/s/ynzBxvNEHAg\n\n百度贴吧：广东专插本吧\n微信公众号\n插本政治通\n专插本高等数学\n专插本欢姐\nCB398专插本考培官网\n一寸星计算机专插本\n考研梦之家\n\n\n小红书\n各种民间微信群、QQ 群。Tips: 专插本高等数学 这个公众号会发布一些微信群。\n\n一些记录拍摄于 2022-4-28比赛当天，可谓是“最艰难”的一次比赛，因为疫情的种种限制，我们提前一个月去到了比赛地（广州），住了一个月的隔离酒店后却被告知比赛推迟了…无功而返。推迟了一次又一次，终于在这一天开始比赛了\n\n当替补选手，搭比赛场地…\n\n\n在家学习的暑假当然少不了出来做核酸啦\n\n\n回学校后的日常：图书馆抢位\n\n\n出图书馆去吃晚饭的时候，常常能看到日落\n\n\n2022-9-10，教师节和中秋节同天的那晚血月\n\n\n2022-12-24，第一次阳了，发高烧超级难受，一个星期都没法学习\n\n\n2023-01-04，爷爷也阳了，比较严重，直接住院了。晚上轮到我去陪床\n\n爷爷入睡后，去走廊上的桌子学习，时不时的要回病房查看情况\n\n\n大三下学期没回学校住了，去深圳图书馆复习的日常——排队\n\n偷偷在星巴克门外的桌椅坐着吃饭😁\n\n\n要结束了，考点居然是母校，很是怀念\n\n\n番茄todo app 的统计结果\n\n","slug":"examination/zhuanshengben_review","date":"2023-05-25T11:54:02.000Z","categories_index":"应试","tags_index":"复盘","author_index":"Joshlee"},{"id":"50552977e0ec8094596ba83ac872ee52","title":"树和二叉树","content":"\n\n树的性质\n结点数 = 总度数 + 1\n对于一颗二叉树，其总结点数为  , 度为 0 的结点个数为   ，度为 1 的结点个数为  ，度为 2 的结点个数为  ，则有：\n结点总数 = 度为 0 的个数 + 度为 1 的个数 + 度为 2 的个数，即： \n设  为分支总数，因为除了根结点以外所有结点都有且仅有一个直接前驱，所以 ，又因为这些分支由度为 1 或 2 的结点射出，则有  ，所以， ，可得 \n度为  的数和  叉树的区别\n度为  的树: 至少有一个结点的度 = \n 叉树: 允许所有节点的度 &lt; \n度为  的树: 一定是非空树，至少有  个结点\n 叉树：可以是空树\n\n\n度为  的树第  层最多有  个结点（）， 叉树同理\n高度为  的  叉树最多有  个结点（高度为的二叉树最多有个结点）\n高度为  的  叉树至少有  个结点\n高度为 、度为  的树至少有  个结点\n具有  个结点的  叉树的最小高度为 \n\n树的存储结构双亲表示法(顺序存储)顺序存储结点数据, 结点中保存父节点在数组中的下标\n优点：找父节点方便；缺点：找孩子不方便\n\n上面的树用实际代码(Java)可表示为:\njavapublic class ParentTree {\n\n    PTNode nodes[]; // 双亲表示\n\n    int n; // 结点数\n\n    public static void main(String[] args) {\n        ParentTree parentTree = new ParentTree();\n        parentTree.nodes = new PTNode[100];\n        // 根节点固定存储在0, -1表示没有双亲\n        parentTree.nodes[0] = new PTNode(\"A\", -1); \n        parentTree.nodes[1] = new PTNode(\"B\", 0);\n        parentTree.nodes[2] = new PTNode(\"C\", 0);\n        parentTree.nodes[3] = new PTNode(\"D\", 0);\n        parentTree.nodes[4] = new PTNode(\"E\", 1);\n        parentTree.nodes[5] = new PTNode(\"F\", 1);\n        parentTree.nodes[6] = new PTNode(\"G\", 2);\n        parentTree.nodes[7] = new PTNode(\"H\", 3);\n        parentTree.nodes[8] = new PTNode(\"I\", 3);\n        parentTree.nodes[9] = new PTNode(\"J\", 3);\n        parentTree.nodes[10] = new PTNode(\"K\", 4);\n    }\n\n}\n\nclass PTNode&lt;elemType&gt; {\n\n    elemType data; // 数据元素\n\n    int parent; // 双亲位置域\n\n    public PTNode(elemType data, int parent) {\n        this.data = data;\n        this.parent = parent;\n    }\n}\n## 孩子表示法（顺序+链式存储）\n顺序存储各个节点，每个节点中保存孩子链表头指针\n\n \n\n孩子兄弟表示法(链式存储) =&gt; \n\n用二叉链表存储树-左孩子右兄弟\n\n孩子兄弟表示法存储的树, 从存储视角来看形态上和二叉树类似\n森林与二叉树的转换\n本质就是用二叉链表存储森林-左孩子右兄弟\n\n森林中各个树的根结点之间视为兄弟关系\n\n\n\n二叉树(Binary tree)1. 二叉树的概念\n可为空二叉树\n任意结点的度≤2\n是有序树，左子树、右子树不可颠倒\n\n2. 特殊二叉树2.1 满二叉树高度为，含有个结点的二叉树\n特点:\n\n只有最后一层有叶子结点\n不存在度为 1 的结点\n按层序从 1 开始编号，结点i的左孩子为，右孩子为；结点i的父节点为(如果有的话)\n\n\n2.2 完全二叉树当且仅当其每个结点都与高度为的满二叉树中编号的结点一一对应时，称为完全二叉树。\n在满二叉树的基础上可去掉若干个编号更大的结点。\n特点:\n\n只有最后两层可能有叶子结点\n最多只有一个度为 1 的结点\n按层序从 1 开始编号，结点i的左孩子为，右孩子为；结点i的父节点为(如果有的话)\n\n\n2.3 二叉排序树左子树关键字 &lt; 根节点关键字 &lt; 右子树关键字，具备此性质的二叉树则称为二叉排序树\n\n2.4 平衡二叉树树上任一结点的左右子树深度差不超过1\n\n3. 二叉树的性质\n设非空二叉树中度为0、1和2的结点个数分别为，则（叶子结点比二分支结点多一个）。假设树中结点总数为，则：\n\n①\n②（树的结点数总度数）\n①②\n\n\n二叉树第  层至多有－个结点(i ≥ 1)\n\n叉树第 层至多有－个结点(i ≥ 1)\n\n\n高度为  的二叉树至多有－ 个结点(满二叉树)\n\n高度为的叉树至多有  个结点\n\n\n\n4. 完全二叉树的性质\n具有个 结点的完全二叉树的高度为或\n高为的满二叉树共有－个结点\n高为的完全二叉树至少 － 个结点至多 － 个结点 \n\n\n对于完全二叉树，可以由的结点数推出度为0、1和2的结点个数为、和\n\n完全二叉树最多只有一个度为1的结点，即或\n =&gt; 一定是奇数\n若完全二叉树有个(偶数)个结点，则必有－\n若完全二叉树有个(奇数)个结点，则必有－\n5. 二叉树的存储结构5.1 二叉树的顺序存储在二叉树的顺序存储中，一定要把二叉树的结点编号与完全二叉树对应起来\n\n的左孩子 – \n的右孩子 – \n的父节点 – \n\n最坏情况：高度为且只有个结点的单支树(所有结点只有右孩子)，也至少需要个存储单元。所以，二叉树的顺序存储结构只适合存储完全二叉树\njavapublic class SeqStorageBinaryTree {\n\n    static int maxSize = 100;\n\n    static TreeNode[] t = new TreeNode[maxSize];\n\n    public static void main(String[] args) {\n        for (int i = 1; i &lt; t.length; i++) {\n            t[i] = new TreeNode(i);\n        }\n    }\n\n}\n\nclass TreeNode {\n    /**\n     * 结点中的数据元素\n     */\n    int value;\n    /**\n     * 结点是否为空\n     */\n    boolean isEmpty;\n\n    public TreeNode(int value) {\n        this.value = value;\n        // 初始化结点为空\n        this.isEmpty = false;\n    }\n\n}\n### 5.2 二叉树的链式存储\n个结点的二叉链表共有个**空链域**![image.png](https://cdn.nlark.com/yuque/0/2021/png/12654026/1624865206947-ae5653c5-c42f-49f0-9121-153dec4c71a3.png#height=352&amp;id=XpD17&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=352&amp;originWidth=596&amp;originalType=binary&amp;ratio=1&amp;size=90534&amp;status=done&amp;style=none&amp;width=596)\njavapublic class LinkedStorageBinaryTree {\n\n    public static void main(String[] args) {\n        // 构建上图的二叉树, 后面遍历的代码实现都是基于此树.\n        TreeNodeLinked root = new TreeNodeLinked(1);\n        TreeNodeLinked node1 = new TreeNodeLinked(2);\n        TreeNodeLinked node1 = new TreeNodeLinked(2);\n        TreeNodeLinked node2 = new TreeNodeLinked(3);\n        TreeNodeLinked node3 = new TreeNodeLinked(5);\n        TreeNodeLinked node4 = new TreeNodeLinked(6);\n        TreeNodeLinked node5 = new TreeNodeLinked(7);\n        TreeNodeLinked node6 = new TreeNodeLinked(11);\n        TreeNodeLinked node7 = new TreeNodeLinked(12);\n        root.lChild = node1; root.rChild = node2;\n        node1.lChild = node3;\n        node2.lChild = node4; node2.rChild = node5;\n        node3.rChild = node6;\n        node4.lChild = node7;\n    }\n\n}\n\nclass TreeNodeLinked {\n    \n    int value; // 数据域\n    \n    TreeNodeLinked lChild, rChild; // 左、右孩子\n    \n    public TreeNodeLinked(int value) {\n        this.value = value;\n        this.lChild = null;\n        this.rChild = null;\n    }\n}\n## 6. 二叉树的遍历\n### 6.1 先序遍历(根、左、右)\njavapublic static void preOrder(TreeNodeLinked tNode) {\n    if(tNode != null) {\n        // 访问根结点\n        System.out.print(tNode.value + \"\");\n        // 递归遍历左子树\n        preOrder(tNode.lChild);\n        // 递归遍历右子树\n        preOrder(tNode.rChild);\n    }\n}\n### 6.2 中序遍历(左、根、右)\njavapublic static void midOrder(TreeNodeLinked tNode) {\n    if(tNode != null) {\n        // 递归遍历左子树\n        preOrder(tNode.lChild);\n        // 访问根结点\n        System.out.print(tNode.value + \" \");\n        // 递归遍历右子树\n        preOrder(tNode.rChild);\n    }\n}\n### 6.3 后序遍历(左、右、根)\njavapublic static void postOrder(TreeNodeLinked tNode) {\n    if(tNode != null) {\n        // 递归遍历左子树\n        preOrder(tNode.lChild);\n        // 递归遍历右子树\n        preOrder(tNode.rChild);\n        // 访问根结点\n        System.out.print(tNode.value + \" \");\n    }\n}\n### 6.4 求树的深度(后序遍历算法的变种)\njavapublic static int treeDepth(TreeNodeLinked t) {\n    if (t == null) {\n        return 0;\n    }\n    int l = treeDepth(t.lChild);\n    int r = treeDepth(t.rChild);\n    // 树的深度 = max(左子树深度, 右子树深度) + 1\n    return Math.max(l, r) + 1;\n}\n### 6.5 层序遍历(BFS)\n算法思想:\n\n\n初始化一个辅助队列\n根节点入队\n若队列非空，则队头结点出队，访问该结点，并将其左、右孩子插入队尾（如果有的话）\n重复3直至队列为空javapublic static void levelOrder(TreeNodeLinked t) {\n    // 初始化一个辅助队列\n    Queue&lt;TreeNodeLinked&gt; queue = new ArrayBlockingQueue&lt;&gt;(50);\n    // 根结点入队\n    queue.add(t);\n    while(!queue.isEmpty()) {\n        // 队头结点出队\n        TreeNodeLinked poll = queue.poll();\n        System.out.print(poll.value + \" \");\n        // 将左右孩子插入队尾\n        if(poll.lChild != null) {\n            queue.add(poll.lChild);\n        }\n        if(poll.rChild != null) {\n            queue.add(poll.rChild);\n        }\n    }\n}\n\n线索二叉树(Threaded Binary Tree)二叉树添加了直接指向节点的前驱和后继的指针的二叉树称为线索二叉树(Threaded binary tree)\n作用方便从一个指定结点出发，找到其前驱、后继；方便遍历\n存储结构\n在普通二叉树结点的基础上，增加两个标志位 lTag 和rTag\nlTag == 1 时，表示lChild指向前驱；lTag == 0时，表示lChild指向左孩子\nrTag == 1 时，表示rChild指向后继；rTag == 0时，表示lChild指向右孩子javapublic class ThreadNode {\n    /**\n     * 数据域\n     */\n    private int data;\n\n    /**\n     * 左右孩子\n     */\n    private ThreadNode lChild, rChild;\n\n    /**\n     * 左右线索标志, 1为前驱后继, 0为左右孩子\n     */\n    private int lTag, rTag;\n\n    public ThreadNode(int data) {\n        this.data = data;\n        this.lTag = 0; this.rTag = 0;\n    }\n    /* get and set... */\n}\n\n线索化二叉树中序线索化二叉树java    /**\n     * 中序线索化二叉树\n     * @param node 二叉树的根节点\n     */\n    public void threadedNodes(ThreadNode node) {\n        if (node == null) {\n            return;\n        }    \n        // 处理当前结点的前驱结点\n        threadedNodes(node.getlChild());\n        if (node.getlChild() == null) {\n            node.setlChild(pre);\n            node.setlTag(1);\n        }\n        // 处理当前结点的后继结点\n        if (pre != null &amp;&amp; pre.getrChild() == null) {\n            pre.setrChild(node);\n            pre.setrTag(1);\n        }\n        // 每处理完一个结点后, 让当前结点是下一个结点的前驱结点\n        pre = node;\n        threadedNodes(node.getrChild());\n    }\n\n遍历线索二叉树遍历中序线索二叉树java    /**\n     * 遍历中序线索二叉树\n     * @param node 根节点\n     */\n    public void threadedNodesList(ThreadNode node) {\n        ThreadNode current = node;\n        while(current != null) {\n            while(current.getlTag() == 0) {\n                current = current.getlChild();\n            }\n            System.out.println(current.getData());\n            // 如果当前结点的右指针指向的是后继结点, 则一直访问\n            while(current.getrTag() == 1) {\n                current = current.getrChild();\n                System.out.println(current.getData());\n            }\n            current = current.getrChild();\n        }\n    }\n\n堆(Heap)堆的概念\n堆(Heap)是一种特别的完全二叉树。\n堆分为两种: 最大堆(大根堆)和最小堆(小跟堆), 大顶堆在堆排序中用于升序排序，而小顶堆则是降序排序\n在最大堆中, 父节点的值比每一个子结点的值都要大。在最小堆中，父节点的值比每一个子结点都要小。这就是所谓的“堆属性”, 并且这个属性对堆中的每一个节点都成立.\n\n\n堆节点的访问数组起始位置为0情况下:\n\n父节点的左子节点在位置 \n父节点的右子节点在位置 \n子节点的父节点在位置 \n\n堆排序(Heap Sort)最优/最坏时间复杂度: \n算法思路a. 假设给定无序序列结构如下:\n1.调整成堆将待排序序列构造成一个最大堆/最小堆\nb. 此时我们从最后一个非叶子节点(arr.length/2-1或(i-1)/2 =&gt; (arr.length-1-1)/2)开始, 从左至右, 从下至上进行调整\n\nc. 找到第二个非叶子节点4, 由于[4,9,8]中9元素最大, 4和9交换\n\nd. 这时交换导致了子根节点[4,5,6]结构混乱, 继续调整, 将4和6交换\n\n此时, 就已经将一个无序序列构造成一个大顶堆了\n2.交换元素将堆顶元素与末尾元素交换, 使得最大/最小元素在数组末端\ne. 将堆顶元素9和末尾元素4进行交换\n\n3.反复执行1、2执行完2的交换元素后, 再执行1进行重新调整结构, 使其满足堆的定义, 然后继续执行2…反复执行至序列有序f. 重新调整结构, 使其满足堆定义g. 再将顶堆元素8与末尾元素5进行交换, 得到第二大元素8    e.  反复执行1、2，直至序列有序\n代码实现(Java)javaimport java.util.Arrays;\n\npublic class HeapSort {\n\n    public static void main(String[] args) {\n        int[] arr = {4, 6, 8, 5, 9};\n        heapSort(arr);\n    }\n\n    public static void heapSort(int[] arr) {\n        int temp = 0;\n        // 1. 将无序序列构建成一个堆, 根据升序降序需求选择大顶堆或小顶堆\n        for (int i = arr.length / 2 - 1; i &gt;= 0; i--) {\n            adjustHeap(arr, i, arr.length);\n        }\n        // 2.将顶堆元素与末尾元素交换, 将最大元素移动到数组末端\n        for (int j = arr.length - 1; j &gt; 0; j--) {\n            temp = arr[j];\n            arr[j] = arr[0];\n            arr[0] = temp;\n            adjustHeap(arr, 0, j);\n        }\n        // 3. 重新调整结构, 使其满足堆定义, 然后继续交换顶堆元素与当前末尾元素, 反复执行2,3, 直到整个序列有序\n\n        System.out.println(Arrays.toString(arr));\n    }\n\n    /**\n     * 将一个二叉树, 调整成大顶堆\n     * @param arr    待调整的数组\n     * @param i      表示非叶子结点在数组中索引\n     * @param length 表示对多少个元素继续调整, length是在逐渐的减少\n     */\n    public static void adjustHeap(int[] arr, int i, int length) {\n        int temp = arr[i];\n\n        // 循环将以i为父结点的树的最大值放在最顶\n        for (int k = i * 2 + 1; k &lt; length; k = k * 2 + 1) {\n            // 如果左子结点小于右子结点的值, 则k指向右子结点\n            if (k + 1 &lt; length &amp;&amp; arr[k] &lt; arr[k + 1]) {\n                k++;\n            }\n            // 如果子结点大于父节点\n            if (arr[k] &gt; temp) {\n                // 把较大值赋给当前结点\n                arr[i] = arr[k];\n                // i指向k, 继续循环比较\n                i = k;\n            } else {\n                break;\n            }\n        }\n\n        // 将temp值放到调整后的位置\n        arr[i] = temp;\n    }\n\n}\n\n哈夫曼树(Huffman Tree)概念结点的权: 有某种现实含义的数值(如：表示结点的重要性等)\n结点的带权路径长度：从树的根到该结点的路径长度（经过的边数）与该结点上的权值的乘机，简言之就是经过的边数*权值\n树的带权路径长度：树中所有叶结点的带权路径长度之和（WPL, Weighted Path Length）\n在含有n个带权叶结点的二叉树中，其中带权路径长度（WPL）最小的二叉树称为哈夫曼树，也称最优二叉树\n下图中的第二和第三颗二叉树就是哈夫曼树\n\n构造哈夫曼树\n算法思路给定个权值分别为的结点，构造哈夫曼树的算法描述如下：（1）将这个结点分别作为棵仅含一个结点的二叉树，构成森林\n（2）构造一个新结点，从中选取两颗根结点权值最小的树作为新结点的左、右子树，并且将新结点的权值置为左、右子树上根结点的权值之和\n（3）从中删除刚才选出的两棵树，同时将新得到的树加入中\n（4）重复(2)和(3)，直至中只剩下一棵树为止\n如下图:\n\n代码实现javaimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class HuffmanTree {\n\n    public static void main(String[] args) {\n        int[] arr = {1, 3, 2, 2, 7};\n        HuffmanNode root = createHuffmanTree(arr);\n        preOrder(root); // 15 7 8 3 1 2 5 2 3\n        System.out.println();\n        midOrder(root); // 7 15 1 3 2 8 2 5 3\n    }\n\n    public static HuffmanNode createHuffmanTree(int[] arr) {\n        List&lt;HuffmanNode&gt; huffmanNodes = new ArrayList&lt;&gt;();\n        for (int i : arr) {\n            huffmanNodes.add(new HuffmanNode(i));\n        }\n        while(huffmanNodes.size() &gt; 1) {\n            Collections.sort(huffmanNodes);\n            HuffmanNode parentNode = new HuffmanNode(huffmanNodes.get(0).value + huffmanNodes.get(1).value);\n            parentNode.left = huffmanNodes.get(0);\n            parentNode.right = huffmanNodes.get(1);\n            huffmanNodes.add(parentNode);\n            huffmanNodes.remove(parentNode.left);\n            huffmanNodes.remove(parentNode.right);\n\n        }\n        return huffmanNodes.get(0);\n    }\n\n    public static void preOrder(HuffmanNode node) {\n        if (node == null) {\n            return;\n        }\n        System.out.print(node.value + \" \");\n        preOrder(node.left);\n        preOrder(node.right);\n    }\n\n    public static void midOrder(HuffmanNode node) {\n        if (node == null) {\n            return;\n        }\n        midOrder(node.left);\n        System.out.print(node.value + \" \");\n        midOrder(node.right);\n    }\n\n}\n\nclass HuffmanNode implements Comparable&lt;HuffmanNode&gt; {\n\n    int value;\n\n    HuffmanNode left;\n\n    HuffmanNode right;\n\n    public HuffmanNode(int value) {\n        this.value = value;\n    }\n\n    @Override\n    public int compareTo(HuffmanNode o) {\n        return this.value - o.value;\n    }\n\n    @Override\n    public String toString() {\n        return \"HuffmanNode{\" +\n                \"value=\" + value +\n                \", left=\" + left +\n                \", right=\" + right +\n                '}';\n    }\n}\n## 哈夫曼编码(Huffman Coding)\n\n简介\n霍夫曼编码（英语：Huffman Coding），又译为哈夫曼编码、赫夫曼编码，是一种用于无损数据压缩的熵编码（权编码）算法。由美国计算机科学家大卫·霍夫曼（David Albert Huffman）在1952年发明。\nHuffman编码是可变长(VLC)编码的一种, Huffman编码是前缀编码.\n固定长度编码: 每个字符用相等长度的二进制位表示\n可变长度编码(VLC): 允许对不同字符用不等长的二进制位表示\n前缀编码(prefix code): 任何字符的编码都不是另一字符编码的前缀, 即可做到无二义地解码\n\n例子:\n这个句子“this is an example of a huffman tree”中得到的字母频率来构建哈夫曼树。句中字母的编码和频率如图所示。编码此句子需要135 bit（不包括保存树所用的空间）\n\n\n\n字母\n频率\n编码\n\n\n\nspace\n7\n111\n\n\na\n4\n010\n\n\ne\n4\n000\n\n\nf\n3\n1101\n\n\nh\n2\n1010\n\n\ni\n2\n1000\n\n\nm\n2\n0111\n\n\nn\n2\n0010\n\n\ns\n2\n1011\n\n\nt\n2\n0110\n\n\nl\n1\n11001\n\n\no\n1\n00110\n\n\np\n1\n10011\n\n\nr\n1\n11000\n\n\nu\n1\n00111\n\n\nx\n1\n10010\n\n\n算法思路\n统计字符串各个字符对应的个数\n对照字符出现的次数构建一颗哈夫曼树, 次数作为权值\n从小到大进行排序, 将每一个数据, 每个数据都是一个节点, 每个节点可以看成是一颗最简单的二叉树\n取出根结点权值最小的两颗二叉树组成一颗新的二叉树, 该新的二叉树的根节点的权值是前面两颗二叉树根节点权值的和\n再将这颗新的二叉树以根节点的权值大小再次排序, 不断重复a-b-c, 直至数列中所有数据都处理完毕构建成哈夫曼树\n\n\n根据哈夫曼树给各个字符进行规定编码(前缀编码), 向左的路径为0, 向右的路径为1\n对字符串进行哈夫曼编码处理:\n编码(压缩)\n将哈夫曼码的字符串str的长度对8取余((str.length()+7)/8)得到长度len\n创建长度为len的字节数组huffmanCodeBytes用于存放压缩的数据\n以跨度为8循环遍历str, 将取出的每8个子字符串(bit)转化为字节类型并放入huffmanCodeBytes中\n\n\n解码(解压)\n将经过哈夫曼编码的字节数组转换成二进制字符串\n遍历二进制字符串对照Huffman编码表进行解码(需要将字节转换成二进制的字符串)\n\n\n\n\n\n代码实现javaimport java.util.*;\n\npublic class HuffmanCoding {\n\n    static Map&lt;Byte, String&gt; huffmanCodesMap;\n\n    public static void main(String[] args) {\n        String str = \"this is an example of a huffman tree\";\n        System.out.println(\"source =&gt; \" + Arrays.toString(str.getBytes()));\n        byte[] zip = huffmanZip(str.getBytes());\n        System.out.println(\"压缩哈弗曼编码后 =&gt; \" + Arrays.toString(zip));\n        byte[] decode = decode(huffmanCodesMap, zip);\n        System.out.println(\"解码哈弗曼编码后 =&gt; \" + Arrays.toString(decode));\n    }\n\n    /**\n     * 哈夫曼解码\n     *\n     * @param huffmanCodesMap 哈夫曼码表\n     * @param huffmanBytes    哈夫曼字节数组\n     * @return 解码后的字节数组\n     */\n    private static byte[] decode(Map&lt;Byte, String&gt; huffmanCodesMap, byte[] huffmanBytes) {\n        StringBuilder stringBuilder = new StringBuilder();\n        // 将经过哈夫曼编码后的字节数组转换成二进制字符串\n        for (int i = 0; i &lt; huffmanBytes.length; i++) {\n            byte b = huffmanBytes[i];\n            // 判断是否是最后一个字节\n            boolean flag = (i == huffmanBytes.length - 1);\n            stringBuilder.append(byteToBitString(!flag, b));\n        }\n        // 方便进行反查\n        Map&lt;String, Byte&gt; map = new HashMap&lt;String, Byte&gt;();\n        for (Map.Entry&lt;Byte, String&gt; entry : huffmanCodesMap.entrySet()) {\n            map.put(entry.getValue(), entry.getKey());\n        }\n        List&lt;Byte&gt; list = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; stringBuilder.length(); ) {\n            int count = 1;\n            Byte b;\n            while (true) {\n                String key = stringBuilder.substring(i, i + count);\n                if ((b = map.get(key)) == null) {\n                    count++;\n                } else {\n                    break;\n                }\n            }\n            list.add(b);\n            i += count;\n        }\n        byte[] b = new byte[list.size()];\n        for (int i = 0; i &lt; b.length; i++) {\n            b[i] = list.get(i);\n        }\n        return b;\n    }\n\n    /**\n     * 将字节转换成二进制的字符串\n     *\n     * @param flag 是否需要补高位, true为需要补高位, false则不补(最后一个字节则无需补高位)\n     * @param b    byte\n     * @return 二进制字符串\n     */\n    private static String byteToBitString(boolean flag, byte b) {\n        int temp = b;\n        if (flag) {\n            temp |= 256;\n        }\n        String str = Integer.toBinaryString(temp);\n        if (flag) {\n            return str.substring(str.length() - 8);\n        } else {\n            return str;\n        }\n    }\n\n    /**\n     * 哈夫曼编码压缩\n     *\n     * @param bytes 待压缩的字节数组\n     * @return 压缩后的字节数组\n     */\n    private static byte[] huffmanZip(byte[] bytes) {\n        Map&lt;Byte, Integer&gt; countMap = new HashMap&lt;&gt;();\n        for (byte c : bytes) {\n            if (countMap.containsKey(c)) {\n                countMap.put(c, countMap.get(c) + 1);\n            } else {\n                countMap.put(c, 1);\n            }\n        }\n        HuffmanNode huffmanTreeRootNode = HuffmanTree.createHuffmanTree(countMap);\n        Map&lt;Byte, String&gt; codeMap = getCodeMap(huffmanTreeRootNode);\n        // 放到全局变量中, 方便调用测试\n        huffmanCodesMap = codeMap;\n        // 将各个字符进行哈夫曼编码\n        StringBuilder compressedStr = new StringBuilder();\n        for (byte b : bytes) {\n            compressedStr.append(codeMap.get(b));\n        }\n        // 对哈夫曼编码进行压缩\n        return zip(compressedStr.toString(), codeMap);\n    }\n\n    /**\n     * 压缩哈弗曼编码\n     *\n     * @param huffmanCodeStr 哈夫曼编码后的字符串\n     * @param codeMap        哈弗曼编码表\n     * @return\n     */\n    private static byte[] zip(String huffmanCodeStr, Map&lt;Byte, String&gt; codeMap) {\n        // 对8取余\n        int len = (huffmanCodeStr.length() + 7) / 8;\n        byte[] huffmanCodeBytes = new byte[len];\n        for (int i = 0, index = 0; i &lt; huffmanCodeStr.length(); i += 8, index++) {\n            String strByte;\n            if (i + 8 &gt; huffmanCodeStr.length()) {\n                strByte = huffmanCodeStr.substring(i);\n            } else {\n                strByte = huffmanCodeStr.substring(i, i + 8);\n            }\n            // !!!难点!!!\n            huffmanCodeBytes[index] = (byte) Integer.parseInt(strByte, 2);\n        }\n        return huffmanCodeBytes;\n    }\n\n    /**\n     * 获取哈夫曼编码表\n     *\n     * @param root 哈夫曼树头结点\n     * @return 编码表\n     */\n    private static Map&lt;Byte, String&gt; getCodeMap(HuffmanNode root) {\n        Map&lt;Byte, String&gt; map = new HashMap&lt;&gt;();\n        getRouteToMap(root, \"\", new StringBuilder(), map);\n        return map;\n    }\n\n    /**\n     * 递归获取路径\n     *\n     * @param node 哈夫曼树节点\n     * @param code 0表示左, 1表示右\n     * @param sb   拼接的路径\n     * @param map  最终形成的哈弗曼编码表\n     */\n    private static void getRouteToMap(HuffmanNode node, String code, StringBuilder sb, Map&lt;Byte, String&gt; map) {\n        StringBuilder stringBuilder = new StringBuilder(sb);\n        stringBuilder.append(code);\n        if (node == null) {\n            return;\n        }\n        if (node.left == null &amp;&amp; node.right == null) {\n            // 是叶子结点\n            map.put(node.data, stringBuilder.toString());\n            return;\n        }\n        getRouteToMap(node.left, \"0\", stringBuilder, map);\n        getRouteToMap(node.right, \"1\", stringBuilder, map);\n    }\n}\n\nclass HuffmanTree {\n\n    public static HuffmanNode createHuffmanTree(Map&lt;Byte, Integer&gt; countMap) {\n        List&lt;HuffmanNode&gt; huffmanNodes = new ArrayList&lt;&gt;();\n        for (Byte data : countMap.keySet()) {\n            Integer height = countMap.get(data);\n            huffmanNodes.add(new HuffmanNode(data, height));\n        }\n        while (huffmanNodes.size() &gt; 1) {\n            Collections.sort(huffmanNodes);\n            HuffmanNode parentNode = new HuffmanNode(huffmanNodes.get(0).height + huffmanNodes.get(1).height);\n            parentNode.left = huffmanNodes.get(0);\n            parentNode.right = huffmanNodes.get(1);\n            huffmanNodes.add(parentNode);\n            huffmanNodes.remove(parentNode.left);\n            huffmanNodes.remove(parentNode.right);\n        }\n        return huffmanNodes.get(0);\n    }\n\n}\n\nclass HuffmanNode implements Comparable&lt;HuffmanNode&gt; {\n\n    Byte data;\n\n    int height;\n\n    HuffmanNode left;\n\n    HuffmanNode right;\n\n    @Override\n    public int compareTo(HuffmanNode o) {\n        return this.height - o.height;\n    }\n\n    public HuffmanNode(int height) {\n        this.height = height;\n    }\n\n    public HuffmanNode(Byte data, int height) {\n        this.data = data;\n        this.height = height;\n    }\n\n    @Override\n    public String toString() {\n        return \"HuffmanNode{\" +\n                \"data=\" + data +\n                \", height=\" + height +\n                \", left=\" + left +\n                \", right=\" + right +\n                '}';\n    }\n}\n\n二叉排序树(BST)概念\n\n二叉排序树(Binary Sort Tree), 也称为有序二叉树(ordered binary tree)或二叉查找树(Binary Search Tree), 是一颗空树或具有以下性质的二叉树:\n\n若任意若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；\n若任意节点的右子树不空，则右子树上所有节点的值均大于它的根节点的值；\n任意节点的左、右子树也分别为二叉查找树；\n\n\nBST相比于其他数据结构的优势在于查找、插入的时间复杂度较低。为。\n\n\n\n算法\n平均\n最差\n\n\n\n空间\nO(n)\nO(n)\n\n\n搜索\nO(log n)\nO(n)\n\n\n插入\nO(log n)\nO(n)\n\n\n删除\nO(log n)\nO(n)\n\n\n\nBST是基础性数据结构，用于构建更为抽象的数据结构，如集合、多重集、关联数组等。\n\n\n插入我们将要插入的结点称为node, 则插入node\n\n如果node为空则直接返回\n如果当前要插入节点\n\n查找\n如果当前node为空, 则搜索失败\n如果要搜索的值等于当前node的值, 则查找成功\n如果当前node的值&gt;要搜索的值, 则搜索左子树; 否则搜索右子树\n\n删除BST的删除情况比较复杂, 有下面三种情况需要考虑\n\n**删除叶子节点(比如1, 4, 7, 13)    **\n\n先找到要删除的节点targetNode\n找到targetNode的父节点parent\n判断targetNode是parent的左还是右子节点对应删除\n\n\n删除只有一颗子树的节点(比如14)\n\n先找到要删除的节点targetNode\n\n找到targetNode的父节点parent\n\n确定targetNode的子节点是左子节点还是子节点\n\n确定targetNode是parent的左子节点还是右子节点\n\n如果targetNode有左子节点\n\n如果targetNode是parent的**左子节点 **=&gt; parent.left = targetNode.left;\n\n如果targetNode是parent的右子节点 =&gt; parent.right = targetNode.left;\n\n\n\n如果targetNode有右子节点\n\n如果targetNode是parent的左子节点 =&gt; parent.left = targetNode.right;\n\n如果targetNode是parent的右子节点 =&gt; parent.right = targetNode.right;\n\n\n\n\n\n删除两颗子树的节点(比如8, 3, 6)\n\n先找到要删除的节点targetNode\n找到targetNode的父节点parent\n从targetNode的右子树中找到最小的节点(中序遍历)\n用一个临时变量将最小节点的值保存并删除该结点\ntargetNode.value = temp\n\n\n\n代码实现javapublic class BinarySearchTree {\n\n    private BSTNode root = null;\n\n    public void add(BSTNode node) {\n        if (this.root == null) {\n            // root is empty then put the node.\n            this.root = node;\n        } else {\n            this.root.add(node);\n        }\n    }\n\n    public BSTNode searchParent(int targetVal) {\n        return searchParent(targetVal, this.root);\n    }\n\n    /**\n     * find the parent node of the target node\n     *\n     * @param targetVal Value of the target node\n     * @param node      BST node\n     * @return Parent node of the target\n     */\n    private BSTNode searchParent(int targetVal, BSTNode node) {\n        if (node == null) {\n            return null;\n        }\n        if ((node.left != null &amp;&amp; node.left.value == targetVal) || (node.right != null &amp;&amp; node.right.value == targetVal)) {\n            return node;\n        }\n        if (targetVal &lt; node.value) {\n            return searchParent(targetVal, node.left);\n        } else if (targetVal &gt; node.value) {\n            return searchParent(targetVal, node.right);\n        }\n        return null;\n    }\n\n    public BSTNode search(int targetVal) {\n        return search(this.root, targetVal);\n    }\n\n    private BSTNode search(BSTNode node, int targetVal) {\n        if (node == null) {\n            return null;\n        }\n        if (node.value == targetVal) {\n            return node;\n        }\n        if (node.value &gt; targetVal) {\n            return search(node.left, targetVal);\n        } else {\n            return search(node.right, targetVal);\n        }\n    }\n\n    public BSTNode searchMinNode(BSTNode node) {\n        if (node.left == null) {\n            return node;\n        }\n        return searchMinNode(node.left);\n    }\n\n    public void delete(int value) {\n        BSTNode targetNode = search(value);\n        if(targetNode == null) {\n            System.out.println(\"Cannot found target node.\");\n            return;\n        }\n        // Only one node.\n        if(root.left == null &amp;&amp; root.right == null) {\n            root = null;\n            return;\n        }\n        BSTNode parent = searchParent(value);\n        // case 1: target node is the leaf node.\n        if (targetNode.left == null &amp;&amp; targetNode.right == null) {\n            if (parent.left == targetNode) {\n                parent.left = null;\n            } else if (parent.right == targetNode) {\n                parent.right = null;\n            } else {\n                System.out.println(\"delete fail(case 1)\");\n            }\n            return;\n        }\n        // case 2: target node has only left or right child tree.\n        if (targetNode.left != null &amp;&amp; targetNode.right == null) {\n            if (parent.left == targetNode) {\n                parent.left = targetNode.left;\n            } else if (parent.right == targetNode) {\n                parent.right = targetNode.left;\n            } else {\n                System.out.println(\"delete fail(case 2)\");\n            }\n            return;\n        }\n        if (targetNode.right != null &amp;&amp; targetNode.left == null) {\n            if (parent.left == targetNode) {\n                parent.left = targetNode.right;\n            } else if (parent.right == targetNode) {\n                parent.right = targetNode.right;\n            } else {\n                System.out.println(\"delete fail(case 2)\");\n            }\n            return;\n        }\n        // case 3: target node has two child tree.\n        if (targetNode.left != null &amp;&amp; targetNode.right != null) {\n            BSTNode minNode = searchMinNode(targetNode.right);\n            int minVal = minNode.value;\n            BSTNode minNodeParent = searchParent(minNode.value);\n            // delete min node.\n            delete(minNode.value);\n            // assign the value of min node of the right child tree to the target node.\n            targetNode.value = minVal;\n        }\n    }\n\n    public static void main(String[] args) {\n        BinarySearchTree bst = new BinarySearchTree();\n        int[] arr = {8, 3, 10, 1, 6, 14, 4, 7, 13};\n        for (int i : arr) {\n            bst.add(new BSTNode(i));\n        }\n        bst.delete(6);\n        System.out.println(bst.root);\n    }\n\n}\n\nclass BSTNode {\n\n    int value;\n\n    /**\n     * left child tree\n     */\n    BSTNode left;\n\n    /**\n     * right child tree\n     */\n    BSTNode right;\n\n    public BSTNode(int value) {\n        this.value = value;\n    }\n\n    /**\n     * insert node\n     *\n     * @param node node to insert\n     */\n    public void add(BSTNode node) {\n        if (node == null) {\n            return;\n        }\n        // judge whether the value of the target node is smaller than the value of the current node.\n        if (node.value &lt; this.value) {\n            if (this.left == null) {\n                this.left = node;\n            } else {\n                this.left.add(node);\n            }\n        } else {\n            if (this.right == null) {\n                this.right = node;\n            } else {\n                this.right.add(node);\n            }\n        }\n    }\n\n    @Override\n    public String toString() {\n        return \"BSTNode{\" +\n                \"value=\" + value +\n                \", left=\" + left +\n                \", right=\" + right +\n                '}';\n    }\n}\n\n平衡二叉树(AVL树)概念\n自平衡二叉查找树, 简称平衡树(AVL树, Adelson-Velsky and Landis Tree)\n树上任一结点的左子树和右子树高度只差不超过1\n结点的平衡因子 = 左子树高 - 右子树高\n平衡二叉树的常用实现方法有红黑树、AVL、替罪羊树、Treap、伸展树等。\n\n\n算法\n平均\n最差\n\n\n\n空间\nO(n)\nO(n)\n\n\n搜索\nO(log n)\nO(log n)\n\n\n插入\nO(log n)\nO(log n)\n\n\n删除\nO(log n)\nO(log n)\n\n\n\n\n插入操作\nAVL树和二叉排序树一样，找到合适的位置插入\n新插入的结点可能导致其祖先们平衡因子改变，导致失衡\n\n\n调整”不平衡”\n找到最小不平衡子树进行调整, 记最小不平衡子树的根为A, 则:\n\n\n\n位置\n调整\n\n\n\nLL(在A的左孩子的左子树中插入导致不平衡)\n将A的左孩子右上旋\n\n\nRR(在A的右孩子的右子树中插入导致不平衡)\n将A的右孩子左上旋\n\n\nLR(在A的左孩子的右子树中插入导致不平衡)\n将A的左孩子的右孩子 先左上旋再右上旋\n\n\nRL(在A的右孩子的左子树中插入导致不平衡)\n将A的右孩子的左孩子 先右上旋再左上旋\n\n\n左旋\n创建一个新的结点newNode, 其值为最小不平衡子树的根结点的值(以下都称为当前结点)\n把newNode的左子树设置成当前结点的左子树\n把newNode的右子树设置成当前结点的右子树的左子树\n把当前结点的值换成右子树的值\n把当前结点的右子树设置成右子树的右子树\n把当前结点的左子树设置成newNode\n\n\n右旋\n创建一个新的结点newNode, 其值为最小不平衡子树的根结点的值(以下都称为当前结点)\n把newNode的右子树设置成当前结点的右子树\n把newNode的左子树设置成当前结点的左子树的右子树\n把当前结点的值换成左子树的值\n把当前结点的左子树设置成左子树的右子树\n把当前结点的右子树设置成newNode\n\n\n代码实现javapublic class AVLTree&lt;T extends Comparable&lt;T&gt;&gt; {\n\n    private AVLNode&lt;T&gt; root;\n\n    public AVLNode&lt;T&gt; search(T targetVal) {\n        return search(this.root, targetVal);\n    }\n\n    private AVLNode&lt;T&gt; searchParent(T targetVal) {\n        return searchParent(targetVal, this.root);\n    }\n\n    public void addNode(AVLNode&lt;T&gt; node) {\n        if (node == null) {\n            return;\n        }\n        if (this.root == null) {\n            this.root = node;\n            return;\n        }\n        AVLNode&lt;T&gt; parentNode = searchParent(node.value, root);\n        int cmp = node.value.compareTo(parentNode.value);\n        if (cmp &gt; 0) {\n            parentNode.right = node;\n        } else {\n            parentNode.left = node;\n        }\n        // adjust imbalance\n        if (Math.abs(getLeftTreeHeight() - getRightTreeHeight()) &gt; 1) {\n            AVLNode&lt;T&gt; minImbalanceNode = searchParent(parentNode.value);\n            if (minImbalanceNode.left == parentNode &amp;&amp; parentNode.left == node) {\n                // LL\n                rotateRight(minImbalanceNode);\n            } else if (minImbalanceNode.right == parentNode &amp;&amp; parentNode.right == node) {\n                // RR\n                rotateLeft(minImbalanceNode);\n            } else if (minImbalanceNode.left == parentNode &amp;&amp; parentNode.right == node) {\n                // LR\n                rotateLeft(minImbalanceNode);\n                rotateRight(minImbalanceNode);\n            } else if (minImbalanceNode.right == parentNode &amp;&amp; parentNode.left == node) {\n                // RL\n                rotateRight(minImbalanceNode);\n                rotateLeft(minImbalanceNode);\n            }\n\n        }\n    }\n\n    private AVLNode&lt;T&gt; search(AVLNode&lt;T&gt; node, T targetVal) {\n        if (node == null) {\n            return null;\n        }\n        int cmp = node.value.compareTo(targetVal);\n        if (cmp == 0) {\n            return node;\n        }\n        if (cmp &gt; 0) {\n            return search(node.left, targetVal);\n        } else {\n            return search(node.right, targetVal);\n        }\n    }\n\n    private AVLNode&lt;T&gt; searchParent(T targetVal, AVLNode&lt;T&gt; node) {\n        if (node == null) {\n            return null;\n        }\n        int cmp = targetVal.compareTo(node.value);\n        if ((node.left != null &amp;&amp; node.left.value == targetVal) ||\n                (node.right != null &amp;&amp; node.right.value == targetVal)) {\n            return node;\n        }\n        if (cmp &lt; 0) {\n            if (node.left == null) {\n                return node;\n            }\n            return searchParent(targetVal, node.left);\n        } else if (cmp &gt; 0) {\n            if (node.right == null) {\n                return node;\n            }\n            return searchParent(targetVal, node.right);\n        }\n        return null;\n    }\n\n    public int getTreeHeight(AVLNode&lt;T&gt; node) {\n        if (node == null) {\n            return 0;\n        }\n        return Math.max(getTreeHeight(node.left), getTreeHeight(node.right)) + 1;\n    }\n\n    public int getLeftTreeHeight() {\n        return getTreeHeight(this.root.left);\n    }\n\n    public int getRightTreeHeight() {\n        return getTreeHeight(this.root.right);\n    }\n\n    public void rotateLeft(AVLNode&lt;T&gt; node) {\n        AVLNode&lt;T&gt; newNode = new AVLNode&lt;&gt;(node.value);\n        newNode.left = node.left;\n        newNode.right = node.right.left;\n        node.value = node.right.value;\n        node.right = node.right.right;\n        node.left = newNode;\n    }\n\n    public void rotateRight(AVLNode&lt;T&gt; node) {\n        AVLNode&lt;T&gt; newNode = new AVLNode&lt;&gt;(node.value);\n        newNode.right = node.right;\n        newNode.left = node.left.right;\n        node.value = node.left.value;\n        node.left = node.left.left;\n        node.right = newNode;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {50, 26, 66, 21, 30, 60, 70, 68, 67, 99, 88, 41, 22, 55, 61, 46, 46, -10, 4, 55, 99, 46 ,40};\n        AVLTree&lt;Integer&gt; tree = new AVLTree&lt;&gt;();\n        for (int i : arr) {\n            tree.addNode(new AVLNode&lt;&gt;(i));\n        }\n        System.out.println(tree.root);\n        System.out.println(tree.search(70));\n        System.out.println(tree.getLeftTreeHeight());\n        System.out.println(tree.getRightTreeHeight());\n    }\n\n}\n\nclass AVLNode&lt;T extends Comparable&lt;T&gt;&gt; {\n\n    T value;\n\n    AVLNode&lt;T&gt; left;\n\n    AVLNode&lt;T&gt; right;\n\n    public AVLNode(T value) {\n        this.value = value;\n    }\n\n    @Override\n    public String toString() {\n        return \"AVLNode{\" +\n                \"value=\" + value +\n                \", left=\" + left +\n                \", right=\" + right +\n                '}';\n    }\n\n}\n\n","slug":"data-structure/tree","date":"2023-01-23T13:57:29.000Z","categories_index":"数据结构","tags_index":"考研,树","author_index":"Joshlee"},{"id":"f12ce06ce5d8a863449fc851c0631b6b","title":"英语基础知识","content":"\n\n速查表(Cheat Sheet)音标\n\n\n\n\n\n\n\n\nhttps://www.bilibili.com/video/BV1VL4y147vv\n\n用于不定冠词要使用不定冠词 a 还是 an，取决于名词「第一个字母」或「第一个音节」的发音：\n\n辅音发音开头用 a\n元音发音开头用 an\n\n用于单复数元音字母：a, e, i, o, u\n辅音字母：除了元音字母外的字母\n词根词缀后缀(suffix)\n\n\n\n\n\n\n\n\n大多数情况下可以根据后缀直接判断词性\n\n\n\n词缀\n解释\n例子\n\n\n\n-ion\n构成名词，表“状态，动作”等\nreaction transition cooperation\n\n\n-ness\n构成抽象名词\nfaintness n.微弱\n\n\n-ment\n构成抽象名词\nacknowledgement n.承认；感谢\n\n\n-ence\n构成抽象名词\ncircumference n.圆周dependence n.依靠insistence n.坚持\n\n\n-ian\n构成名词，表示人\nstatistician n.统计员\n\n\n-ance\n构成名词，表”性质，状态“\nappearance n.出现；外表resemblance n.相似disturbance n.扰乱\n\n\n-er\n构成名词，动词的执行者\nteenager n.青少年tanker n. 油罐车\n\n\n-or\n构成名词，动词的执行者\nactor n.演员tractor n.拖拉机refrigerator n.冰箱doctor n.医生\n\n\n-ess\n构成名词，表示女性，雌性\nheadmistress n.女校长goddess n.女神actress n.女演员\n\n\n-ent\n构成名词\ncompententstudentpresident n.总统（preside 主持）\n\n\n-ary\n构成名词；表”人，场所，物“\nSummary n.总结library n.图书馆salarysecretary n.秘书\n\n\n-ism\n构成名词，表”主义(宗教)，行为，特征“等\nmannerism n.言行举止buddhism n.佛教optimism n.乐观主义\n\n\n-ics\n构成名词，对…的研究，”学科，学术“\npediatrics n.小儿科economics n.经济学mechanics n.机械学physics n.物理学\n\n\n-logy\n构成名词，…学, …术\npsychology n.心理学ecology n.生态学geology n.地质学biology n.生物学sociology n.社会学mythology n.神话学\n\n\n-ity\n构成名词，表性质\nVelocity n.速度equality n.平等familiarity n.熟悉complexity n.复杂性\n\n\n\n\n\n\n\n-ing\n构成形容词或名词\nbowling n.保龄球\n\n\n-ive\n构成形容词或名词\nattractive adj.有吸引力的affirmative adj. 肯定的native n.本地人（nat 出生）detective n.侦探（detect 察觉）conservative adj.保守的；n.保守的人\n\n\n-ed\n构成形容词\nthreaded adj.有螺纹的\n\n\n-y\n构成形容词，表“性质”\nthready adj.线的\n\n\n-like\n构成形容词；像…似的\nThreadlike adj.线状的\n\n\n-less\n构成形容词；少，无\ncollarless n.无领的\n\n\n-al\n构成形容词\nstatistical\n\n\n-ful\n构成形容词或名词，充满…的，有…性质的\nforgetful adj.易忘的willful adj.任性的handful n.一把的spoonful n.一勺的\n\n\n-able\n构成形容词，能…的，易…的\nagreeable adj.可接受的；愉快的\n\n\n\n\n\n\n\n-ly\n构成副词\nBrotherly adv.兄弟般的monthly adv.每月的\n\n\n-ate\n构成动词\ndifferentiate v.区别\n\n\n前缀(prefix)TODO\n常见缩写(Abbreviation)\n\n\nAbbreviation\nOriginal\nAbbreviation\nOriginal\n\n\n\naren’t\nare not\ncan’t\ncannot\n\n\nhadn’t\nhad not\nwasn’t\nwas not\n\n\nshouldn’t\nShould not\nisn’t\nis not\n\n\ndoesn’t\ndoes not\ndon’t\ndo not\n\n\nmustn’t\nMust not\nweren’t\nWere not\n\n\nwouldn’t\nwould not\ndidn’t\ndid not\n\n\nI’m\nI am\nYou’re\nYou are\n\n\nHe/She/It’s\nHe/She/It is\nWe’re\nWe are\n\n\nYou’re\nYou are\nThey’re\nThey are\n\n\nshan’t\nshall not\nwon’t\nwill not\n\n\n不规则动词动词时态\n\n\n状态/时间\n过去的过去\n过去\n过去的将来\n现在\n将来\n\n\n\n一般\n\ndid一般过去时\nwould do一般过去将来时\ndo一般现在时\nwill do一般将来时\n\n\n进行\n\nwas/were doing过去进行时\nwould be doing过去将来进行时\nam/is/are doing现在进行时\nwill be doing将来进行时\n\n\n进行\nhad been doing过去完成进行时\nhave been doing现在完成进行时\nwould have been doing过去将来完成进行时\n\nwill have been doing将来完成进行时\n\n\n完成\nhad done过去完成时\nhave/has done现在完成时\nwould have done过去将来完成时\n\nwill have done将来完成时\n\n\n非谓语动词形式\n\n\n非谓语动词形式\n一般式\n进行式\n完成式\n一般式（被动）\n完成式（被动）\n\n\n\n不定式\nto do\nto be doing\nto have done\nto be done\nto have been done\n\n\n动名词\ndoing\n/\nhaving done\nbeing done\nhaving been done\n\n\n现在分词\ndoing\n/\nhaving done\nbeing done\nhaving been done\n\n\n过去分词\ndone\n/\n/\n/\n/\n\n\n语法体系总览\n数词（num.）基数词个位数（0-9）\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\nzero\none\ntwo\nthree\nfour\nfive\nsix\nseven\neight\nnine\n\n\n十到十九（10-19）\n\n\n十\n十一\n十二\n十三\n十四\n\n\n\nten\neleven\ntwelve\nthirteen\nfourteen\n\n\n十五\n十六\n十七\n十八\n十九\n\n\nfifteen\nsixteen\nseventeen\neighteen\nnineteen\n\n\n十位数，二十到九十（20-90）\n\n\n二十\n三十\n四十\n五十\n\n\n\ntwenty\nthirty\nforty\nfifty\n\n\n六十\n七十\n八十\n九十\n\n\nsixty\nseventy\neighty\nninety\n\n\n二十以上，几十几（21-99）例如：二十一 =&gt; twenty one九十九 =&gt; ninety nine十位用几十，个位用个位\n数字表达规律\n从右往左，每三位一个逗号，倒数第一个逗号之前是thousand，倒数第二个逗号之前是million，倒数第三个逗号之前是billion，倒数第四个逗号之前是trillion\n逗号之间的百位和十位都要加and，数字隔0要加and\n\n一百到九百九十九（100-999）:一百（100）=&gt; one hundred一百零一（101）=&gt; one hundred and one九百九十九（999）=&gt; nine hundred and ninety-nine\n一千到九千九千九百九十九（1000-9999）:一千（1,000） =&gt; one thousand一千零一（1,001） =&gt; one thousand and one一千零二十（1,020） =&gt; one thousand and twenty九千九百九十九（9,999） =&gt; nine thousand nine hundred and ninety-nine\n一万到一万零九百九十九（10000-10999）:一万（10,000）=&gt; ten thousand一万零一（10,001）=&gt; ten thousand and one一万零二十（10,020）=&gt; ten thousand and twenty一万零两百（10200）=&gt; ten thousand and two hundred一万零九百九十九（10,999）=&gt; ten thousand nine hundred and ninety-nine\n一万一千到九万九千九百九十九（11,000-99,999）:一万一千（11*1000=11,000）=&gt; eleven thousand一万一千零一（11,001）=&gt; eleven thousand and one一万一千零二十（11020）=&gt; eleven thousand and twenty一万一千零二百（11200）=&gt; eleven thousand two hundred九万九千九百九十九（99999）=&gt; ninety nine thousand nine hundred and ninety-nine\n十万到九十九万九千九百九十九（100000-999999）:十万（100,000）=&gt; one hundred thousand十万零一（100,001）=&gt; one hundred thousand and one十万零二十（100,020）=&gt; one hundred thousand十万零二百（100,200）=&gt; one hundred thousand and two hundred十万零二千零一（102,001）=&gt; one hundred thousang and two thousand and one九十九万九千九百九十九（999,999）=&gt; nine hundred and ninety-nine thousand nine hundred and ninety-nine\n一百万到九千九百九十九万九千九百九十九（1,000,000-99,999,999）:一百万（1,000,000）=&gt; one million一百万零一（1,000,001）=&gt; one million and one一百万零一千（1,001,000）=&gt; one million and one thousand一百零一万（1,010,000）=&gt; one million and ten thousand九千九百九十九万九千九百九十九（99,999,999）Ninety-nine million nine hundred and ninety-nine thousand and ninety-nine\n一亿到十亿以及更多（100,000,000-1,000,000,000-∞）:一亿（100,000,000）=&gt; one hundred million一亿零一（100,000,001）=&gt; one hundred million and one一亿零一千（100,001,000）=&gt; one hundred million and one thousand一亿零一百万（101,000,000）=&gt;one hundred and one million十亿（1,000,000,000）=&gt; one billion三百一十亿零二千九百万零八百八十八（31,020,900,888） =&gt; thirty-one billion and twenty million nine hundred thousand and eighty-eight\n使用特点\n作数词时候，前面可以加数词，后面不能加s，比如：two thousand(✅)，three thousands(❌)\n如果数词用作名词时候，意思是好几…的时候，前面可以加some/many/several这种词或者加数词，后面可以加of。例如：hundreds of（好几百），five hundreds of（五百左右），many millions of（数百万）\n表示年龄 =&gt; I’m twenty（我20岁）\n表示编号 =&gt; Room 101 = Room one 0 one\n表示年代 =&gt; 1940’s = nineteen forty’s(20世纪40年代)\n表示年份\n2008 = two thousand and eight\n1949 = nineteen forty-nine\n2019.9.10 = Sep.10th, 2019 = September , tenth, twenty nineteen\n\n\n\n序数词第几（第零到第九）\n\n\n第零\n第一\n第二\n第三\n第四\n第五\n第六\n第七\n第八\n第九\n\n\n\nzeroth\nfirst\nsecond\nthird\nfourth\nfifth\nsixth\nseventh\neighth\nninth\n\n\n第十到第十九\n\n\n第十\n第十一\n第十二\n第十三\n第十四\n\n\n\ntenth\neleventh\ntwelfth\nthirtheeth\nfourteenth\n\n\n第十五\n第十六\n第十七\n第十八\n第十九\n\n\nfifteenth\nsixteenth\nseventeenth\neighteenth\nnineteenth\n\n\n第几十（第二十到第九十）\n\n\n第二十\n第三十\n第四十\n第五十\n\n\n\ntwentieth\nthirhieth\nfortieth\nfiftieth\n\n\n第六十\n第七十\n第八十\n第九十\n\n\nsixieth\nseventieth\neightieth\nninetieth\n\n\n把基数词结尾的y变成i再加eth\n第二十以上，第几十几十位用基数词，个位用序数词第二十一 =&gt; twenty first第九十九 =&gt; ninety ninth\n第一百以上第整数的后面加th，如果不是整数，保留基数词只变个位数\n\n\n\n第一百\n第一千\n第一百万\n第十亿\n\n\n\none hundredth\none thousandth\none millionth\none billionth\n\n\n使用特点\n使用序数词时，一般前面要加定冠词the\nI’m in the second room(我在第二个房间)\n\n\n表示时间日期\nThe first of September=Sep 1st(九月一日)\n\n\n表示楼层\nThe first floor(一楼)\n\n\n表示几分之几，分子大于一，分母有复数形式\none third = 1 / 3\ntwo thirds = 2 / 3\n\n\n序数词前面加a/an表示再一，序数词前面加the表示顺序\nWe read the book a third times(我们读了三遍这本书)\nThe second door of the room is closed（房间的第二扇门是关的）\n\n\n\n冠词（art.）\n1. 定冠词表示这个，特指某个名词，后面跟单数/复数名词，不可数名词例如：\n\n表示上文提过的人和物-This car is popular, but the car isn’t cheap\n表示地理位置用-We are based in the Beijing\n表示江河湖海用-The Yellow River\n唯一存在的事物用-The earth\n最高级前用-This is the best cup of coffee\n表示强调时候用-Beijing is the capital of China\n乐器（西洋古典乐器）之前用\nI like to play the piano\n\n\n在形容词前用 the，会将形容词变成名词\nThe rich should help the poor.\n\n\n固定表达\nall the time 一直；总是\nby the way 顺便\nout of the question 不可能；没门\n\n\n\n2. 不定冠词泛指人和物，表示一个，后面加单数可数名词辅音发音前面加a，元音发音前面加an\n\n第一次提到的人和物-It’s a cat\n如果是对唯一事物具体情况说明-Their dream is to go on a world tour(他们的梦想是去全世界巡回演出)\n和名词连用作表语或者同位语，代表职业-I am an engineer\n表示价格/速度/频率 - 80miles an hour\n固定短语会用 - have a good time\n\n3. 零冠词有情况下可以不需要加任何冠词\n\n很广泛的概念\n复数泛指\nComputers have changed our way of life.\nWater is important.\nWe breathe air.\n\n\n书名/人名\n某些城市/国家\n某些山河湖海洲\n星球\n语言/球类/学科/棋牌\nI want to play football.\n\n\n三餐/日期/季节（一般不加冠词，如果要特指可以加the）\nSummer is hot. Winter is cold.\non Monday\n\n\n固定表达\nfrom time to time 不时地\nface to face 面对面地\nout of question 毫无疑问\n\n\n\n名词（n.）名词分类专有名词、普通名词专有名词（大多数不可数）：人名、地名、国家、组织、单位、大型活动、著名事件（首字母大写，如果缩写全部字母大写）普通名词：专有名词以外的名词\n可数名词、不可数名词\n\n\n/\n可数名词\n不可数名词\n\n\n\n能否 【计数】\n✅\n❌\n\n\n能否【加不定冠词（a/an）和数词（one、two）】\n✅\n❌\n\n\n能否【加定冠词（the）】\n✅\n✅\n\n\n可数名词（单数复数都可以，可以加数词计算）：\n\napple\negg\nboy\n\n不可数名词（只能单数，不可以加数词计算）：\n\nwater\nfire\ntime\n\n具体名词、抽象名词具体名词（看得见摸得着、可数不可数都有）：\n\nman\nBeijing\nbook\nfire\n\n抽象名词（无形的各种事物，大多数不可数）：\n\ntime\nhope\nlove\n\n单复数变化规则变化\n直接 + s：coats、jobs、hats\n以 o，s，x，ch，sh 结尾，+ es：dresses, boxes, watches\n辅音（除去A、E、I、O、U的 21 个字母） + y，变 y 为 i 加 es：cities\n以 f 或 fe 结尾，变 f 为 v 加 es：half =&gt; halves; wife =&gt; wives\n以 o 结尾\n有生命 + es：patato =&gt; patatoes; tomato =&gt; tomatoes\n无生命 + s：photo =&gt; photos; zoo =&gt; zoos\n\n\n\n不规则变化\nman =&gt; men\nwoman =&gt; women\ngoose =&gt; geese\nfoot =&gt; feet\ntooth =&gt; teeth\nchild =&gt; children\nmouse =&gt; mice\nfish =&gt; fish\nsheep =&gt; sheep\ndeer =&gt; deer\n\n一直是复数的名词\nglasses 眼镜\nclothes 衣服\nscissors 剪刀\ntweezers 镊子\ncongratulations 祝贺\ntrousers 裤子\namends 赔偿\ncahoots 同伙\nshenanigans 恶作剧\nsmithereens 碎片\n\n复合名词的变化\nman 或 woman 做前缀，前后都要复数：man actor =&gt; men actors\n两个名词，后面变复数：boy friend =&gt; boy friends\n可数名词 + 介词（短语），前面名词复数：sister in law =&gt; sisters in law\n动词/过去分词 + 副词，加 s：stand by =&gt; stand bys\n中间含有连字符，则在主体名词之后加复数词尾：stander-by =&gt; standers-by\n\n名词所有格‘s 所有格(中英序一致)单数名词、复数名词非 s 结尾，后加’s, 单数名词 s 结尾，也加’s,如：\n\nJack’s 杰克的\nThe boss’s car 老板的车\n\n复数名词以 s 结尾，后加’, 如：\n\nBoys’\n\n用 and 连接并列名词时：\n\n要表示各自的所有关系，则分别加’s\nTom’s and Jack’s rooms. （汤姆的房间和杰克的房间）\n\n\n共同关系，只在最后一个名词加’s\nTom and Jack’s rooms. (汤姆和杰克的房间)\n\n\n\n其他常见用法\n\n日程时间\n3 day’s holiday.(三天的假期)\n\n\n国家城市\nBeijing’s policy\n\n\n地方机构\nThe airport’s service guide\n\n\n各种单位\n100 kilogram’s weight.\n\n\n天体\nThe Jupiter’s aura（木星的光环）\n\n\n\nof 所有格(中英反序)\n\n\n\n\n\n\n\n\n修饰前面的名词，表两个名词之问的所属关系\n\nThe content of the book = The book’s content这本书的内容\n\n‘s+of 双重所有格\nof + 名词’s\nThis is a photo of my cat’s. （这是我的猫的照片）\n\n\nof + 名词性物主代词\nHe is a friend of mine.\n\n\n\n💚 名词主谓一致\n\n\n\n\n\n\n\n\n主谓一致就是主语和谓语的单复数保持一致\n\nI (单) am (单) a student.\nThey (复) are (复) students.\n\n用单数的情况\n\n\n\n\n\n\n\n\n主语表整体概念谓语一般都是用单数\n【专有名词】谓语用单数\n\nThe United States was founded in 1776.\n美国建立于1776年\n“Three Kingdoms” is a good story.\n三国演义是个好故事\n\n【many a】 或 【more than one + 名词】做主语\n\nMany a man is smoking.\n很多男人在抽烟\nMore than one man is smoking.\n不止一个男人在抽烟\n\n【one and half + 复数名词】做主语\n\nOne and half watermelons is in the fridge\n冰箱里有一个半西瓜\n\n时间、钱、距离、重量等【单位】看做整体\n\nTwo doollars is no big deal.\n两美元没什么大不了\nFour miles is not a long way.\n四英里的路不远\nThree weeks is already enough for you to finish the work.\n三周已经足够你完成这份工作了\n\n加减乘除【运算】\n\nFive times five is twenty-five\n5乘5是25\nOne plus one is two\n1加1是2\n\n【each】, 【one】, 【no one】, some(any, no, every)+body(one, thing)作主语或限定词\n\nEach student is in the classroom\n每个学生都在教室里\nSomeone student is in the classroom\n某个学生在教室里\n\n【one of + 复数名词结构】\n\nOne of the students in our school is from the United States\n我们学校有一名来自美国的学生\n\nthe number of + 可数名词复数作主语\n\nthe number of scientists in the lab is five.\n实验室里有五名科学家\n\n用复数的情况【a number of】 + 【可数】名词复数作主语\n\nA number of scientists are a single.\n许多科学家都是单身\n\n【few】,【many】,【several】,【all】,【more】\n\nThe few words are difficult.\n这几句话好难\n\n特殊情况集体概念的名词：根据 Context 进行判断，【整体】概念谓语用【单数】，【个体】概念谓语用【复数】\n\nThe family was in a poor way.\n这个家庭生活贫困。（整体）\nThe family goes to the movies together.\n这家人一起去看电影。（个体）\n\n【and】或【both…and…】连接两个单数名词作主语 -&gt; 复数\n\nHe and his family are at the funeral.\nBoth China and the United States are big countries.\n\n【and】连接两个单数词 -&gt; 单数\n\n指同一个人或事物或概念\nThe Youtuber and traveler is his friend. \n这个旅行家兼 Youtuber 是他的朋友\n\n\n主语前有 【every】, 【each】, 【no】, 【many a】修饰\n Each day and night is busy. \n 每天从早忙到晚\n\n\n\n【a/an + 单数名词 + or two】 -&gt; 单数\n\nAn apple or two is not enough. \n一两个苹果是不够的\n\n【one of two + 复数名词】-&gt; 复数\n\nOne of two apples are not enough. \n一两个苹果是不够的\n\n谓语动词与【of】后的名词【保持单复数一致】的情况\n\nsome of\nplenty of\na lot of \nlot of\nmost of\nMost of the student was gone.\nMost of the students were gone.\n\n\nthe rest of\nall of\nhalf of\npart of\n分数、百分百 + of\n\n就近原则\n\n\n\n\n\n\n\n\n由距离谓语近的名词决定单复数\n【There be】, 【Here be】:\n\nThere is one computer and two phones.\nThere are two computers and one phone.\nHere is one apple and two bananas.\nHere are two apples and one banana.\n\n【or】 / 【either…or…】(二选一) / 【neither…nor…】（两者都不选，选另一个）, 【not only…but…(also)】（不仅而且，两个都）连接并列做主语：\n\nHis friends or he was dead.\nHe or his friend were dead.\nEither my brothers or mother is going the garden.\n\n就远原则\n\n\n\n\n\n\n\n\n距离谓语远的名词，决定谓语的单复数\n四除（but, except, besides, in addition to）\n\nDYE, but her roommates, is friendly.（DYE人很好，除了她室友）\nDYE, except her roommates, is friendly.（DYE人很好，除了她室友）\nDYE, besides her roommates, is friendly.（DYE人很好，除了她室友）\nDYE, in addition to roommates, is friendly.（DYE人很好，除了她室友）\n\n五和（with, along with, together with, combined with, as well as）\n\nDYE, with her roommates, is friendly.（DYE和她室友人都很好）\nDYE, along with her roommates, is friendly.（DYE和她室友人都很好）\nDYE, together with her roommates, is friendly.（DYE和她室友人都很好）\nDYE, combined with her roommates, is friendly.（DYE和她室友人都很好）\nDYE, as well as her roommates, is friendly.（DYE和她室友人都很好）\n\n包括（including）\n\nDYE, including her roommates, is friendly.（DYE、包括她室友人都很好）\n\n而不是（rather than, instead of）\n\nDYE, rather than her roommates, is friendly.（DYE人很好，而不是她室友）\nDYE, instead of her roommates, is friendly.（DYE人很好，而不是她室友）\n\n代词（pron.）\n\n\n\n\n\n\n\n\n代词的种类繁多，最重要的是要掌握用法，不用太拘泥于他们的分类以及语法术语\n代词就是用来代替名词的词。可以在句子中做主语、直接宾语、间接宾语、介词宾语\n人称代词指代人、地点、事物、想法，例如：\n\nI\nme\nshe\nwe\nus\nit\nyou\nthey\n\n物主代词表示名词的所有权关系，例如：\n\nMy\nour\nyour\nhis\nher\nits\ntheir\n\n反身代词反身代词用于指代句子的主语，以“-self”（单数）或“-selves”（复数结尾），例如：\n\nmyself\nyourself\nyourselves\nourselves\nhimself\nherself\nitself\nthemself\n\n指示代词指代已经提到的名词，如：\n\nthis\nthat\nthese\nthose\nsuch\nnone\nneither\n\n不定代词many; muchmany: 代替可数名词的复数\nmuch：代替、修饰不可数名词\n后接可数名词复数：a few（肯定意义）一些; few（否定意义）几乎没有\n后接不可数名词：a little（肯定意义）一些; little（否定意义）几乎没有\n例如：\n\na few carrots 一些胡萝卜\nfew carrots 很少（几个）胡萝卜\na little water 一点水\nlittle water 很少水\n\nsome; anysome：一些（一般用在肯定句中）\nany：一些（一般用在否定句、疑问句中）\n例如：\n\nThe rabbit needs some carrots.\nDoes the rabbit need any carrots?\nThe rabbit doesn’t need any carrots.\n\n如果需要对方正面肯定的回答时也会用 some，例如：\n\nWould you like some coffee?\n\n当 any 表示“任何一个”的时候，可以用在肯定句中，例如：\n\nThe rabbit can eat any carrot.\n兔子可以吃任何一个胡萝卜\n\neach; everyeach 和 every是“每”的意思，后接单数，例如：\n\neach carrot / every carrot\n\neach 可以作代词，单独作主语，而每不可以单独作主语，需要后面 + 名词，例如：\n\nThere are many carrots. Each （✅） is big.\nThere are many carrots.Every（❌） is big. \n\neach 表示 2 个或 2 个以上，every 表示 3 个或 3 个以上，例如\n\nThere are many carrots on each side of the street.（✅）\nThere are many carrots on every side of the street.(❌)\n街道两旁有胡萝卜\n\neither; neithereither、neither做主语时：\neither: 两者中的每一个（谓语用单数）\nneither: 两者中每一个都不（谓语用单数）\n例如：\n\nGive the rabbit this or that carrot. Either is good.\n给兔子这个或那根胡萝卜，（两者中）哪一个都很好\n\n\nDon’t give the rabbit this or that carrot. Neither is good.\n不要给兔子这根或那根胡萝卜。（两者中）哪一个都不好\n\n\nEither of the carrots is good.\n（两个）胡萝卜哪一个都很好\n\nboth; allboth: 都；全部。both 是指两者都，例如：\n\nBoth of the two rabbits are cute.\n两只兔子都很可爱\n\nall: 都；全部。all 是指“三者及以上都”，例如：\n\nAll of the rabbits are cute.\n全部兔子都很可爱\n\nother; the other; anotherother: 另外的；其他的（+名词），例如：\n\nI like this carrot. I don’t like other carrot.\n\nthe other： 特指两者中的一个，例如：\n\nThis carrot is bigger than the other carrot.\n\nanother: 泛指 3 个或 3 个以上另一个，例如：\n\nThe rabbit doesn’t like this carrot. Give him another carrot.\n\none; it\nThe rabbit doesn’t like this carrot. Give him another one.\n\n复合不定代词\n\n\npron\n人\n物\n\n\n\nevery\neveryone/everybody 每人；人人\neverything 每件事；一切事\n\n\nsome\nsomeone/somebody 某人\nsomething 某事\n\n\nany\nanyone/anybody 任何人\nanything 任何事\n\n\nno\nno one/nobody 没人\nnothing 没有事\n\n\n形容词在修饰复合不定代词时要后缀，例如：\n\nThe rabbit has something important to do.\nThe rabbit has nothing important to do.\n\n疑问代词疑问代词用于发起提问，如：\n\nwho\nwhat\nwhich\nwhose\n\n例句：\n\nWhich video did you like the best?\nWhose bag is this?\n\n连接代词\n\n\n\n\n\n\n\n\n要理解连接代词必须先理解从句\n连接代词引导主语从句，宾语从句和表语从句\n连接代词有：\n\nwho\nwhom\nwhose\nwhat\nwhich\nwhoever\nwhomever\nwhatever\nwhichever\n\n“-ever”表示“任何，一切”的意思，起强调作用\n例句：\n\nI don’t know who you are.（who 引导宾语从句）\n\n我不知道你是谁\n\nWhat he said isn’t true.（what 引导主语从句，what 在此表示说话的内容）\n\n他说的话不是真的\n\nThe important thing is which rabbit is smarter.（which 引导表语从句）\n\n重要的是哪只兔子更聪明\n\nThe rabbit wants to eat whatever he likes.\n\n兔子想吃他喜欢的任何东西。\n\n\n关系代词关系代词专用于定语从句，共有六个：\n\nwho\nwhom\nwhose\nwhich\nthat\nas\n\n例句：\n\nThe rabbit who became hungry ate a carrot.\n饿了的兔子吃了根胡萝卜\nThe rabbit whom I saw ate a carrot.\n我看见的那只兔子吃了根胡萝卜\nThe rabbit whose ears are long ate a carrot.\n那只耳朵长的兔子吃了根胡萝卜\nThe rabbit ate the carrrot which / that I bought.\n兔子吃了我买的胡萝卜\nThe rabbit ate the carrot, as was expected.\n兔子如预料的那样吃了胡萝卜\n\n介词（prep.）介词用法定语\nThe method of success.\n\n成功的方法\n状语\nShe lives in Vancouver.\n\n她住在温哥华\n表语\nIt is in the right screw.\n\n它是一个正确的螺丝\n宾补\nHe put the cellphone on the desk.\n\n他把手机放在桌子上\n同位语\nAs a doctor, he is responisble for his patient.\n\n他作为医生，他对他病人负责\n\n\n介词分类按结构分\n单个介词\nat\nin\nof\nafter\n\n\n合成介词\ninto\ninside\noutside\n\n\n分词介词\nincludeing\nconsidering\n\n\n短语介词\nin front of\nby way of\nat the end of\naccord of\n\n\n\n按词义分\n地点\n方向\n时间\n方式\n涉及\n目地\n原因\n比较\n伴随\n\n介词易混地点on、in、at\nat 某个具体位置、加小地点\nAt bus station\nAt No.12 avenue\n\n\nin 后面跟大地点\nIn Beijing.\n\n\non 表示在上面，后面加楼层\nOn the 1st floor.\n\n\n\n时间 on、in、at\nat 后面跟具体时刻，一天中的具体时间点，具体的周和节日\nAt midnight\n\n\non 后面跟具体的时间，某年某月某日星期几\nOn Monday September 2nd 2019.\n\n\nin 后面跟年、月、早晚、季节，一段时间，将来时中表示一段时间之后\nIn Spring.\nWe will meet in a few days.\n\n\n\n方位 on、in、to\nin 是 a 在 b 里面\nKunming lies in the southwest of China.\n\n\non 是 a 和 b 连着\nCanada lies on the north of American.\n\n\nto 是 a 和 b 不连着\nJapan lies to the east of China.\n\n\nto 表示方向\nto the south.\n\n\non 表示左右\non the left.\n\n\n\n时间 after、in\nafter + 具体时刻或者从句：表示在什么时刻之后，跟一般时态\nI was always playing football after school.\n我放学后总是踢足球\n\n\nin + 一段时间：表示在多久之后，跟将来时态\nWe will study math in a new semester.\n我们将在新学期学习数学\n\n\n\n时间 since、for\nsince + 具体时刻或者从句：自从什么时候起，一直到现在\nSince Ford died, that’s all changed.\n自从福特死了，这一切都变了\n\n\nfor + 一段时间：总共有多长之久\nThe school history for two hundred years.\n这学校历史长达 200 年\n\n\n\nin the front of、in front of\nin front of 表示在某物范围外的前面\nThere is a tree in front of the school.\n学校前面有一棵树\n\n\nin the front of 表示在某物范围内的前面\nWe sit in the front of the bus.\n我们坐在公交车的前面\n\n\n\nby、in、with\nby 乘坐交通工具、以什么方式\nI have to go by bus.\n我不得不坐公交车去\n\n\nin 使用某种语言文字\nHe has a speech in English today.\n他今天发表了一篇英文演讲\n\n\nwith 使用某种工具方法\nBlending with Light\n光合作用\n\n\n\nthrough、across、over\nthrough穿过、通过森林、人群、门等等\nIt passes through the Alataw Pass inhto Kazakhstan.\n它通过阿拉山口进入哈萨克斯坦\n\n\nacross和 over 跨越、跨越过河流、街道、围墙\nI run across the street.\n我跑过马路\nI climbed over the fence\n我翻阅围墙\n\n\n\nunder、below、beneath\nunder在…之下，表示某物接触或覆盖某物时\nWe finished the project in under a year.\n\n\nbelow 某物低于某物、或者表示温度用\nBelow freezing.\n冰点以下\n\n\nbeneath 在…之下（抽象概念），能力、地位、期望低\nThe game is beneath my expectations.\n这游戏低于我的预期\n\n\n\nin、into\nin 在…里面\nI walk in the school.\n我在学校里走\n\n\ninto 朝着…里面去\nI walked into the school.\n我走进了学校\n\n\n\n介词搭配\n介词+名词\nfor your car\n\n\n介词 + 代词\nwith her\n\n\n介词 + 动名词\nfor coming here\n\n\n介词 + 形容词\nfrom young to old\n\n\n介词 + 副词\nsince then\n\n\n介词 + 动词\nof winning\n\n\n介词 + 不定式\nto make him angry\n\n\n介词 + 从句\nat which I fell asleep was very boring.\n\n\n介词 + 数词\nover 100 people\n\n\n介词 + 介词\njust before us\n\n\n\n动词（v.）动词分类能做谓语实意动词vi.、vt.\n\n及物动词(vt.)，后面加宾语\nI hate you.\n\n\n不及物动词(vi.)，后面不加宾语\nI fly.\n\n\n及物+不及物动词（根据情况加宾语）\nI stop.(我停下)\nI stop working.(我停下工作)\n\n\n不及物动词没有被动句，因为它后面不能加宾语\n\n系动词引导表语或表语从句\n\nbe 动词\nam\nis\nare\n\n\n感官动词\nfeel\nlook\nsmell\nsound\nseem\n\n\n变化动词\nget\nbacome\nturn\ngrow\n\n\n保持动词\nkeep\nstay\nremain\nrest\n\n\n\n静态动词表示拥有、情感、思想的动词\n\n拥有\nhave\nown\nwant\ncontain\n\n\n情感\nlove\nhate\nwant\nneed\n\n\n思想\nknow\nthink\nunderstand\nbelieve\n\n\n\n动词短语TODO\n不能做谓语助动词协助主要动词构成谓语的词，没有实际意思，不能单独使用，构成时态、语态、否定句、强调句、疑问句\n\nhave 做助动词，构成完成时：\nI have turned off the light.\n我已经把灯关了\n\n\ndo 做助动词，构成疑问句、否定句、强调句\nDo you have kids?\n你有孩子吗？\nI do not know.\n我不知道\nDo come with you.\n一定要跟你去\n\n\nbe 动词做助动词，构成进行时或被动语态\nI am watching this video.\n我正在看这个视频\n\n\n\n情态动词情态动词有含义，和动词原型一起构成谓语\n\ncan/could 表示推测、允许、能力\nYou can imagine the story is bad.\n你可以想象这个故事不好\nYou could have been hurt.\n你可能会受伤\n\n\nmay/might 表示推测、允许、请求、祝愿\nIt may rain today.\n今天可能下雨\nI might be the next lucky dog.\n我可能是下一个幸运儿\n\n\nmust 表示肯定推测、命令\nIt must be her.\n这一定是她\nYou must choose.\n你必须选择\n\n\nshould/shall/ought to 表示推测、需要、征求意见\nYou should be careful.\n你要当心\nShall we regain the shore alive?\n我们能活着回到岸上吗？\n\n\nWould/will 表示将要、请求、意愿\nWould you like to come with me?\n你要跟我一起来吗？\n\n\nbe able to 能够\nhave to 必须\nhad better 最好\n\n动词形式动词形式决定时态\n原形\n与助动词与情态动词一起构成谓语，要用原形\nDo you like English?\n你喜欢英语吗？\n\n\n祈使句的谓语动词，要用原形\nDon‘t move.\n别动\n\n\n感官动词的宾语与宾补构成逻辑上的主谓关系，表示动作的最后结果或全过程时，作宾补的动词要用原形\nI heard a coin drop.\n我听到一个硬币掉了下\n\n\n使役动词后的宾语与作宾补的动词构成逻辑上的主谓关系时，动词要用原形\nHe let Jack lead the way.\n他让杰克在前面带路\n\n\n两个以上的并列不定式用 and 或 or 连接起来，动词要用原形\nLet’s go and play football.\n我们去踢球\n\n\n在 why not…和 why…句型中，not 和 why 直接跟动词原形，构成反问，表示“建议、劝告、责备或提醒”等。\nWhy not use my bicycle?\n为什么不用我的自行车呢？\n\n\n动词 help 后是宾+宾补，其宾补由动词充当时，动词用原形\nI was helped to clean the room by her.\n她帮我打扫房间\n\n\n**do, does, did **与动词原形连用\nDo be careful!\n一定要当心！\n\n\n不定式作介词 but 和 except 的宾语，前面有实意动词 do 时，后面的动词不定式要省略 to\nJack had nothing to do but/except watch TV.\n杰克除了看电视外无事可做\n\n\n固定的句型中，用原形\nhad better（最好）\nYou had better have a good rest.\n你最好好好休息一下\n\n\nwould rather(宁愿)\nI would rather study at home\n我宁愿在家学习\n\n\nwould rather … that … (宁愿…而不)\n\n\n\n第三人称单数一般现在时，主语是第三人称单数时，谓语要用第三人称单数第三人称单数：\n\n人称代词：he she it\n单个人名\n地名\n单数可数名词\n不可数名词\n\n例句：\n\nIt looks like a cat\nBeijing is in China\nThe cat is Lucy’s.\nThe water is very cold.\n\n动词变第三人称单数：\n\n直接在动词结尾加 s\n以 s、x、ch、sh、o 结尾加 es\n辅音字母加 y 结尾，y 变成 i 加 es\n不规则变化\nhave =&gt; has\nbe =&gt; is\n\n\n\n动名词和现在分词\n动名词起着名词的功能，常在句子中充当主语、定语、表语等成分\n现在分词来构成进行时态，与助动词 be 搭配构成句子的谓语，现在分词在句子中还可以充当定语、表语和状语\n\n\n词尾加 ing\nplay -&gt; playing\nworking\n\n\n词尾是 e 去掉 e 加 ing\nride -&gt; riding\n\n\n词尾是 ie 把 ie 变成 y 加 ing\ntie -&gt; tying\n\n\n辅音加元音加辅音双写辅音加 ing\nbeg -&gt; begging\n\n\n\n过去式和过去分词过去式单独做谓语，表示过去某个时间发生动作\n\n加 ed\nplay -&gt; played\n\n\ne 结尾加 d\nlove -&gt; loved\n\n\n\n过去分词是动词的非谓语形式，表示被动或完成\n\n\n\n动词\n过去式\n过去分词\n\n\n\narise\narose\narisen\n\n\nbe\nwas/were\nbeen\n\n\nbabysit\nbabysat\nbabysat\n\n\nbeat\nbeat\nbeaten\n\n\nbecome\nbacame\nbecome\n\n\nbend\nbent\nbent\n\n\n动词时态\n\n\n\n\n\n\n\n\n动词时态 = 动作的时间 + 动作的状态\n使役动词副词（adv.）副词的主要目的就是更精确地描述，补充，修饰各类词性\n副词的用法副词修饰哪些词性\n修饰动词\nThis rabiit runs fast\n\n\n修饰形容词和副词\nThis is a very fast rabbit\nThis rabbit runs very fast.\n\n\n修饰名词\nThis rabiit here runs very fast.\n\n\n修饰句子\nObviously, this rabibit here runs very fast.\n\n\n\n副词在句子中作什么成分\n状语，定语\n表语(主语补语)\nThe worf is broad.\n\n\n宾语补语\nLet me in!\n\n\n\n副词的形式\n同拼写，同义、近义\nfast（快）\n\n\n同拼写，异义\npretty(漂亮，相当)\n\n\n副词 = 形容词 + ly，同义、近义\nquick, quickly(快)\n\n\n副词 = 形容词 + ly，异义\nlarge (大)\nlargely (基本上)\n\n\n\n副词的种类方式副词方式副词可以位于句首，句中，句尾，但不是所有方式副词都可以\n\nSuddenly, the driver turned left.\nThe driver suddenly turned left.\nThe driver turned left suddenly.\n\n程度副词程度副词一般位于它修饰的形容词或副词之前。\n\nThis is a very fast rabbit.\nThis cat runs very fast.\n\n地点副词地点副词一般出现在句尾；表强调时也可以位于句首\n\nThe rabbit eats carrots indoors / outdoors.\n\n这兔子在室内、室外吃胡萝卜\n\nThe rabbit eats carrots upstairs / downstairs.\n\n这兔子在楼上、楼下吃胡萝卜\n\nHere you can relax and forget about all your troubles.\n\n在这里你可以放松并忘记所有烦恼\n\n\n时间副词一般位于句尾：\n\nThe rabbit ate some carrots yesterday.\nThe rabbit is eating some carrots now.\nThe rabbit will eat some carrots later.\n\n也可放句首、或居中：\n\nThe rabbit has already eaten some  carrots.\n兔子已经吃了些胡萝卜\n\n频率副词大多数位于行为动词之前，be 动词、助动词、情态动词 之后\n\nThe rabbit eats carrots every day.\nSometimes, the …\nThe rabbit usually …\nThe rabbit eats carrots three times a day.\nI will always love you.\n\n疑问副词疑问副词是用来构成特殊疑问句的副词\n\n对方式提问\nHow does the rabbit eat carrots?\n\n\n对地点提问\nWhere does the rabbit eat carrots?\n\n\n对时间提问\nWhen does the rabbits eat carrots?\n\n\n对原因提问\nWhy does the rabbit eat carrots?\n\n\n\n连接副词引导名词性从句的副词\n\nHow the rabbit eats carrots is interesting.(How主语从句)\nI dont’s know where the rabbit eats carrots.（where引导宾语从句）\nThat is why the rabbit eats carrots.（why引导表语从句）\n\n关系副词引导形容词性从句（定语从句）\n\nThis was the place where the rabbit ate the carrot.\nThis is the reason why the rabbit ate the carrot.\nThat was the day when the rabbit ate the carrot for the first time.\n\n句子副词一般在句子的开头，用逗号和主句分开\n\nObviously, this rabbit here runs very fast.\n\n形容词（adj.）形容词的用法定语前置定语\na hungry rabbit\na little white rabbit\n\n顺序：限定词 + （主观）特征 + 尺寸 + 形状 + 新旧 + 颜色 + 来源 + 材料 + 用途例如：a beautiful big round new black Chinese wooden table中文：一张崭新的漂亮的黑色中式木质大圆桌\n后置定语比如，形容词修饰符合不定代词\n\nsomebody\nsomebody nice\n某个好人\n\n\nanybody\nanybody absent\n不在场的人\n\n\neverything\neverything possible\n所有可能的事儿\n\n\nnothing\nnothing wrong\n没不对的事儿\n\n\n\n形容词短语作定语一般，形容词短语会放在描述的对象之后，比如：\n\ncarrots good for the rabbit\n对兔子有好处的胡萝卜\nthe rabbit eager to eat carrots =&gt; the rabbit tat is eager to eat carrots\n急于吃胡萝卜的兔子\nthe rabbit busy eating carrots =&gt; the rabbit that is busy eating carrots\n忙着吃胡萝卜的兔子\n\n表语\nThe rabbit is alive / asleep / alone.\n兔子是活的/睡着的/孤单的\nthe only rabbit alive\n唯一一只活着的兔子\n\n补语\nCarrots make rabbits happy.\n胡萝卜让兔子开心。\n形容词 happy 补充说明了宾语 rabbit的状态，作宾语补语\n\n状语\nThe rabbit came home, tired and hungry.\n兔子回到家，又累又饿\ntired and hungry 表示兔子回到家时的状态，作状语\n\n形容词的构成简单形容词例如：\n\nhungry\nlittle\nwhite\n\n复合形容词现在分词和过去分词也可以做形容词形容词 + 形容词/现在分词/过去分词：\n\na red-hot coal\na good-looking rabbit\na new-born baby\n\n副词可以放在形容词前修饰形容词，副词 + 形容词/现在分词/过去分词：\n\nall-round\nhard-working\nrecently-built\n\n形容词/数词 + 名词（需要+ed，与过去式无关）：\n\nwhite-haired = … whose hair is white\n\n白发的\n\nkind-hearted = … whose heart is kind\n\n好心的\n\na long-distance call\n\na one-way street\n\n\n名词 + 形容词/现在分词/过去分词：\n\na snow-white rabbit = a rabbit that is white like snow\n\n一只雪白的兔子\n\na carrot-eating rabbit = a rabbit that eats carrots.\n\n一只吃胡萝卜的兔子\n\na heart-broken rabbit = a rabbit that heart is broken.\n\n一只心碎的兔子\n\n\n比较级&amp;最高级构成音节少的词，一般构成是形容词+er, est，有些需修改拼写以防误读音节多的词，一般构成是more, most + 形容词\n表达意义比较级通常表达“更….”、“越…越…”最高级一般表达“最”，但也可能是“非常”\n连词（conj.）并列连词连接有着“并列的，同等语法地位的”单词，词组或句子。\n并列关系\nThe cat is small and cute.\nBoth the rabbit and the wolf like carrots.\nThe rabbit not only teaches English but also makes videos.\n\n\nThe rabbit likes neither apples nor pears.\n兔子既不喜欢苹果也不喜欢梨子\n\n\nNeither the rabbit nor the wolf likes apples.\n兔子和狼都不喜欢苹果\n\n选择关系\nWhat does the rabbit like? Apples or carrots?\n\n兔子喜欢什么？苹果还是胡萝卜？\n\nEither the rabbit or the wolf is going to the party this evening.\n\n不是兔子就是狼会去要参加今晚的聚会\n\n\n表否定：\n\nThe rabbit neither ate nor slept yesterday.\n兔子昨天既没吃也没睡\nHurry up, or / or else / otherwise you’ll be late.\n快点，否则你要迟到了\nEither the rabbit or I am going to the party this evening. \n不是兔子就是我将要参加今晚的聚会\n\n转折关系\nThe rabbit cooked some carrots, but he didn’t eat any.\nThe rabbit cooked some carrots, yet he didn’t eat any.\nI haven’t eaten yet(adv.), yet(conj.) I’m not hungry\n\n因果关系\nThe rabbit is busy, so he won’t go to the party tonight.\n兔子很忙，所以今晚他不能参加聚会了（前因后果）\n\n\nThe rabbit is busy. Therefore, he won’t go to the party tonight.\n兔子很忙，所以今晚他不能参加聚会了（前因后果）\n\n\nThe rabbit will skip lunch, for he is busy making a video.\n兔子不吃午餐了，因为他在忙着做视频（前果后因）\n\n从属连词引导名词性从句that 当引导主语从句、宾语从句、表语从句和同位语从句时：\n\n只起连接作用\n在句子中没有实际的意义\n在宾语从句中可以省略。\n\n例句：\n\nThat the rabbit ate the carrot was obvious.\n兔子吃了胡萝卜，这很明显（主语从句）\n\n\nI saw (that) the rabbit ate the carrot.\n我看见兔子吃了胡萝卜（宾语从句）\n\n\nI don’t know if the rabbit ate the carrot.\n我不知道兔子是否吃了胡萝卜（宾语从句）\n\n\nThe fact is that the rabbit ate the carrot.\n事实是兔子吃了胡萝卜（表语从句）\n\n\nThe question whether the rabbit will eat the carrot is on all our minds.\n兔子是否会吃胡萝卜这个问题萦绕在我们心中（同位语从句）\n\n引导状语从句引导时间状语从句的连词：\n\nwhen 当…时候\nwhile 当…时候\nas 当…时候\nbefore 在…之前\nafter 在…之后\nuntil 直到…为止\nsince 自…以来\n\n引导地点状语从句的连词：\n\nwhere 在…地方\nwherever 无论在…地方\n\n引导比较状语从句的连词：\n\nthan 比\nas 与…一样…(出现在as…as…结构中)\n\n引导条件状语从句的连词：\n\nif 如果\nunless 除非\n\n引导让步状语从句的连词：\n\nalthough 虽然；尽管（不与并列连词but连用）\nthough 虽然；尽管（不与并列连词but连用）\neven though 即使\neven if 即使\nwhile 虽然；尽管\n\n引导方式状语从句的连词：\n\nas 像…；与…一样\nas if 好像\nas though 好像\n\n引导原因状语从句的连词：\n\nbecause 因为（从属连词；不与并列连词so连用）\nsince 因为（表示间接、附带原因，语气弱于 because）\nas 因为（语气最弱）\n\n引导目的状语从句的连词：\n\nin order that 目的是…;为了 …\nso that 以便\nso 以便\n\n引导结果状语从句的连词：\n\nso…that… 太…以至于…（注意与 so that 区分）\nsuch..that… 太…以至于…\nso 因此；所以\n\n感叹词（int.）\n\n\n\n\n\n\n\n\n负责表达情感的声音，单词，词组\n具体可见视频：https://www.bilibili.com/video/BV1XY411J7aG?p=20&amp;vd_source=0102e1b36cb805c77386e59559a89b2c\n❤️ 非谓语动词\n\n\n\n\n\n\n\n\n非谓语动词就是不是谓语的动词\n不定式\n\n\n\n\n\n\n\n\n不定式：”to do“，否定形式：”not to do“\n被动语态当不定式的主语是不定式所表达的承受对象的时候，要使用被动形式（ “to be done” 或 “to have been done” ）\n\ne.g. The building to be pulled down there is our dormitory. 那边将要被拆的建筑物是我们的宿舍楼。\ne.g. The temple is said to have been built in the Ming dynasty. 据说这座寺庙建于明朝。\n\n时态\n一般【to do】 ，表示与谓语动词 【同时发生】或【其后发生】\nThe robber was seen to enter the bank. (to enter 和 was seen 同时发生)\n有人看到这个抢劫犯进了银行。\n\n\n进行【to be doing】，表示与谓语动词 【同时发生】 且 【正在进行】\nThey seem to be getting along quite well.\n他们似乎相处的很好\nThe old man pretended to be sleeping.\n这个老人正在假装睡觉\n\n\n完成【to have done】，表示 【先于】 谓语动词发生：\nShe seems to have read the book before.\n她好像以前看过这本书。\nThe expedition is said to have reached the South Pole. \n据说探险队已经到达了南极\n\n\n\n作主语\nTo master a foreign language requires a lots of effort.\n要掌握一门外语需要很多努力。\nTo finish this difficult task in one day is impossible.\n要在一天之内完成这项艰巨的任务是不可能的。\n\n\nit 作形式主语，将真正的主语后置\n\nIt’s a great honor for me to make a graduation speech here today.\n很荣幸我今天能在这里发表毕业演讲\nIt took rescuers 90 minutes to reach the trapped men.\n救援者们花了 90 分钟才到达那些被困的男子身边\n\n\n作表语\nThe purpose of his visit is to learn about the details about this project.\n他访问的目的是了解这个项目的具体细节\n\n\n在【be to blame(负有责任)】,【be to let(可供出租)】中主动表被动\n\nShe is to blame for the traffic accident.\n他对这次交通事故负有责任。\n\n\n⭐️ 作宾语\n\n\n\n\n\n\n\n\n【help (to) do】：help 后跟不定式作宾语时，可以省略\n\n以下动词后跟不定式作宾语\n\nafford（负担的起）, agree（同意）, aim（目的）, apply（申请）, arrange（安排）, ask（询问）, attempt（努力）\nbegin（开始）, choose（选择）, claim（声称）, continue（继续）, decide（决定）, demand（强烈要求）, desire（渴望）\ndetermine（决定）, expect（期望）, fail（失败）, forget（忘记）\nhappen（碰巧）, hate（厌恶）, help（帮助）, hesitate（忧郁）, hope（希望）\nintend（打算）, learn（学习）, like（喜欢）, love（爱）, manage（管理）, mean（打算做）\noffer（提供）, plan（计划）, prefer（宁愿）, prepare（准备）, pretend（假装）, promise（承诺）, refuse（拒绝）\nseek（寻找）, start（开始）, try（尝试）, undertake（承诺）, want（想要）, wish（希望）\n\ne.g.\n\nTom decides to lead a different life after moving to another city.\n搬到另一个城市后，汤姆决定过一种不同的生活。\nPeople wondered how the prisoner managed to escape from the jail.\n人们想知道这犯人是怎么设法从监狱中逃脱的。\n\n\n以下动词后用【it + 补语 + to do】\n\nbelieve\nfind\nconsider\nmake \nthink\nfeel\n\ne.g.\n\nI find it difficult to work with him.\n我发现难以和他一起工作\nMy parents consider it of great importance to develop good study habits.\n\n作定语当不定式作定语的时候，通常放在被修饰的名词或代词的之后（定语后置）\n\nI’m afraid this is the only way to overcome the problem.\n恐怕这是解决这个问题的唯一方法\n\n\n【there be】结构可主动可被动\n\nThere are many problems 【to handle】/【to be handled】.\n有许多问题要处理\n\n\n表示能力(ability)、企图(attempt)、努力(effort)、倾向(impulse)、目的()、愿望(wish)、打算(plan)、意图(tendency)、方法(method/way)、机会(chance/opportunity)等含义的抽象名词，常用不定式作后置定语：\n\nThe ability to fix it self one of the advantages of this machine.\n\n\n定语后置，当被修饰词以下是：\n\nthe first/the second/the last\nthe next/the best/the only\n\ne.g.\n\nConsidering all the factors, I think he is the best man to do this job.\n考虑到所有因素，我认为他是做这个工作的最佳人选。\n\n\n⭐️ 作状语\n\n\n\n\n\n\n\n\n不定式作状语，主要表示目的、结果和原因\n\n目的状语可以替换为 “[in order to][so as to] + do”，”so as to + do”不能作句首\nHe got up early to catch the first bus.\n他早起是为了赶上第一班公交汽车\n\n\n结果状语常用结构：\ntoo…to do…\nWhen he heard the news, he was too angry to say a word.\n当他听到这个消息的时候，他太过生气，一句话也说不出来。\n\n\nadv. + enough to do…\nShe is old enough to decide for herself.\n她已到自己所决定的年龄了。\n\n\nso/such … as to do…\nonly to do（表出乎意料）\nI went to see her, only to learn she had gone abroad.\n\n\n\n\n原因状语（与情感类形容词连用）：\nhappy\nWe are very happy to cooperate with you in the project.\n在这个项目中与你们合作，我们非常高兴\n\n\nkind\nsurprised\nshocked\ndisappointed\n\n\n\n⭐️ 作宾补（主动）\n\n\n\n\n\n\n\n\n【vt + 宾语 + to do …】\nvt. 如下(主补也适用)：\n\nadvise(建议), allow（允许）, arrange for（安排）, ask（询问）\nbeg（乞求）, cause（造成）, command（命令）, encourage（鼓励）, expect（期望）\nfind（找）, forbid（禁止）, force（强制）, get（得到）, inspire（鼓舞）, invite（邀请）\nlead, leave（离开）, order（命令）, permit（批准）, persuade（说服）\nprefer（宁可）, remind（提醒）, request（需要）, require（需要）, teach（教）, tell（告诉）, urge（敦促）\nwant（想要）, warn（提醒）, wish（希望）\n\ne.g.\n\nHe was too proud to ask his family to help and support him.\n他太自尊心太强了，不愿要求家人帮助和支持他。\nWe were expecting this professor to come to our school.\n我们期盼着这个教授来我们学校\nHe parents forbid him to travel during summer holidays.\n他的父母禁止他暑假去旅行\nThe saleman persuaded the manager to use his products.\n这位男推销员说服了这位经理使用他的产品\nRemind me to buy some milk tonight.\n今天晚上提醒我买些牛奶\n\n\n要省略 to 的情况\n\n使役动词\nhave\nlet\nmake\n\n\n感官动词\nfeel\nhear\nlisten to\nlook at（看）\nnotice（注意）\nobserve（观察）\nsee（看）\nwatch（看）\n\n\n固定短语\nhad better\nwould better\nmay/might (just) as well\ncannot help but\n\n\n固定结构\ndo nothing but do…\nhave nothing to do but do\n\n\nwhy 引出的疑问句\nwhy do(表疑问、不满、委婉的批评)\nwhy not do(表建议)\n\n\n\ne.g.\n\nI’ll have someone show you to your room.\n我将让人带你去你的房间\nHe made a face and made everybody laugh.\n他做了一张鬼脸，让每个人都笑了\nShe felt someone pat her on the head.\n她感到有人拍她的头\nThis experience is so meaningful that I cannot help but share it with you.\n这次经历非常有意义，以至于我忍不住要分享给你\nWhy get upset just because you got one bad grade?\n何必因为一次不好的成绩就难过呢？\nWhy not seize that precious opportunity?\n为什么不抓住那个宝贵的机会呢？\n\n⭐️ 作主补（被动）\n\n\n\n\n\n\n\n\n主语补足语就是：主动 -&gt; 被动，宾语 -&gt; 主语，宾补 -&gt; 主补\n在 【使役动词】 或 【感官动词】 的后面，当不定式作主语补足语的时候，不定式的 to 不能省略\ne.g.\n\nThe thief was forced to hand in the lady’s wallet.\n这个小偷被迫交出了这位女士的钱包\nThe poor worker was made to do several jobs for the sake of his family.\n这个可怜的工人为了自己的家人而被迫做几份工作\n\n\n在“sb./sth. + be 动词 + said/thought/reported/believed/supposed…+to do…”句型中，不定式（短语）作主语补足语\n\n不定式动词与谓语动词【同时发生】或【其后发生】，用一般式【to do】\n不定式动词与谓语动词【同时发生】，用正在进行时【to be doing】\n不定式动词在谓语动词【之前发生】，用完成式【to have done】\n不定式的动词的承受对象是【不定式的逻辑主语】的时候（主语和谓语是动宾关系），用被动语态【to be done】OR【to have been done】\nHumans are believed to be closely connected with nature.\n人们认为人类与大自然紧密相连。\nMany companies are reported to be suffering from a shortage of skilled employees.\n据报道，许多公司正苦于缺乏熟练员工。\nMs. Smith is said to have finished her studies at Harvard University four years ago.\n据说史密斯女士四年前就完成了她在哈佛大学的学业。\n\n\n\nRobert is said ____ abroad, but I don’t know what he majored in.\nA. to have studied\nB. to study\nC. studied\nD. having studied\n\n点击查看答案\n\n【answer】A\n【analysis】首先看例句已经出现了谓语动词短语 is said,并且是被动语态（be done），再看选项有动词 study 可知此题考察非谓语动词，根据 be said to do 句型可以排除 C、D，又因为【study】是在【say】之前发生，所以不定式用完成式【to be done】，即选 A。\n  \n\n\n动名词\n\n\n\n\n\n\n\n\n 动名词顾名思义，在句子中起名词的作用，一般由“动词原型 + -ing”构成，否定式是“not + 动词原形 + -ing”\n时态语态\n一般（【doing】），与谓语动词表示的动作【同时发生】或在【其后发生】\nI approve of his joining in the project.\n我同意他参与这项工程\n\n\n完成（【having done】），在谓语动词表示的动作【之前】发生\nHe occused me of having broken my word.\n他职责我不守承诺\n\n\n被动（【being done】 OR 【having been done】）\nRespecting others in life means being respected.\n在生活中尊重他人意味着受到尊重\n\n\n\n⭐️ 作主语\n\n\n\n\n\n\n\n\n作主语一般位于【句首】，谓语动词用【单数】。\n\n作主语时：动名词 VS 不定式\n\n表示【抽象】、【一般的】、或【习惯性的动作】用动名词\n表示【具体地】、【某一次的】或【将来的】用不定式\n\ne.g.\n\nRefusing invitations is not always easy.\n拒绝邀请并不总是容易的。\nGetting up early is considered a good habit.\n早起被认为是一个好的习惯。\nTo accept their offer will be foolish.\n接受他们的提议将是愚蠢的。\n\n\n【It is no use (no good, a waste of time, worthwhile) + 动名词（短语）】中 It 作形式主语，而真正的主语是后面的【动名词】\n翻译过来就是：xxx 是 没用的(no use/no good)/浪费时间的(a waste of time)/重要的(worthwhile)\ne.g.  \n\nIt is no use worrying about something that hasn’t happened yet.\n为还没有发生的事情担心是无用的。\nIt is a waste of time asking him for help.\n向他请求帮助是浪费时间。\n\n\n【There is no doing …】，相当于 It is impossible to do…(这是不可能做到的)\n\nThere is no denying that quicker action could have saved them.\n无可否认，如果行动快一点，本来是救得了他们的。\nThere is no accounting for taste.\n人各有所好。\n\n\n作表语\nHer job is washing clothes, cleaning and taking care of children.\nThe real dificulty is getting to know the needs of the customers.\n\n作定语\nteaching method 教学方法\nswimming pool 游泳池\nwashing machine 洗衣机\nreading room 阅览室\nparking lot 停车场\n\n⭐️ 作动词宾语以下及物动词（短语）后用动名词作宾语\n\nadmit（承认）, advise（建议）, advocate（倡导）, allow（允许）, appreciate（欣赏，感激）, avoid（避免）\nconsider（考虑）, delay（推迟）, deny（否认）, discuss（讨论）, dislike（不喜欢）, enjoy（享受）\nfinish（完成）, imageine（想象）, keep（保持）, mind（介意）, miss（错过）, permit（准许）\npostpone（推迟）, practice/practise（练习）, prefer（宁愿）, prevent（防止）\nquit（停止）, recall（回忆）, resent（讨厌）, resist（抵制）, risk（冒险）, suggest（建议）\ntolerate（容忍）, can’t help（忍不住）\n\ne.g.\n\nWe don’t allow smoking in the hall.\n我们不准（有人）在大厅里抽烟\nShe appreciates being sponsored by so many kind-hearted people.\n她感激被这么多好心人资助\nShe imagined walking in to the office and handing in her report.\n她想象着走进办公室，上交自己的报告。\n\n\n⚠️ 有些动词后既可以用不定式又可以用动名词作宾语且【意义差异较大】的情况：\n\n\n\n不定式\n动名词\n\n\n\nforget to do sth. 忘记要去做某事\nforget doing sth.忘记已做过某事\n\n\ngo on to do sth.做完一件事后继而做另一件事\ngo on doing sth.继续做一直在做的事\n\n\nmean to do sth.打算去做某事\nmean doing sth.意味着做某事\n\n\nregret to do sth.因将要去做某事而感到遗憾\nregret doing sth.因做了某事而后悔\n\n\nremember to do sth记得要去做某事\nremember doing sth.记得曾经做过某事\n\n\nstop to do sth.停下手中的事去做其他的事\nstop doing sth.停下手中正在做的事情\n\n\ntry to do sth.努力去做某事\ntry doing sth.试着做某事\n\n\ncan’t help (to) do sth.不能帮助做某事\ncan’t help doing sth.忍不住做某事\n\n\n⭐️ 作介词宾语动名词作介词的宾语，构成介词短语\ne.g.\n\nNowadays more and more people realize the importance of learning.\n如今越来越多的人呢意识到了学习的重要性\nReading a good book is like talking with a wise person.\n读一本好书就像和一位智者谈话\n\n\n⚠️ 动名词作介词的宾语，常用在以下词组后面（以下词组后用动名词）\n\nsucceed in 在…..方面成功\ninsist on 坚持……\nfeel like 想要…\nadmit to 允许做…\naplogize/apologise for 为…道歉\ne.g. She aplogizes for breaking the new vase.\ne.g. 她为打碎了那个新花瓶而道歉。\n\n\napprove/disapprove of 赞成/反对做…\nthe way of 做…的方法\ngive up 放弃做…\nkeep on 继续做…\npersist in 坚持做…\nput off 推迟…\nattach importance to 重视…\n[be/get/become/grow] [accustomed/used] to （变得）习惯于… \ne.g. I was accustomed to staying up late when I was at university.\ne.g. 上大学时我习惯熬夜。\n混淆：be used to do sth. 被用来做某事，used to do sth. 过去常常做某事\ne.g. My elder brother is used to getting up early.\ne.g. 我哥哥习惯早起\ne.g. This machine is used to clean the wall.\ne.g. 这台机器是被用来清洁墙壁的。\ne.g. My elder brother used to get up early.\ne.g. 我哥哥过去常常早起\n\n\n\n\ndevote oneself/sth. 献身于…\nto/be devoted to 热衷于…\nconfess to 承认做了…\ncount on 指望做…\nin addition to 除…之外\nlead to 引导…做\nLook forward to 盼望着做…\nobject to 对…反对\npay attention to 注意做…\nbe opposed to 反对做…\nbe worthy of 值得做…\nstick to 坚持做…\ntake to 养成…的习惯\nthe [approach/solution/key] to 做…的[方法/关键]\n\n\n⚠️ 以下结构中动名词作宾语\n\nhave [(no) difficulty/ (no) trouble/fun/pleasure/a hard time/a good time] (in) doing sth.\ne.g. The teacher thinks his student have difficulty (in) understanding his lesson.\ne.g. 这个老师认为他的学生们在理解他的课上有困难\n\n\nhave no problem (with) doing sth. 做…没有问题\nspend some time (in) doing sth. 花时间做…\ne.g. She spends her spare time (in) volunteering in the community.\ne.g. 她花业余时间在社区做志愿者\n\n\nthere is no point (in) doing sth. 做…毫无意义\ne.g. There is no point (in) considering these unimportant details.\ne.g. 考虑这些细枝末节是没有意义的。\n\n\nwhen it comes to doing sth. 当谈到…时\n[stop/prevent/protect] sb./sth. from doing sth. [阻止/阻止/保护]…做…\nbe busy doing sth. 忙于做…\n\n现在分词时态语态\n一般（doing）表示【和谓语动词同时发生】或表示【正在发生】\n完成（having done）相当于状语从句，表示【先于】谓语动词的动作发生\n被动\n一般被动（being done）表被动 + [正在发生/与谓语动词同时发生]\n完成被动（having been done）表被动 + 【先于】谓语动词发生\n\n\n\n⭐️ 作状语现在分词可以作时间、原因、结果、条件、方式、伴随等状语\n\nHearing the stange noise, they become nervous at once.（时间）\n听到这个奇怪的声音，他们立刻变的紧张起来\nSeeing nobody in the room, Mr. Smith decideed to try again. (原因)\n看到房间里没有人，史密斯先生决定再试一次\nThe fire lasted a whole night, causing greating damage. (结果)\n这场火灾持续了一整夜，造成了巨大损失。\nTurning to the right, you will find a path to the village.（条件）\n向右转弯，你会发现一条通向这个村庄的小路\nHe walked down the hill, singing softly.（伴随）\n他从小山上走下来，轻声哼着曲儿\n\n\n例题：\nWhen ____ overseas, you’d better carry an international driving permit, even if you are not planning to drive.\nA. travel\nB. traveled\nC. traveling\nD. to travel\n\n⭐️ 作宾补过去分词\n\n\n\n\n\n\n\n\n过去分词表【被动】 或【动作已完成】，起【形容词】或【副词】的作用。\n作定语作表语作状语作宾语补足语独立主格结构\n\n\n\n\n\n\n\n\n独立主格结构就是简化后的【状语从句/并列句】\n构成与特征构成\n[名词/代词] + [不定式/分词/介词短语/形容词/副词等]，在句子中作状语\n特点\n\n独立主格结构的逻辑主语与句子的主语不是同一个，它独立存在\n位置比较灵活，可以在【句尾】或【句首】\n一般用【逗号】隔开，与句子之间不适用任何连词\n\n句法功能\n\n\n\n\n\n\n\n\n独立主格主要表示谓语动词所表示动作发生的时间、原因、条件、伴随状态等。\n作时间状语\n\nThe problem settle, we went back to the office.\nAfter the problem had been settled, we went back to the office.\n问题解决之后，我们回到了办公室\n\n\n作原因状语\n\nAn important lecture to be given tomorrow, the professor has to stay up late to prepare for it.\nAs an important lecture will be given tomorrow, the professor has to stay up late to prepare for it.\n因为明天要发表一个重要的演讲，这位教授不得不熬夜为其作准备。\n\n\n作条件状语\n\nWeather permitting, they will go on an outing to the beach tomorrow.\nIf weather permits, they will go on an outing to the beach tomorrow.\n如果天气允许的话，他们明天将去海滩游玩。\n\n\n作伴随状语\n\nThe room is very pretty, its window overlooking a park.\nThe room is very pretty, and its window overlooks a park.\n这个房间很漂亮，它的窗户俯瞰着一个公园。\n\n名词/代词 + 非谓语动词不定式\n\nSo much work to do, I will have to work overtime this Sunday.\n有这么多工作要做，这个星期天我不得不加班。\n\n\nSo many letters to answer, the singer has to ask her assistant to help her.\n有这么多信件要回，这位歌手不得不请她的助理帮助她。\n\n\n现在分词\n\nThe rain having stopped, he went out for a walk.\n雨停了，他出去散步了。\n\n\nThe tour guide leading the way, we had no trouble getting out of the forest.\n有导游领路，我们毫不费劲地走出了森林。\n\n\n过去分词\n\nThe machine fixed, the worker found the could to his work smoothly.\n机器修好了，这个工人发现他可以顺利地做他的工作了。\n\n\nThe students are listening attentively in class, their eyes fixed on the blackboard.\n学生们正在课堂上专心地听讲，他们的眼睛都盯着黑板。\n\n名词/代词 + 介词短语\nThe teacher entered the classroom, a book in his hand.\n老师走进了教室，手里拿着一本书。\n\n名词/代词 + 形容词/副词\nI saw a clear pond, the water blue like the sky.\n我看到了一个清澈的池塘，水像天空一样蓝\nThe summer vacation over, the students returned to the school.\n\nThere being + 名词/代词\nThere being no train, we had to wait till the next day.\n由于没有火车，我们不得不等到第二天。\n\n\nThere being nothing more for disussion, I declare the meeting closed.\n没有更多需要讨论的事宜了，我宣布散会\n\nwith复合结构\n\n\n\n\n\n\n\n\nwith + 宾语 + 宾补\n\nWith so many tasks to complate, I can not spare a minute.\n有这么多任务要完成，我一分钟也抽不出来。\n\n\nWith night falling, they stopped playing outside and went home.\n夜幕降临了，他们不再在外面玩耍，回家去了。\n\n\nI saw her go out, with a mobile phone in her hand.\n我看见她出去了，手里拿着一部手机\n\n🧡 从句🧡 名词性从句引导词\n\n\n\n\n\n\n\n\never = no matter… 无论…\n如果从句中【缺少成分】，则使用连接【代词】，如果从句是完整的句子，则使用【连词】或连接副词\nthat = which\n\n5个【连词】（不充当成分）\n\nthat / whether 是否\n\nas if 好像\n\nas though 好像\n\n\n\n\n\n10个【连接代词】（充当成分）\n\nwho / whoever\n\nwhom / whomever\n\nwhose / whosoever\n\nwhat / whatever\n\nwhich / whichever\n\n\n\n\n\n8个【连接副词】（不充当成分）\n\nwhen / whenever\n\nwhere / wherever\n\nhow / however\n\nwhy\n\nbecause\n\n\n\n\n主语从句用一个句子代替句子里的一个名词，做句子主语\n主语从句引导词\n主语从句经常用形式主语 it 放主语位置，真·主语后置：\n\nThat he will the match is certain.\nIt is certain that he will win the match.\n\n宾语从句表语从句同位语从句🧡 定语从句（形容词从句）\n\n\n\n\n\n\n\n\n定语：修饰限定作用，中文意思为“XXX的”，相当于形容词\n构成定语从句 = 先行词 + 引导词 + 从句\n例如：He is the man that I saw yesterday.\n\nman 为先行词\nthat 为引导词\nI saw yesterday 为从句\n\n引导词的规则\n\n\n\n\n\n\n\n\n先行词（名词或代词）就是被定语从句修饰的东西\n通常情况下，引导词 that = which\n1. 根据先行词类别判断引导词\n\n人：that, who, whom, whose\n物：that, which, whose\n时：that, which, when\n地：that, which, where\n因：that, which, why\n\n2. 看从句是否缺成分判断引导词\n\n代词（充当成分）：that, which, who, whom\n副词（不当成分）：when, where, why\n形容词（表示所属关系：XX的）：whose\n\n\n\n\n\n\n\n\n\n\nQ: 如何判断从句是否缺成分？\nA: 1.直接翻译句子，看句子是否完整。2. 看句子结构，是否有【主谓宾】或【主系表】结构\n特殊用法：\n\n\n先行词和引导词之间有介词，用 which（物）或 whom（人）\n非限定性定语从句用 which 不用 that\n\n\n\n先行词有人也有物时，用 that 不用 who\n先行词指【物】且含有不定代词时用that。(all, little, few, much, everything, anything, nothing, one, none等)\n先行词含有最高级或含有序数词时用that\n当主句是以【who】,【which】开头的特殊疑问句或先行词是【who】时用that\nWhich is the book that he bought yesterday?\nWho that you have ever seen can beat him in the game?先行词被 same 修饰，且指“同一物体”时，用 that\n\n\nShe is wearing the same dress that she wore yesterday.\n先行词在主句中作表语，用 that\nThis is no longer the place that it used to be. （这已经不是以前的样子了）\nHe is not the man that he was. （他已经不是过去的他了）\nShanghai is no longer the city that it used to be. (上海不再是曾经的那个城市了)\n\n\n主句是 there be 句型且关系词在从句中做主语，用 that\n There is a seat that is still available.\n\n\n\n\n练习\nI will never forget the day ____ I met you. \n\n点击查看答案\n\n【answer】when\n【analysis】从句不缺成分，所以用 when\n  \n\n\nI will never forget the day ____ we spent.\n\n点击查看答案\n\n【answer】that / which\n【analysis】从句缺成分，所以用 that/which\n  \n\n\nYou had better have no reason ____ you are late.\n\n点击查看答案\n\n\n【answer】why\n【analysis】先行词 reason 为原因类，并且定语从句中不缺成分，故填 when\n \n\n\nYou had better have no reason ____ sounds perfect.\n\n点击查看答案\n\n【answer】that/which\n【analysis】先行词 reason 为原因类，并且定语从句中缺少主语，故填that/which\n \n\n\nThe day after tomorrow I will go to the park ____ a flower show is being held.\nA. which \nB. why  \nC. what  \nD. where\n\n点击查看答案\n\n【answer】D\n【analysis】先行词park是地点类型，又因为定语从句中不缺成分，故使用 where\n \n\n\nI don’t know the man  ____  you are talking about.\nA. who’s\nB. whose\nC. whom\nD. who\n\n点击查看答案\n\n【answer】C\n【analysis】先行词the man的类别是【人】，首先排除选项【A】，而选项【B】whose是用于表示所属关系，不符合题意。由于定语从句中缺少的是宾语成分，而选项 D【who】是主格，故选宾格形式的【whom】\n \n\n\nIn the corner of the library, I found a book ____ cover was stained with ink.\nA. who\nB. whose\nC. where\nD. which\n\n点击查看答案\n\n【answer】B\n【analysis】先行词 book 的类别为【物】，故排除选项 A、C。定语从句中不缺成分，排除选项 D，并且有表示所属关系：书的封面，故选【B】whose\n\n\n\nThe young man had decided to give up the chance of studying abroad, ____ surprised his parents a lot.\nA. when\nB. where\nC. which\nD. that\n\n点击查看答案\n\n【answer】C\n【analysis】这是个非限定定语从句，并且从句不缺成分，故选 C\n\n\n\nWe are delighted at the news ____ out team has won the prize.\nA. that\nB. which\nC. whether\nD. what\n\n点击查看答案\n\n【answer】A\n【analysis】out team has won the prize对news起到内容说明的作用，故本题考察同位语从句，故选 A\n\n\n\nIt is an online platform ____ people can buy and sell many kinds of things.\nA. who\nB. where\nC. that\nD. which\n\n点击查看答案\n\n【answer】B\n【analysis】看到 It is会想到考强调句，但容易证明此句并不是一个强调句，而是一个定语从句。先行词platform为【地】，并且从句不缺成分，故选 B\n\n\n定语从句 vs 同位语从句\nI have a dream that sounds interesting. (定语从句)\n\n我有一个听起来很有趣的梦\n\nI have a dream that I have become a famous teacher. （同位语从句）\n\n我有一个梦，我成为了一名著名的老师\n\n\n定语从句：修饰限定\n同位语从句：内容说明\n判断技巧\n看到先行词是 news/idea/thought/reason/dream/fact，大概率是同位语从句（引导词用that）\n限定性和非限定性非限定性定语从句就是用逗号与主句隔开，只对先行词补充说明，翻译成主句的并列句\n\nI love her who is gorgeous. （限定）\n我爱漂亮的她\nI love her, who is gorgeous. （非限定）\n我爱她，她很漂亮\n\n翻译技巧https://www.bilibili.com/video/BV1ov411r7L6\nQ：什么是定语？A：中文翻译为 xxx 的词（定语就是形容词）\nQ：什么是定语从句？A：连词+句子，作形容词修饰名词\n定语从句的位置问题中文里面，定语在名词前面（eg.漂亮的女孩）英语里面，定语：\n\n单个词的，一般放名词前，除了：\n不形：不定代词+形容词\na 形：something important a boy asleep. \n过去分词（前后都行）\n\n\n从句，后置\n\n翻译题做题步骤先拆分句子！\n\n连词处（从句）\n介词处（作定语或状语）\n非谓语（作定语或状语）\n标点符号\n\n练习例句：\n\nWe are obliged to them because some of these languages have since vanished, as the peoples who spoke them died out or became assimilated and lost their native languages.\nThere will be television chat shows hosted by robots, and cars with pollution monitors that will disable them when they offend.\n\n连词前是动词、介词 -&gt; 宾语从句连词前是名词 -&gt; 定语从句\n! 如果英文中有被动，翻译成中文要变成主动\n🧡 状语从句(副词从句)含义状语从句就是用一个句子做状语，表达【描述性的信息】，对主句进行补充描述\n位置\n\n\n\n\n\n\n\n\n句子的前中后均可\n分类（9种从属连词）\n\n\n\n\n\n\n\n\n\n重点：时间、原因、结果、条件、让步，其他简单了解即可。\n\n\n\n\n\n\n\n\n\n如果 as 后面从句缺成分则是定语从句，不缺则是状语从句\n时间\n\nwhen / while / as（当…）\nbefore（…之前）/after（…之后）\nsince（自…开始）/until（直到…）\nas soon as （一…就 ）\nby the time（到…时候 / 截止到…）\neach time / every time（每一次）\nthe next time（下一次）\n\n\n地点\n\nwhere（在…的地方）\n\n\n原因\n\nbecause（因为）\nsince（因为）\nas（因为）\nnow that - 针对于现状的原因（翻译：既然…）\n\n\n结果\n\nso…that…（太…所以），加副词\nsuch… that…（太…所以），加名词或词组\nso that…（所以）\n\n\n目的\n\n\n\n\n\n\n\n\n\nso that后面有情态动词就是【目的】，没有则是【结果】\n\nso that…（以便…）\nin order that…（以便…）\n\n\n条件\n\nif（如果）\nonce (一旦…)\nas long as / so long as (只要…) \nunless（除非…）\n\n\n让步\n\n\n\n\n\n\n\n\n\n【明让步，暗转折】：暗含转折含义\n\nalthough / though（尽管…/即使…）\neven if / even though（即使，虽然）\nNone of these will be easy but you can start even if others refuse to.\n这些都不容易，但即使别人拒绝，你也可以开始。\n\n\nwhile（虽然，尽管）（放句首）\nhowever（无论如何）\n\n\n比较\n\n\n\n\n\n\n\n\n\n后面跟句子才是比较状语从句\n\nthan\nas\n\n\n方式\n\nas（按照）\nas if/though（好像）\n\n倒装句倒装 = 变成一般疑问句 = 把助动词放主语前\n助动词 = do / does / did，be 动词，have / has / had，情态动词 will / can / must…\n部分倒装否定型 - 否定词在句首，引起倒装否定词 = hardly, never, rarely, seldom, scarcely, no, nor, neither, none, little, few,\n\n练习:\nSeldom ____ in such a rude way.\nA. we have been treated\nB. we have treated\nC. have we been treated\nD. have we treated\n\n点击查看答案\n\n【answer】C\n【translation】我们很少受到如此粗鲁的对待\n【analysis】由于否定词 seldom 在句首，所以这是一个部分倒装，需要把【助动词】放到主语前面，故排除 A、B。C 选项为完成时态的被动，被动就是【be动词 + done】根据句意故选 C\n\n\n\nNo sooner ____ at the airport than he was informed that the flight had been cancelled.\nA. he arrived\nB. he had arrived\nC. had he arrived\nD. did he arrive\n\n点击查看答案\n\n【answer】C\n【translation】他一到机场就被通知航班已经取消了\n【analysis】no sooner…than（一…就）。看到否定词 no 在句首，就能想到这题考倒装，首先排除 A、B。他被通知是过去时，而他到达机场是比被通知还要更早的，也就是【过去的过去】，所以用过去完成时，故答案选 C\n\n\n\n【only】型 - only 位于句首，引起倒装Only when I sleep will I make a dream.\n【as】型 - “尽管”把表语放到句首即可\nAs I look ugly, I am very gentle.\nUgly as I look, I am very gentle.\n\n练习\n____ Martin can reach the branch of that tall tree at the gate.\nA. As a short man\nB. Being short \nC. As he is short \nD. Short as he is\n\n点击查看答案 \n\n【answer】D\n【translation】尽管 Martin 很矮，却可以够得到门口的那颗大树的树枝\n【analysis】as 用在句中可以起“尽管”的作用，即考察倒装。as 型倒装需要把表语前置，从句中可知 short 是表语，即选 D\n\n\n\n【So do I】型So do I. 我也是\nSo I do. 我确实是\ndo 表示助动词，I 表示主语\nShe likes English. So do I.她喜欢英语。我也喜欢\nShe likes English. So she does.她喜欢英语。她确实喜欢\nSo do I 的否定表达：Neither/Nor do I.\nShe doesn’t like English. Neither do I.她不喜欢英语。我也不喜欢。\n练习\nTom doesn’t have his own room.____.\nA. Neither I do\nB. Neither do I\nC. Neither have I\nD. Neither I have\n\n点击查看答案 \n\n【answer】B\n【translation】Tom 没有他自己的房间，我也没有。\n【analysis】显然是使用 So do I 的否定形式：Neither do I，情态动词 do 可以根据前句进行判断，将【Tom doesn’t have his own room】转换为一般疑问句：【Doesn’t Tom have his own room?】由此可见助动词是doesn’t，也就是 do 的三单否定形式，而 have 为实义动词，故选 B\n\n\n\n强调句\n\n\n\n\n\n\n\n\nTrick: 看到 It is/was 开头，大概率考强调句\n什么是强调句强调说明句子里的某个部分，表达情感意愿\n强调句的出现标志It is/was + 被强调部分 + that/who + …\n\n其中 who 表示人\nthat 表示非人（迫不得已的时候可以表示人）\n\nE.g.\n原：We take the class in this room.强：It is in this room that we take the class.\n如何证明一个句子是强调句把标志it is/was … that/who 去掉，仍是正确的句子就是强调句。\n特殊情况not…until强调 not…until 结构中的时间状语，把 not 放到 until前，然后再将 not until 部分移到被强调的位置\n\nI didn’t go to bed until 12 p.m last night.\nIt was not until 12 p.m. last night that I went to bed.\n\nE.g.It was his parents help ____ enabled him to buy an apartment in the big city.\nA. which\nB. that\nC. what\nD. who\nIt was a platform ____ people can buy and sell things on it.(不是强调句)\nA. which\nB. that\nC. what\nD. who\n💛 虚拟语气应用场景虚拟被用来表达以下【非真实】情况 ：\n\n假设\n主观愿望\n猜测\n建议\n可能或空想\n\n虚拟vs真实真实条件句 -&gt; 可能发生的事用主将从现\n\nIf it rains tomorrow, I will stay at home.（如果明天下雨，我会待在家里）\n\n虚拟条件句 -&gt; 不可能发生的假设用虚拟语气\n\nIf it should rain every day, I could be mad. (如果每天下雨，我可能会疯掉)\n\n考点不同虚拟情况下，主句、从句的谓语动词变化\n\n\n\n\n\n\n\n\n\n\nTrick：看到 if 和 would、should、could、might，立刻怀疑考常规虚拟\n例题：\nif she ____ here, she wouldn’t have been caught in the heavy rain.\nA. came\nB. was coming\nC. would come\nD. had come\nIf you had told me earlier, I ____ to meet you at the hotel.\nA. had come\nB. will have come\nC. would come\nD. would have come\n\n常规谓语动词变化规则\n\n\n\n条件（从句）\n结果（主句）\n\n\n\n现在\n用过去时 did\n用 【would、should、could、might】+ 动词原形\n\n\n过去\n用过去完成时 had done\n用 【would、should、could、might】+ 现在完成时\n\n\n将来\n用过去时或 should do或 were to do\n用 【would、should、could、might】+ 动词原形\n\n\n从句在虚拟里 be 动词要变成 were\n\n对现在虚拟：用过去时 did\n\n对过去虚拟：用过去完成时had done\n\n对将来虚拟：用过去时或 should do 或 were to do\n\n\n\n\n\n\n\n\n\n\n\nTrick: \n对什么虚拟就用它的过去时\n现在 -&gt; 现在的过去：do -&gt; did\n过去 -&gt; 过去的过去：did -&gt; had done\n将来 -&gt; 将来的过去：shall do -&gt; should do. be to do -&gt; were to do\n主句\n对现在/将来虚拟：用 【would、should、could、might】+ 动词原形\n对过去虚拟，用 【would、should、could、might】+ 现在完成时\n\n特殊情况should + do 可省略\n\n\n\n\n\n\n\n\nshould 可以省略，do 是动词原形\n\n以防\nin case (that) 万一，如果\nfor fear (that) 以防万一\nlest 以免，避免\n\n\n命令\norder 命令\ndirect 指导\ncommand 命令\ninstruct 指示\n\n\n建议\nadvise 劝告、建议\nsuggest 建议\npropose 提议\nrecommend 建议、推荐\nmotion 提议\n\n\n坚持/要求/主张\ninsist 坚持\nrequire 需要，规定\nrequest 要求，请求\ndemand 强烈要求，需要\nask 要求\nresoltion 决定\nplan 计划\n\n\n必要\nIt is [necessary][urgent][important][essential] that …\n\n\n\n以上表达换了词性用法依旧\n\nExample\n\nWe took a lot of guns with in case/for fear that/lest it (should) meet teerorist.\n为了防备恐怖分子，我们带了很多枪\nI suggest that you (should) be kind.\n我建议你善良\n\n\nshould + do 不可省略\n\n\n\n\n\n\n\n\n从句的谓语动词要用“should + do”，意为“竟然，居然”。should 不可省略！\n\n“It is/was [a pity(可惜)][a shame(耻辱)][no wonder(难怪)][amazing(惊人的)][surprising(惊喜的)][astonishing(惊人的)][shocking(震惊的)][strange(奇怪的)] + that从句”\n“I am/was 【sorry/surprised/disappointed】… + that从句”\n\n\nE.g.\n\nIt is astonishing that he should be so rude to you.\n他竟然对你如此粗鲁，真令人吃惊。\nIt is a pity that Henry should make such a mistake.\n亨利居然犯了这样的错误，真可惜\nI am very disappointed that he should do such a thing.\n他竟然做这样的事，我很失望\n\n\n省略 if，引起倒装\n\n\n\n\n\n\n\n\n省略 if，要把 were、had、should 等放在主语前，部分倒装\n倒装 = 变成一般疑问句 = 把助动词放到主语前\n助动词 = be 动词，do/does/did, have/has/had, 情态动词\n\nE.g.\n原：If she had come here, she wouldn’t have been caught in the heavy.\n省：Had she come here, she wouldn’t have been caught in the heavy.\n\nIt is (high/about) time + that从句\n\n\n\n\n\n\n\n\n意思为：该是…的时候了\n在“It is (high/about) time + that 从句”句型中，从句谓语动词多用过去式，也可以用“should + do”，并且 should 不可省略\n\nE.g. \n\nIt is high time that you studied the problem carefully about what you will do in the future.\nIt is high time that you should study the problem carefully about what you will do in the future.\n现在是你仔细研究这个问题的时候了，你将来要做什么。\nIt is (high) time (that) you learnt/learned/should learn to cook.\n该是你学习烹饪的时候了\n\n\n用从句的虚拟规则\n\n\n\n\n\n\n\n\n以下列出的谓语动词变换为特殊情况，其余未列出的使用常规虚拟的从句谓语动词规则即可\n\nwould rather（宁愿）/would sooner（宁愿）/would prefer（宁愿）/would (just) as soon（将会尽快）\n表示 将来或现在 时用过去时\n\n\nwish/if only（要是…就好了）/as if（好像）/as though（好像）\n表示 将来 用 “would/could/might + do\n\n\n\n\nE.g.\nI would rather I hadn’t opened the door for you last week.\nI wish I knew what is happening there in his room.\n\n用主句的虚拟规则【without（如果没有）, but for（要不是）,but (that)（要不是）， otherwise（否则）, under（按照）】，用主句的虚拟规则\n\nE.g.\nI passed the test. I ____ it without your help. (对过去虚拟)\nA. would not pass\nB. wouldn’t have passed\nC. didn’t pass\nD. had not passed\n\n插入语什么是插入语\n插入语就是前后用逗号隔开，插在主句里面。\n删掉插入语不会影响整体句子的意思\n可以插入一个词、一个短语、几个词、一个句子\n\n例：\nI think there are other measures which could be equally, if not more, effective.\n我认为其他的措施可能同样有效，甚至更多。\n为什么要用插入语进行补充说明，让句子更加的精确客观，对句子进行强调，进行过度转折\n\nCats, it seems, love to chew up cable.\n似乎猫喜欢咬电线\nThe reason, of course, is that costs have rocketed.\n原因当然是成本飞涨\nInstead of becoming a doctor, however, he bacame a successful writer of deective stories.\n然而，他没有成为一名医生，而是成为了一名成功的侦探小说作家。\n\n插入语插哪句首、句中、句尾 都行\n\nStrange, there is nobody in the classroom.\n\n奇怪，教室里没人\n\nThrkey would, of course, be the main dish.\n\n当然，火鸡将是主菜\n\nI prefer to go tomorrow afternoon, at 6 pm.\n\n我打算明天下午去，在下午 6 点吧\n\n\n参考资料\nhttps://www.bilibili.com/video/BV1Z4411C7jG\nhttps://www.bilibili.com/video/BV1XY411J7aG\nhttps://wordvice.cn/topic/category/language-rules\n\n核心语法(刘晓燕考研英语)\n\n\n\n\n\n\n\n\nhttps://www.bilibili.com/video/BV1ft4y1Q74v\n简单句什么是英语句子必须具备主谓结构，主语一定是谓语动作的发出者，如果有宾语的话，宾语一定是谓语动作的承受者\n句子的基本结构1. 主谓2. 主谓宾谓语：实义动词（有实际意义的动词）\n3. 主系表谓语：系动词:\n\nbe\n感官动词：look（=seem=appear）、smell（n. 气味）、taste（n. 喜爱 爱好）、sound、feel\n变化：become, get，turn, grow, fall\n保持：keep，stay，remain，stand\n表象：seem, appear\n终止：prove\n\n4. 主谓双宾5. 主谓宾宾补只需要在两个宾语之间加个 be 动词，如果读起来意思是对的，就是主谓宾宾补，如果读起来意思不对就是双宾\n句子的成分（词性的问题）谓语1. 谓语的成分有时态的实义动词或系动词充当谓语\n2. 一句话当中动词能不能多？\n不能多\n\n一句话当中只能有一个动词，并且充当谓语，多余的动词全部都要变成非谓语动词。\n\n❌ Laugh at others is my hobby.\n\n✅ Laughing at others is my hobby.\n\n❌ I enjoy see movies.\n\n✅ I enjoy seeing movies.\n\n❌ My dream is become a rich lady.\n\n✅ My dream is to become a rich lady.\n\n\n谓语只能是动词，动词只能做谓语。要把一句话当中不是谓语的动词变成不是动词（非谓语动词）：\n\nV + ing 表示主动\nV + ed 表示被动\nto + do 表示目的\n\n3. 一句话当中动词能不能少\n不能少，当一句话需要动词而没有动词的时候，永远都加 be 动词，并且 be 动词没有意思。\n❌ Your mother must very beautiful.\n✅ Your mother must be very beautiful.\n❌ I against you.\n✅ I am against you.\n\n4. 谓语的总结一句话当中，有且只能有一个有时态的实义动词或系动词的存在，并且充当谓语。\n谓语练习\n他穿上外衣，锁上门，离开了家。\nHe putting on his jacket, locking the door, left home.\n大熊猫是熊科中最罕见的成员， 常居在中国西南部的森林里。\nPandas are the rarest members in bear family, mainly living in the fonest of Chinese South west\n长江流经不同的生态体系，是诸多濒危物种的栖息地，灌溉了中国五分之一的土地。\nYangZi River flowing through diverse ecological systems, keeps the home of a sea of endangered species, irrigoating Chinese 1/5 land.\n我爱你，你爱我\nI loveing you, you love me.(独立主格)\n冬天来了，春天就不远了\nWinter approaching, spring will be around the corner.\n我是一个老师，我很喜欢唱歌。\nBeing a teacher, I have passion for singing songs.\n\n主语1. 主语的成分\n名词\n\n代词\n\n非谓语动词\n\n从句（引导词+句子）\n\n❌ Handsome and strong are his nature.\n\n✅ Being Handsome and strong is his natrue.\n\n\n2. 一句话当中主语能不能少？不能一句话没有主语的时候怎么办？\n\n加 it 作为主语：必须与天气、温度、时间有关系\nthere be句型，听到“有”的时候使用。\nThere exist a host of undergraduates being fascinated with me.\n\n\n!!!被动：当听到一句话没有主语，或者人称代词做主语的时候，都可以考虑写成被动\n必须指出坚持很重要 =&gt; Persistence must be pointed out outstandingly crucial.\n越来越多的人认为过度捕捞很严重 =&gt; Overfishing is claimed more than fearful by an increasing amount of professors.\n\n\n\n三种情况无被动：\n\n动词后面有介词的话，该动词无被动\ngo to school\n\n\n系动词没有被动\nhave 翻译成“有”的时候，没有被动\n\n\n人称代词做主语：不到万不得已，最好不要使用\n\n3. 练习\n如果有梦想，就应该会成功\nIf there exists a dream, glories are supposed to be achieved.\n\n宾语（动词的承受者）主语和宾语的成分一样：\n\n名词\n代词\n非谓语动词\nI love to sing songs.\n\n\n从句\nI love you.\n\n\n\n表语\n名词\nI am a teacher.\n\n\n代词\nWho’s your best friend?\n\n\n非谓语动词\nMy dream is to become a poet.\nMy dream is becoming a poet.\n\n\n从句\n形容词\nI am beautiful.\n\n\n介词短语\nI am in Chongqing.\n\n\n\n简单句的考点分析写作\n所有写不来的长难句，暂时都先写成简单句，一定要保证语法正确。\n所有不会写的单词，都可以写成自己会的词汇\n\n长难句分析\n找谓语动词，找主谓宾\n有多个动词时找主句的动词，前面没有引导词的动词就是主句的动词\n\n并列句并列句就是用连词连接的两个句子\n并列连词\n平行：and, not only … but aloso …\n转折：but, yet, while, whereas\n选择：or, whether … or …\n因果：for, so\n递进：then\n\n逻辑关系词\n平行\nsimilarly\nequally\nlikewise\nat the same time / in the mean while\n\n\n转折\nhowever\nnevertheless\non the contrary / by contrast\nconversely\nunexpectedly\nunfortunately\n\n\n选择\nalternatively\n\n\n因果\ntherefor\nthus consequently\nas a result\n\n\n递进\nbesides\nfurthermore\nmoreover\nadditionally\nsubsequently\nin addition \n\n\n\n连词与副词、介词短语的区别\n使用连词时，可以加逗号，也可以不加\n其他逻辑关系词的前面，要么用句号，要么加连词 and\n\n考点分析写作只要写作的上下句之间有关系，就一定要用逻辑关系词（连词、副词、介词和介词短语）练习写句子：\n\n有朋自远方来，不亦乐乎\n\nThere remain an army of companies coming from afar, and consequently, I feel more than delighted.\n\n都说我如水百变，可知我清澈不变\n\nI am claimed changeable like water.By contrast, my clarity keeps consistent.\n\n还记得那天吗？我没有通过四级考试，一个人在雨中哭泣，你走过来，拍拍我的肩膀，告诉我人生没有终点\n\nDo you stiill keep that day in mind? I failed to pass CET4, and as a result, I shed tears in the rain alone. At the same time, you came up to me and subsequently you beat my shoulder and told me “thare exists no destination in life”.\n\n\n完形填空只需要读懂逻辑关系词前后两句话的意思即可\n长难句分析在分析长难句的时候，只要有并列连词的出现，通常都会有省略分析长难句的第二步就是找连词，但是在连词连接两个单词的时候，这个连词就装作没看见，无论何时\n\n如何查找省略的内容？\n一句话只要有省略，就一定会省略在连词后 -&gt; 所以连词后面有的成分，连词前面一定有 -&gt; 连词前面有而后面没有的成分就是省略的部分\n\n名词性从句名词能做什么成分\nThe movies looks terrific（充当主语）\nI admine his mother （充当宾语）\nGump is a man（充当表语）\nI enjoy the part, the beginning.（充当同位语）\n\n同位语：用来解释名词的成分\n\n只要在作文中见到名词，都可以有意识的在后面加个同位语，对该名词进行补充说明。\nPersistence, an active mentality, plays a critical role in the glories of all children and adults.\nMy mother, a typical housewife, enjoy playing Mahjong, a chinese enthertainment.\n\n同位语的成分（什么可以用来解释名词）：\n\n名词\n代词\n非谓语动词\n从句\n\n什么是名词性从句 名词在句子中能够充当的成分，从句都能充当，这就是名词性从句\n\nWhat I saw is attractive.\nI appreciate what she said.\nGump is who should learn from.\nI enjoy the part that a feather is flying in the sky.\n\n名词性从句的引导词\nThat he has got divorced is my fault.\nWhether has he got divorced is obvious.\nWho will he marry is a secert.\n\n名词性从句的引导词是按照从句的类型分的类，一共把引导词分为 3 类：\n\nThat: 当从句是陈述句时。并且 That 在从句中不充当任何成分，也没有任何意思。\nWhether: 当从句是一般疑问句时。并且 Whether 在从句中也不充当成分，意思是“是否”。\n所有的特殊疑问词：当从句是特殊疑问句时。 \n英语中所有的从句，都是陈述句的形式。\n\n练习句子：\n我正在思考外星人存在吗\n\nI am wondering whether aliens exist.(宾语从句)\n\n女人总是对的，是一个常识。\n\nThat ladies tend to be right remains common knowledge.\n\nIt remain common knowledge that ladies tend to be right.\n\n我的意思是，孝敬父母是中华民资的传统美德。\n\nMy meaning seems that supporting the elderly remains a chinese conventional virtue.（表语从句）\n\n有一天你会发现，事业、亲情、友情，都比爱情重要。\n\nSomeday, one will perceive that career, kinship and friendship prove more indispensovble than romance.(That 引导的宾语从句)\n\nThe point seems when wealth will become available for you.\n\n\n考点分析写作主语从句把主语从句放在句末，用 it 作形式主语。\n\nIt… that…\nIt is apparent that…\nIt looks beyond dispute that…\nIt has been widely accepted that…\nIt is universally acknowledged that…\nIt keeps my  argument that…\n\n主语从句的满分句型，可以写在作文中任何一句话前面练习：\n\n显而易见，关于勤奋这个话题已经引起关注了\nIt is looks beyond dispute that the issue about diligence has been brought into the limelight\n\n同位语从句The matter that he managed to find a girlfriend makes his superiours rejoiced.同位语从句既可以放在它所解释的名词后，也可以放在整句话的后面。\n\n没有什么能够掩盖他正在变老这个事实\n\nNothing can hide the truth that she is getting old.\n\n河南人都是骗子这种想法是不正确的\n\nThe outlook proves wrong that private individuals in HeNan seem all deceivers\n\n温室里的花朵，不能经受风雨，这个事实表明我们不该溺爱孩子\n\nThe evidence flowers in the greenhouse fail to undergo storms indicates that kids should by no means spoiled by thein.\n\n\n长难句分析能够识别各个名词性从句，并把他们通顺地翻译出来        \n如何识别主语从句\n只要见到有引导词放在句首，并且从句后没有被逗号隔开，就一定是主语从句。\n主语从句从 that 开始到谓语动词（组）结束。\nIt… that 通常都是主语从句。\n\n练习句子\n板块正在移动是毋容置疑的。\n\nThat the plates are moving is now beyond dispute.\n\nWhether the Government should increase the financing of pure science at the expense of technology or vice versa often depends on the issue of which is seen as the driving force.\n\n政府应该以牺牲技术增加对纯科学的投入，还是以牺牲纯科学为代价增加对技术的投入，这取决于哪一个问题被视为驱动力\n\nHow well the predictions will be validated by later performance depends upon the amount, reliability, and appropriateness of the information used and on the skill and wisdom with which it is interpreted.\n\n\n","slug":"english/grammar_note","date":"2023-01-18T13:33:26.000Z","categories_index":"英语","tags_index":"英语,笔记","author_index":"Joshlee"},{"id":"515daf28d811a0b64e22c0efd4fc6f83","title":"单词库（Alpha）","content":"\n\n\nallot\n\n\n\n\n\n\n\n\n/əˈlɒt/\n\n\nDefinition v.\nto give time, money, tasks, etc. to somebody/something as a share of what is available\nExample\n\nI completed the test within the time allotted.\nHow much money has been allotted to us?\nWe were allotted half an hour to address the committee. \n\nSynonyms\nassign, allocate\n\namong\n\n\n\n\n\n\n\n\n/əˈmʌŋ/\n\n\nDefinition prep.\nsurrounded by somebody/something; in the middle of somebody/something\nExample\n\na house among the trees\nI found the letter among his papers.\nyouths in their late teens sitting among adults.\n\n\nDefinition adj.\nIf you are among people of a particular kind, you are with them and having contact with them.\nExample\n\nThings weren’t so bad, after all. I was among friends again.\nI was brought up among people who read and wrote a lot.\n\n\naccelerate\n\n\n\n\n\n\n\n\n/əkˈseləreɪt/\n\n\nDefinition v.\nIf the process or rate of something accelerates or if something accelerates it, it gets faster and faster.\nExample\n\nGrowth will accelerate to 2.9% next year.\nThe government is to accelerate its privatisation programme.\n\nSynonyms\npromote\n\nDefinition v.\nWhen a moving vehicle accelerates, it goes faster and faster.\nExample\n\nSuddenly the car accelerated.\nShe accelerated away from us.\n\nSynonyms\nspeed up, quicken\n\nburglar\n\n\n\n\n\n\n\n\n/ˈbɜːrɡlər/\n\n\nDefinition n.\na person who enters a building illegally in order to steal\nExample\n\nBurglars broke into the gallery and stole dozens of priceless paintings.\nBurglars broke into their home. \n\nSynonyms\nthief, robber, housebreaker\n\ncognitive\n\n\n\n\n\n\n\n\n/ˈkɒɡnətɪv/\n\n\nDefinition adj.\nCognitive means relating to the mental process involved in knowing, learning, and understanding things.\nExample\n\na child’s cognitive development\nAs children grow older, their cognitive processes become sharper.\nThis is both a cognitive and an emotional process.\n\n\ncoincide\n\n\n\n\n\n\n\n\n/ˌkəʊɪnˈsaɪd/\n\n\nDefinition v.\nIf one event coincides with another, they happen at the same time.\nExample\n\nThe exhibition coincides with the 50th anniversary of his death.\nIt’s a pity our trips to New York don’t coincide.\nThe strike was timed to coincide with the party conference.\n\nSynonyms\noccur simultaneously\n\nDefinition v.\nIf the ideas or interests of two or more people coincide , they are the same.\nExample\n\nOur views don’t always coincide , but we always voice our opinions.\nOur father was delighted when our opinions coincided with his own.\nThe interests of employers and employees do not always coincide.\n\nSynonyms\nagree, match\n\nconservative\n\n\n\n\n\n\n\n\n/kənˈsɜːrvətɪv/\n\nDefinition adj.\nopposed to great or sudden social change; showing that you prefer traditional styles and values\nExample\n\nthe conservative views of his parents\nmusic which is accessible to an audience with extremely conservative tastes\nHer style of dress was never conservative.\nThe southern state’s inhabitants tend to be socially conservative.\n\n\ncorridor\n\n\n\n\n\n\n\n\n/ˈkɒrɪdɔː(r)/\n\n\nDefinition n.\na long narrow passage in a building, with doors that open into rooms on either side\nExample\n\nHis room is along the corridor.\n\n\nDefinition v.\nA corridor is a strip of land that connects one country to another or gives it a route to the sea through another country.\nExample\n\nThe republic lay in a narrow corridor of disputed land. \n\n\ndeposit\n\n\n\n\n\n\n\n\n/dɪˈpɒzɪt/\n\nDefinition n.\na sum of money that is given as the first part of a larger payment\nExample\n\nThey normally ask you to pay $100 (as a) deposit.\nAll deposits are non-refundable.\nA £50 deposit is required when ordering, and the balance is due upon delivery . \n\nSynonyms\ndown payment\n\nDefinition n.\n a sum of money that is paid by somebody when they rent something and that is returned to them if they do not lose or damage the thing they are renting\nExample\n\nto pay a deposit\nYou have to pay a deposit of $1 200 as well as two months’ rent.\nThey’ll probably ask you to leave a deposit.\nIt is common to ask for the equivalent of a month’s rent as a deposit . \n\n\ndeteriorate\n\n\n\n\n\n\n\n\ndɪtɪəriəreɪt\n\n\nDefinition v.\nIf something deteriorates , it becomes worse in some way.\nExample\n\nThere are fears that the situation might deteriorate into full-scale war.\nThe weather conditions are deteriorating .\nGrant’s health steadily deteriorated .\n\nSynonyms\ndecline,  worsen, degenerate , fall \n\ndomestic\n\n\n\n\n\n\n\n\n/dəˈmestɪk/\n\nDefinition adj.\nof or inside a particular country; not foreign or international\nExample\n\ndomestic affairs/politics\nEven passengers on domestic flights may be required to carry ID.\nThe US is unable to meet its *domestic demand* for steel in any given year.\n\nSynonyms\nhome, national, internal\n\nDefinition adj.\nused in the home; connected with the home or family\nExample\n\ndomestic appliances\n…a plan for sharing domestic chores .\ndomestic service (= the work of a servant in a large house)\nThe vast majority of paid and unpaid domestic workers are women.\n\n\ndramatically\n\n\n\n\n\n\n\n\n/drəˈmætɪkli/\n\n\nDefinition adj.\nvery suddenly and to a very great and often surprising degree\nExample\n\nPrices have fallen dramatically.\nEvents could have developed in a dramatically different way.\nSince then the situation has changed dramatically.\n\nSynonyms\nsuddenly, immediately\n\nentertain\n\n\n\n\n\n\n\n\n/ˌentəˈteɪn/\n\nDefinition v.\nto interest somebody or make somebody laugh in order to please them \nExample\n\nThe aim of the series is both to entertain and inform.\nAfterwards live bands will entertain the crowd.\nParents can relax while the kids entertain themselves in the outdoor playground.\n\nSynonyms\nenjoyable, interesting\n\nDefinition v.\nto invite people to eat or drink with you as your guests, especially in your home\nExample\n\nDo you entertain a lot?\nBarbecues are a favourite way of entertaining friends.\nThey entertained us to lunch in their new house.\nI don’t like to entertain guests anymore. \nYou weren’t allowed to entertain men in your rooms even with a chaperone.\n\n\nerr\n\n\n\n\n\n\n\n\n/ɜː(r)/\n\nDefinition v.\nIf you err, you make a mistake.\nExample\n\nIt criticises the main contractor for seriously erring in its original estimates.\nIf you make a threat be sure to carry it out if he errs again.\n\n\nfierce\n\n\n\n\n\n\n\n\n/fɪəs/\n\n\nDefinition adj.\n(especially of people or animals) angry and aggressive in a way that is frightening.\nExample\n\na fierce dog\nTwo fierce eyes glared at them.\nHe suddenly looked fierce.\n\n\nDefinition adj.\nFierce feelings or actions are very intense or enthusiastic, or involve great activity.\nExample\n\nStandards are high and competition is fierce .\nHis wife is his fiercest critic.\nThe town was captured after a fierce battle with rebels at the weekend.\n\n\nDefinition adj.\nFierce conditions are very intense, great, or strong.\nExample\n\nThe climbers were trapped by a fierce storm which went on for days.\nfierce wind\n\nSynonyms\nstrong, powerful, violent\ngrope\n\n\n\n\n\n\n\n\n/ɡrəʊp/\n\n\nDefinition v.\nto try and find something that you cannot see, by feeling with your hands\nExample\n\nHe groped around in the dark for his other sock.\nBunbury groped in his breast pocket for his wallet .\nShe groped for the railing to steady her as she fell.\n\n\nDefinition v.\nIf you grope your way to a place, you move there, holding your hands in front of you and feeling the way because you cannot see anything.\nExample\n\nI didn’t turn on the light, but groped my way across the room. \n\n\nDefinition v.\ngrope somebody to touch somebody sexually, especially when they do not want you to\nExample\n\nIt is claimed he groped a 19-year-old student.\nShe described how he had groped her whenever they were alone.\n\n\nimpatient\n\n\n\n\n\n\n\n\n/ɪmˈpeɪʃnt/\n\n\nDefinition adj.\nannoyed by somebody/something, especially because you have to wait for a long time.\nExample\n\nI’d been waiting for twenty minutes and I was getting impatient.\nThe children were growing impatient.\nHe is impatient as the first hour passes and then another. \n\nSynonyms\nhaste, hurry\n\nDefinition adj.\nIf you are impatient to do something or impatient for something to happen, you are eager to do it or for it to happen and do not want to wait.\nExample\n\nHe was impatient to get home. \nThey are impatient for jobs and security. \n\nSynonyms\neager, longing\n\nDefinition adj.If you are impatient, you are easily irritated by things.\nExample\n\nBeware of being too impatient with others. \nHe threw it aside with an impatient gesture and another oath and walked off. \n\nSynonyms\nirritable, abrupt\n\nloot\n\n\n\n\n\n\n\n\n/luːt/\n\n\nDefinition v.\nIf people loot shops or houses, they steal things from them, for example during a war or riot.\nExample\n\nMore than 20 shops were looted.\nThe trouble began when gangs began breaking windows and looting shops.\nThere have been reports of youths taking advantage of the general confusion to loot and steal.\n\nSynonyms\nrob\n\nmerchant\n\n\n\n\n\n\n\n\n/ˈmɜːrtʃənt/\n\nDefinition n.\na person who buys and sells goods in large quantities, especially one who imports and exports goods\nExample\n\na coal/wine merchant\nAny knowledgeable wine merchant would be able to advise you.\nVenice was once a city of rich merchants.\n\nSynonyms\ndealer, trader, tradeperson\n\nmemorandum\n\n\n\n\n\n\n\n\n/ˌmeməˈrændəm/\n\n\nDefinition adj.\n(formal) a memo (= an official note from one person to another in the same organization)\nExample\n\nan internal memorandum\nleaks of confidential memoranda\n\nmisery\n\n\n\n\n\n\n\n\n/ˈmɪzəri/\n\n\nDefinition n.\nMisery is great unhappiness.\nExample\n\nAll that money brought nothing but sadness and misery and tragedy.\n…the miseries of his youth.\nFame brought her nothing but misery.\n\nSynonyms\nunhappiness, distree, despair\n\nDefinition n.\nMisery is the way of life and unpleasant living conditions of people who are very poor.\nExample\n\nThe vast majority of the population lives in utter misery.\nA tiny, educated elite profited from the misery of their two million fellow countrymen.\n\n\nmortgage\n\n\n\n\n\n\n\n\n/ˈmɔːɡɪdʒ/\n\n\nDefinition n.\na legal agreement by which a bank or similar organization lends you money to buy a house, etc., and you pay the money back over a particular number of years; the sum of money that you borrow\nExample\n\nto apply for/take out/pay off a mortgage\nHe’s been having trouble keeping up with his monthly mortgage repayments.\n\nSynonyms\nhome loan\n\nDefinition v.\nIf you mortgage your house or land, you use it as a guarantee to a company in order to borrow money from them.\nExample\n\nThey had to mortgage their home to pay the bills.\n\n\npreceding\n\n\n\n\n\n\n\n\n/prɪˈsiːdɪŋ/\n\n\nDefinition adj.\nhappening before something; coming before something/somebody in order.\nExample\n\nSee the preceding chapter.\nIt had happened during the preceding year.\n\nproponent\n\n\n\n\n\n\n\n\nprəpoʊnənt\n\nDefinition adj.\nIf you are a proponent of a particular idea or course of action, you actively support it.\nExample\n\nHalsey was identified as a leading proponent of the values of progressive education.\nShe is among the most outspoken proponents of the plan.\nThe theory does still have its proponents.\n\nSynonyms\nsupporter\nreciprocal\n\n\n\n\n\n\n\n\n/rɪˈsɪprəkl/\n\n\nDefinition adj.\ninvolving two people or groups who agree to help each other or behave in the same way to each other\nExample\n\nThe two colleges have a reciprocal arrangement whereby students from one college can attend classes at the other.\nThey expected a reciprocal gesture before more hostages could be freed.\nMany countries have reciprocal agreements for health care. \n\nSynonyms\nmutual, corresponding\n\nretain\n\n\n\n\n\n\n\n\n/rɪˈteɪn/\n\n\nDefinition v.\nTo retain something means to continue to have that thing.\nExample\n\nThe interior of the shop still retains a nineteenth-century atmosphere.\nHe retains a deep respect for the profession.\nto retain your independence\n\nSynonyms\nmaintain, keep, reserve, preserve\n\nDefinition v.\nif a member of the public retains somebody such as a lawyer, they pay money regularly or in advance so the lawyer, etc. will do work for them.\nExample\n\nYou will be paid a retaining fee.\nYou will need to retain the services of a lawyer.\n\n\nreluctant\n\n\n\n\n\n\n\n\n/rɪˈlʌktənt/\n\n\nDefinition adj.\nhesitating before doing something because you do not want to do it or because you are not sure that it is the right thing to do\nExample\n\nHe finally gave a reluctant smile.\nThey nodded in reluctant agreement.\nMr Spero was reluctant to ask for help.\n\nSynonyms\nunwilling\n\nrectify\n\n\n\n\n\n\n\n\n/ˈrektɪfaɪ/\n\n\nDefinition v.\nIf you rectify something that is wrong, you change it so that it becomes correct or satisfactory.\nExample\n\nOnly an act of Congress could rectify the situation.\nWe must take steps to rectify the situation.\n\nSynonyms\ncorrect, right, improve, reform\n\nridiculous\n\n\n\n\n\n\n\n\n/rɪˈdɪkjələs/\n\n\nDefinition adj.\nIf you say that something or someone is ridiculous, you mean that they are very foolish.\nExample\n\nIt is ridiculous to suggest we are having a romance.\nIt was an absolutely ridiculous decision.\n\nSynonyms\nstupid\nspectator\n\n\n\n\n\n\n\n\n/ˈspekteɪtər/\n\n\nDefinition n.\na person who is watching an event, especially a sports event\nExample\n\nThirty thousand spectators watched the final game. \nThe new football stadium will hold 75 000 spectators.\n\nSynonyms\nobserver, viewer\n\nspirit\n\n\n\n\n\n\n\n\n/ˈspɪrɪt/\n\n\nDefinition n.\n the part of a person that includes their mind, feelings and character rather than their body\nExample\n\nYou are underestimating the power of the human spirit to overcome difficulties.\nYoga is meant to unite the body, mind and spirit.\nThe human spirit is virtually indestructible.\n\nSynonyms\nsoul, life\n\nDefinition n.\na person’s feelings or state of mind\nExample\n\nto be in high/low spirits\nto be in high/low spirits\nYou must try and keep your spirits up (= stay cheerful).\n\n\nDefinition COUNTABLE NOUN\na person of the type mentioned \nExample\n\na brave spirit\nkindred spirits (= people who like the same things as you)\nHe found kindred spirits in the peace movement.\n\n\nDefinition n.\nthe soul thought of as separate from the body and believed to live on after death; a ghost\nExample\n\nHe is dead, but his spirit lives on.\nIt was believed that people could be possessed by evil spirits.\na message from the spirit world\n\n\ntender\n\n\n\n\n\n\n\n\n/ˈtendə(r)/\n\n\nDefinition adj.\nSomeone or something that is tender expresses gentle and caring feelings.\nExample\n\nHer voice was tender , full of pity.\ntender words\nPatients may not receive the tender , loving care once associated with a hospital stay.\n\n\nDefinition adj.\n(of food) easy to bite through and cut\nExample\n\nThis meat is extremely tender.\nBoil the beans until they are tender.\nfour large slices of tender chicken\n\n\nDefinition adj.\nIf you say that someone does something at a tender age, you mean that they do it when they are still young and have not had much experience.\nExample\n\nHe had become attracted to the game at the tender age of seven.\n…the loss of her father at such a tender age. \n\n\nexample\n\n\n\n\n\n\n\n\npronunciation\n\nDefinition adj.\nExample\nSynonyms\n\nDefinition v.\nExample\nSynonyms\n\n","slug":"english/vocabulary","date":"2023-01-17T12:35:35.000Z","categories_index":"英语","tags_index":"英语","author_index":"Joshlee"},{"id":"e844d1ea81af098142e44cbca9914529","title":"广东普通专升本考纲(计算机)","content":"\n\n2023\n\n\n\n\n\n\n\n\n加深字体为变动部分\n一、政治理论考试范围马克思主义中国化的历史进程与理论成果；毛泽东思想及其历史地位；新民主主义革命理论；社会主义改造理论；社会主义建设道路初步探索的理论成果；邓小平理论；“三个代表〞重要思想；科学发展观；习近平新时代中国特色社会主义思想及其历史地位；坚持和发展中国特色社会主义的总任务；“五位一体”总体布局；“四个全面〞战略布局；实现中华民族伟大复兴的重要保障；中国特色大国外交；坚持和加强党的领导；时事政治(2022年1月1日至2022年12月31日国内外重大时事政治及中国共产党和中国政府在现阶段的基本路线和重大方针政策）。\n参考书目\n马克思主义理论研究和建设工程重点教材：《毛泽东思想和中国特色社会主义理论体系概论》，北京：高等教育出版社，2021年。\n\n二、英语考试范围1. 词汇认知 3400 个英语单词以及由这些词构成的常用词组【详见《高职高专教育英语课程教学基本要求（试行）》附表四词汇表]，能够按照基本构词法识别生词，并具备在语篇中理解和运用词汇的能力。\n2. 语法掌握基本的英语语法规则【详见《高职高专教育英语课程教学基本要求（试行）》附表三语法结构表〕，具备在语篇中正确运用所学语法知识的能力。\n3. 阅读能读懂书、报、杂志中难度中等的一般性话题的简短文段以及信函、技术说明书、合同等简短的实用文字材料。对所读材料能够（1）理解主旨要义；（2）理解文中具体信息;（3）根据上下文推断单词和短语的含义；（4）做出判断和推理；（5）理解文章的基本结构；（6）理解作者的意图、观点和态度；（7）快速查找相关信息。\n4. 写作能根据所给的提示，用英语写一篇约100个单词的简短应用文。要求格式规范，内容切题，条理清晰，语法正确，表达得体。\n参考书目\n教育部高等教育司编：《高职高专教育英语课程教学基本要求（试行）》，北京：高等教育出版社，2000年。\n\n三、高等数学考试范围1. 函数与极限映射与函数，数列的极限，函数的极限，无穷小与无穷大，极限运算法则，极限存在准则、两个重要极限，无穷小的比较，函数的连续性与间断点，连续函数的运算与初等函数的连续性，闭区间上连续函数的性质\n2. 导数与微分导数概念，函数的求导法则，高阶导数，隐函数及由参数方程所确定的函数的导数，相关变化率，函数的微分．\n3. 微分中值定理与导数的应用微分中值定理，洛必达法则，泰勒公式，函数的单调性与曲线的凹凸性，函数的极值与最大值最小值，函数图形的描绘，曲率，方程的近似解.\n4. 不定积分不定积分的概念与性质，换元积分法，分部积分法，有理函数的积分，积分表的使用\n5. 定积分定积分的概念与性质，微积分基本公式，定积分的换元法和分部积分法，反常积分\n6. 定积分的应用定积分的元素法，定积分在几何学上的应用，定积分在物理学上的应用.\n7. 微分方程微分方程的基本概念，可分离变量的微分方程，齐次方程，一阶线性微分方程，可降阶的高阶微分方程，常系数齐次线性微分方程，常系数非齐次线性微分方程\n8. 向量代数与空间解析几何向量及其线性运算，数量积，向量积，平面及其方程，空间直线及其方程，曲面及其方程，空间曲线及其方程\n9. 多元函数微分法及其应用多元函数的基本概念，偏导数，全微分，多元复合函数的求导法则，隐函数的求导公式，多元函数微分学的几何应用，方向导数与梯度，多元函数的极值及其求法\n10. 重积分二重积分的概念与性质，二重积分的计算法，三重积分，重积分的应用。\n11. 曲线积分与曲面积分对弧长的曲线积分，对坐标的曲线积分，格林公式及其应用，对面积的曲面积分，对坐标的曲面积分，高斯公式，斯托克斯公式\n12. 无穷级数常数项级数的概念和性质，常数项级数的审敛法，幂级数，函数展开成幂级数，函数的幂级数展开式的应用，傅里叶级数，一般周期函数的傅里叶级数\n参考书目\n同济大学数学系铺：《高等数学》（第七版）（上、下册)，北京：高等教育出版社， 2014年.\n\n\n赵树塬主编：《微积分》（第四版）[ 经济应用数学基础（一）]，北京：中国人民大学出版社，2016年.\n\n四、计算机基础与程序设计考试范围一、程序设计与C语言\n二、数据的存储与运算\n三、顺序程序设计\n四、选择结构程序设计\n五、循环结构程序设计\n六、利用数组处理批量数据\n七、用函数实现模块化程序设计\n八、善于使用指针\n九、使用结构体类型处理组合数据——用户自定义数据类型\n十、利用文件保存数据\n十一、数据结构引论\n十二、线性表\n十三、栈和队列\n十四、串、数组和广义表\n十五、树和二叉树\n十六、图\n十七、查找\n十八、排序\n十九、算法的一般概念\n二十、算法分析简介\n参考书目\n谭浩强编：《C语言程序设计》（第4版)，北京：清华大学出版社，2020年。ISBN：9787302544043。\n\n\n严蔚敏、李冬梅、吴伟民编著：《数据结构（C语言版附微课视频）》（第2版），北京：人民邮电出版社，2021年。ISBN：9787115379594。\n\n2022一、政治理论考试范围马克思主义中国化的历史进程与理论成果；毛泽东思想及其历史地位；新民主主义革命理论；社会主义改造理论；社会主义建设道路初步探索的理论成果；邓小平理论；“三个代表〞重要思想；科学发展观；习近平新时代中国特色社会主义思想及其历史地位；坚持和发展中国特色社会主义的总任务；“五位一体”总体布局；“四个全面〞战略布局；实现中华民族伟大复兴的重要保障；中国特色大国外交；坚持和加强党的领导；时事政治(2021年1月1日至2021年12月31日国内外重大时事政治及中国共产党和中国政府在现阶段的基本路线利重大方针政策）。\n参考书目\n马克思主义理论研究和建设工程重点教材：《毛泽东思想和中国特色社会主义理论体系概论》，北京：高等教育出版社，2021年。\n\n二、英语考试范围1. 词汇认知 3400 个英语单词以及由这些词构成的常用词组【详见《高职高专教育英语课程教学基本要求（试行）》附表四词汇表]，能够按照基本构词法识别生词，并具备在语篇中理解和运用词汇的能力。\n2. 语法掌握基本的英语语法规则【详见《高职高专教育英语课程教学基本要求（试行）》附表三语法结构表〕，具备在语篇中正确运用所学语法知识的能力。\n3. 阅读能读懂书、报、杂志中难度中等的一般性话题的简短文段以及信函、技术说明书、合同等简短的实用文字材料。对所读材料能够（1）理解主旨要义；（2）理解文中具体信息;（3）根据上下文推断单词和短语的含义；（4）做出判断和推理；（5）理解文章的基本结构；（6）理解作者的意图、观点和态度；（7）快速查找相关信息。\n4. 写作能根据所给的提示，用英语写一篇约100个单词的简短应用文。要求格式规范，内容切题，条理清晰，语法正确，表达得体。\n参考书目\n教育部高等教育司编：《高职高专教育英语课程教学基本要求（试行）》，北京：高等教育出版社，2006年。\n\n三、高等数学考试范围1. 函数与极限映射与函数，数列的极限，函数的极限，无穷小与无穷大，极限运算法则，极限存在准则、两个重要极限，无穷小的比较，函数的连续性与间断点，连续函数的运算与初等函数的连续性，闭区间上连续函数的性质\n2. 导数与微分导数概念，函数的求导法则，高阶导数，隐函数及由参数方程所确定的函数的导数的相关变化率，函数的微分．\n3. 微分中值定理与导数的应用微分中值定理，洛必达法则，泰勒公式，函数的单调性与曲线的凹凸性，函数的极值与最大值最小值，函数图形的描绘，曲率，方程的近似解.\n4. 不定积分不定积分的概念与性质，换元积分法，分部积分法，有理函数的积分，积分表的使用\n5. 定积分及应用定积分的概念与性质，微积分基本公式，定积分的换元法和分部积分法，反常积分，定积分的元素法，定积分在几何学上的应用，定积分在物理学上的应用.\n6. 常微分方程微分方程的基本概念，可分离变量的微分方程，一阶线性微分方程，常系数齐次线性微分方程\n7. 多元函数微分法及其应用多元函数的基本概念，偏导数，全微分，多元复合函数的求导法则，隐函数的求导公式\n8. 重积分二重积分的概念与性质，二重积分的计算法，三重积分，重积分的应用。\n9. 无穷级数常数项级数的概念和性质，常数项级数的审敛法\n参考书目\n同济大学数学系铺：《高等数学》（第七版）（上、下册)，北京：高等教育出版社， 2014年.\n\n\n赵树塬主编：《微积分》（第四版）[ 经济应用数学基础（一）]，北京：中国人民大学出版社，2016年.\n\n四、计算机基础与程序设计考试范围一、程序设计与C语言\n二、数据的存储与运算\n三、顺序程序设计\n四、选择结构程序设计\n五、循环结构程序设计\n六、利用数组处理批量数据\n七、用函数实现模块化程序设计\n八、指针\n九、使用结构体类型处理組合数据\n十、利用文件保存数据\n十一、数据结构引论\n十二、线性表\n十三、栈\n十四、队列\n十五、算法及复杂度\n十六、树\n十七、散列表\n十八、优先队列\n十九、排序算法\n二十、图\n参考书目\n谭浩强编：《C语言程序设计》（第4版)，北京：清华大学出版社，2020年\n\n\n严蔚敏、李冬梅、吴伟民编著：《数据结构（C语言版附微课视频）》（第2版)，北京：人民邮电出版社，2017年。\n\n","slug":"examination/zhuanshengben_outline","date":"2023-01-06T08:36:43.000Z","categories_index":"应试","tags_index":"考纲,升本","author_index":"Joshlee"},{"id":"7a51c51e0038845cc01998e3246d030c","title":"CET4 备考笔记","content":"同义替换\n\n\n\n\n\n\n\n\n新的\n\nnovel\nnew\nfresh\nmost recent\n\n\n\n\n\n\n\n\n\n\n不同寻常的\n\nstrange\nodd\nunusual\nuncommon\nunfamiliar\n\n\n\n\n\n\n\n\n\n\n机会\n\nodds\nchance\nopportunity\n\n\n\n\n\n\n\n\n\n\n传统\n\nconvention\nconventional\n\n\ntradition\ntraditional\n\n\n\n\n\n\n\n\n\n\n\n\n刺激/动机\n\nmotivation\nincentive\nstimuli\nencouragement\n\n\n\n\n\n\n\n\n\n\n完全的\n\nwhole\nall\nentire\ncomplete\ntotal\nthorough\n\n\n\n\n\n\n\n\n\n\n复杂的\n\ncomplicated\nsophisticated /səˈfɪstɪkeɪtɪd/\ncomplex\noedipus complex 复杂的情结\nnarcissistic complex 自恋情结\n\n\nintricate\ndifficult\n\n\n\n\n\n\n\n\n\n\n仅仅的，只是\n\nmerely\njust\nsolely\nonly\nultimate\n\n\n\n\n\n\n\n\n\n\n大约，大概\n\napproximately\nabout\n\n\n\n\n\n\n\n\n\n\n完全一样\n\nidentical\nsame\n\n\n\n\n\n\n\n\n\n\n完成，成就\n\nachievement\naccomplishment\n\n\n\n\n\n\n\n\n\n\n公司\n\ncorporation\ncompany\nbussiness\nfirm\n\n\n\n\n\n\n\n\n\n\n威胁的\n\nthreaten\nendanger\n\n\n\n\n\n\n\n\n\n\n强调\n\nstress\nemphasize\nput emphasis on\n\n\n\n\n\n\n\n\n\n\n影响力\n\nimpact\ninfluence\naffect\n\n\n\n\n\n\n\n\n\n\n货币\n\nfinance 财政\nfund 货币\ncurrency 货币\n\n\n\n\n\n\n\n\n\n\n贸易\n\ncommerce\ncommercial = advertisement 广告\n\n\n\n\n\n\n\n\n\n\n资助\n\nfinance\nfund\nsponsor\n\n作文模板议论文（essay）\n\n\n\n\n\n\n\n\n三个段落（ 10-11 句）\n第一段（2-3 句）\n前 1-2 句提出你的问题（你对这个问题的看法是什么，好还是不好，应不应该这样做）\n第 3 句过渡句\n\n现象解释\n\n\n\n\n\n\n\n\nKeyword: Why, what\n第一句：With the rapid development of ( society / economy / education / technology / culture / medical service ), it is of great necessity for （youngsters / students / residents / citizens） to _____.\n第二句（提出问题）：\n\n It’s quite natural for us to ponder over the question ( of / that ) _____.\n我们很自然地会想到___ 这一问题\n\n观点选择\n\n\n\n\n\n\n\n\nKeyword: option choice\nNowadays (youngsters / students) have different options upon graduation. Some thinks that (  ) is beneficial, while others think (  ) is a better choice. (列举选择) Personally, I prefer the ( former / latter ). The following reasons can account for my preference.\n问题解决\n\n\n\n\n\n\n\n\nKeyword: How to, solution, measure\nIn contemporary world, (  ) （现象）. I am convinced that it is of great necessity for ( 某人 ) to ( do sth ) . (观点) How to address this problem? The following solutions can account for this issue. (过渡句)\n图画\n\n\n\n\n\n\n\n\nkeyword: image, cartoon , diagram , chart\nAs is starkly mirrored ( reflected ) in the image / chart that （一句话描述图片）it is revealed that ___ (图片内涵) . The following reasons can account for this issue. (过渡句)\n谚语As an old saying goes: _____ . For us college students, it has an increasingly important significance: ( )解释含义___ . The following reasons can account for this issue. \n第二段（6 句）通用\n3 个论点\n3 个论据\n\n第一句（论点 1）：First and formost, there is no doubt that __________ .\n首先毫无疑问的是，__________.\n第二句（论据 1）：Based on big data, a majority of ( successful social elites ) admitted that they have spent 2/3 of their time in (doing sth).\n基于大数据，大部分成功的社会精英承认，他们花了三分之二的时间做某件事\n例：基于大数据，大部分成功的学生们花了三分之二的时间练习口语\n第三句（论点 2）：Furthermore, it is obvious that  ____.\n其次，很明显的是_______.\n例：Furthermore, it is obvious that it is beneficial for students to make foreign friends.\n第四句（论据 2）Where these is/are _____ ,  there is/are _____ .\n有____ ，就有_____\n例：\n\nWhere there is a will, there is a way. 有志者，事竟成\nWhere there are foreign fridends, there is communication, therefore our speaking ability can be improved. 有外国朋友，就有交流\n\n第五句（论点 3）Last but not least, no one can deny that ____.\n最后，没有人可以否定 _____.\n第六句（论据 3）Although ____ , ____.\n尽管 ____ ，但是 ____ ,\n第三段（2 句）通用\n第一句：重申观点\n万能结尾（提出期望）\n\nIn a word, the whole society should pay close attention to the problem of (    ) . Only in this way can we have a bright and promising future.\n总之，全社会都应该关注（ ）问题，只有这样，我们才能有一个光明和充满希望的未来。\n应用文信件（Letter）通知（notice）报道（report）广告（advertisement）练习观点选择练习：2016 年下半年题目：Suppose you have two options upon graduation: one is to find a job somewhere and the other is to start a business of your own, you are to make a choice, write an essay to explain the reason.\n现象解释问题解决图片图表练习：2021 下半年四级作文题目：\nDirections：For this part，you are allowed 30 minutes to write a short essay .You should start your essay with a brief (简短) description of the picture and then express your views on protecting the forests.You should write at least 120 words but no more than 180 words\n练习：\nAt is starkly reflected in the image, a hunter was holding a gun towards a bear. it is revealed that we should protect wild animals. The following solutions can account for this issue.\nFirst and formost, there is no doubt that animals are our friends. Based on big data, a majority of successful social elites have admitted they share a harmonious relationships with animals.Further more, it is obvious that killing is cruel. where there is no buying, there is no killing. Last but not least, no one can deny that there are benefits on genes of wild life.  Though we can’t take advantage of them all for now, the potentials will buried if we kill them all.\nIn a word, the whole society should pay close attention to the problem of animal protection. Only in this way can we have a bright and promising future.\n高频单词\n\n\n\n\n\n\n\n\n以下高频词出自 https://www.bilibili.com/video/BV17w411Z7Wz ，配合浏览器插件 Relingo 食用。每天快速地把所有单词过 2-3 遍。\n\nconsumer\nsocial\nproduct\nlikely\nsystem\nactivity\nreward\nstress*\nexpert*\nconcern*\nuniversity\nindividual*\nview\nopportunity*\nhunt\nchallenge\nprocess\nproject\namount\nability\nrate\nradiation*\nfeature\nenvironment\ncreate\ncrash\nadvertise*\ntend*\nstatus\nreader\nper\nlocal\nhighway\nbrand*\nassume*\nphysical*\ninstant*\nfocus\nfashion\nexpand\neffective\ndeclare\nbenefit*\nadult*\naffect\ncompete\nglobal\npolicy\naccount\nfoundation*\ninvolve*\ntechnology\ncompetition\nbehavior\ncommunity\nrange\nmaintain\naction\nobvious*\nprimarily\nappeal*\ndetail\ndecade\npollution\nadvantage*\nculture*\nautobiography*\nleader\naccordingly*\nplastic*\napprove*\nperformance\nrecognize*\nfactor*\nenormous*\navoid*\nshift\nsource\nfulfill*\nmoral*\nrank\nreplace\ncomplex\ninjury*\noutcome\ninsurance*\nimpression*\nhousehold*\nclaim*\npersonality*\npersonnel*\nemployee\nreserve\napproach*\ncapacity*\ngenerally*\nautomobile\nmale\nregardless*\ncontact\nwealthy*\nestimate*\nincident*\ndevice\nerror\nrelationship\nrecently\nscale\nunion\nclimate*\navaliable\ncriticism*\ndiet*\ncivilian*\nground\nliberal*\nestablish*\nindicate\naccomplish\nfinally\nspot*\npotential*\nprofessional*\nideal\nreflect\nconsiderable*\ninfluence\ntrace\nattitude\nchemical\nnetwork\npositive\nterritory*\nengage*\nwitness*\nwelfare*\ncareer\nattach*\nprofit\nmusician\npurchase\ncompetitive\nparticularly*\nassign\nresponse\npace*\ncomplaint\nidentify\narise\nvictim*\nsample\nmodify\nproperty\nstructure\ntarget\nbelief\nminority*\nresistant*\ntheory*\nsignal*\nbloom*\ncheat\ninstance\ntransfer\nthreaten*\nabroad\naudience\nscan\ncorporation\nthreat*\ngas*\npromote\nindustrial*\nstyle\ngrant\napply\nextend\ninstall\nimpact\nfunction\nuser\npropose*\nalter\nagency*\ncontribute\neducate\nabsent*\npoison*\nairline\npossibility\nflash\nnuclear*\nnucleus*\nraw\nextensive\nmilitary*\ndirectly\ndeny\nabsorb*\ncommittee\ncomplain*\naid\nprotein*\nstatement\ninstitution*\nroute\nassociate*\ngrowth\nconvince*\nliberate*\ncell\npublish\nyoungster\nfailure\nfaint*\nrob*\nresident*\nfund*\nappearance\nportable\nefficient\npreference\nsolution\nconfidence*\ntreatment*\nadopt*\nskilled\ncultivate*\nrespond\nvary*\nexit\nsurvey*\nlest*\nvehicle\nconstant\nspeaker\natmosphere*\nlatter\nreform*\neconomy*\nprimary\ndiffer\ncapable\ndistinct*\ndefine\nresist*\nargument\ntransform\ndespite*\nstrengthen*\ndistinguish*\nemotional\ndata\nachievement*\nstrategy*\nsufficient*\nban\npoverty*\nwage*\nwisdom*\nassemble*\npredict\naccurate*\nadapt*\nrisk*\nliquid*\nthunder*\nvirtue*\nfemale\nrecommend\nequality\neconomic*\neconomics*\nemit\nbar\narrange*\nconference*\nimprovement*\nprevious\nsensible*\nexchange\nconsumption*\nintelligence*\ndebate*\ncriticize*\nrail*\nreveal\nspray*\ninvestment*\nreinforce*\ncope*\nexceed*\nconfuse*\naware*\nsuperior\nemphasize\nregion\npop\nintensity*\nappreciate*\ncolleague*\ntransportation\neveryday\nfame*\nfamiliar*\nurban*\nspan\nessential*\ninhabitant*\nweapon\naccumulate*\neliminate*\nremarkable*\nremedy*\nmislead*\nwhale*\ncliff*\ndiscard*\naspect*\nshortage\nmobile\ncrime*\nrelax\nfleet*\ndisplay\nmask*\nreverse\nsecurity\nemphasis*\nlucky\nsignificant*\naircraft*\ncease*\ntransmit\ngasoline*\nconduct*\nabandon\nstimulate*\nbind\npressure*\ncharacterize*\ncycle\nenable\ncraft*\nconsist*\nvital*\npowerful\nnavy*\nauthority\nshrink*\nrid\nsurround*\nalike*\narouse*\nexcessive*\ndispute*\nbehave\nelectrical\nhighly\nselect\ncontrast\ninfant\nathlete*\noverseas*\nelevator*\napart\nreality*\ncommitment*\ngaze*\ntough*\nexpense\nsensitive*\nanxiety*\nevidence*\nimage\njournal\ndelivery\ncommit\nadvertisement*\ncoordinate*\nurgent*\ntalent*\npeculiar*\nhandle\nhandsome\nrepresent\nexception\nspecific*\nbalance\nindoor\nrelease\nincreasingly\nreputation*\nforbid*\ninspire*\nusage\ndistress*\ncommunicate*\nappoint*\nreaction\nsalad\ninternal\nprior*\ngenerous*\nfundamental*\nversion\nappointment*\ndefinite*\ncabinet*\naluminum*\nalways\nitem\ncode\nprosperity*\nresponsibility*\nanalyze\ninterfere\ngenerate\nequip\nworldwide\nmission*\nspecialize*\nemployment\nswitch\nobserve*\nnegative\ninvention*\nhumor*\ninferior*\ntypical\ncommand\nconfirm\nintelligent\nlabel\npigeon*\nancient*\nslight*\ndomestic*\nvacant*\nconvert\nforth\nrelate\ndisturb*\nengine\nslice*\nnavigation\nelectronic\nelectronics\nparliament*\nnecessarily\nemerge*\nnumerous\ngenuine*\nconstruct\nannoy*\ncharacter\nstrain*\nobtain\nnecessity\nproportion*\nloyalty*\nlubricate*\ninsert\nviolence\nnaturally\nexport\ntender*\nabsence*\nclassify*\nmood*\ncrisis*\ncomprehension*\ndiscipline*\ntax\ninfluential*\ninform*\noriginal*\nmanagement\nreluctant*\nhousewife\nexpose*\nentitle*\nenvy*\ntendency*\ncommission\nregister\nmedia\ncounty*\nreproduce\nneighborhood*\ndisposal*\ncuriosity*\npassive*\ngap\ndump\nrarely*\nsuggestion\nlocate\ninteraction*\nundoubtedly\nsomewhat*\nsum\nrack*\ntransmission*\nexternal\ncrack*\nconvenience*\nadequate*\nvolunteer*\nphenomenon*\ncomparison*\ntypewriter\nchannel\nsophisticated*\nconclude*\nsection\nparticipate*\ndepression*\nqueue\nvice*\nlaunch\nmanner*\nexhaust*\nundertake*\nmotivate*\nproposal*\ntremendous*\nperspective*\naggressive*\nacademic*\nlag*\napplication\ndistribute*\ncontrary*\ncomprise*\nelement\nunlike\nmostly*\nmotel*\nbackground\nvisual\nrefine*\nresponsible*\npetroleum*\nlegal*\ncivilization*\npump*\nquote*\noutward*\ndecrease\nfatal*\naccuse*\naccustomed*\nobjective*\nconservation*\noptical*\ndelicate*\nmechanic*\nmechanics*\nscholarship*\ncarpenter*\nfluent*\nswallow*\nepisode*\nattraction*\norbit*\nmixture\nscreen\nadministration\nabuse*\nomit*\naccommodation*\nacceptance*\nconflict*\nsoda\nscheme\nconservative*\nattribute\nleisure*\nretire\nmere*\ncomment\nsalary\npreserve*\noverall*\nensure\nimpose*\nunfortunately*\nevolution*\naccess\nidentical*\njoint*\nintention*\nfee\ndebt\nadvisable*\nsequence\ncourt*\nintroduction\ncompetent*\nfederal*\ntemper*\npercentage*\nconsiderate*\nillegal\nlargely*\nintellectual\nsenior*\nmature*\ninterval\ngrasp*\noutput\ndrum*\ncautious*\nrude*\nelect*\nstir*\ninsight*\ndurable*\nhorizontal*\nhorn*\nphilosophy*\nappropriate*\nfaulty*\ngenius*\ndownward*\nexecutive*\nsurplus*\nlibrarian*\nstretch*\nhandy*\ndeliberate*\ncapture*\nphrase*\nalternative*\naward\nincline*\ncancer*\ncollection\nglimpse*\ndemonstrate*\nskim*\ninstruct*\nconstitution*\nmanufacture*\ndrama*\nrelief*\nagent\ntrail*\nconnection\nmill*\ncommander*\nhandful*\nmedium*\nleadership\ncreature*\ninstrument*\nsubstitute*\nchin*\nsteady*\nspecialist*\nadjust*\nenforce*\norgan*\ngrocer*\ncreep*\ncooperate*\nsympathetic*\nstorage\ndepart*\nrender*\nprivilege*\nteenager*\ncontribution\nfeedback*\nacquisition*\nexistence*\nexplore\nwax*\nmess*\nprince*\ngenerator*\nfatigue*\naccompany*\nrural*\nhoney\nattain*\nbillion\nuncover*\nlocomotive*\ntrap*\nassociation*\nspite*\ninterview\npessimistic*\nbark*\ndevil*\nuniverse*\nreduction*\npsychological*\ninvade*\nidentity*\npermanent*\nscrew*\ninterpretation*\neditor\nguarantee*\nclassic*\npose*\ndelegate*\nartificial*\ncassette*\nromantic*\nannual*\napartment*\ndeposit*\nfantasy*\nmud*\nauthor\nassure*\ncorrespond*\noutlet*\ntopic\nrival*\ninitiative*\nslide*\nextreme\nmisunderstand\nevident*\ncasual*\nroutine*\ntrumpet*\nancestor*\nstaff*\nnotion*\ncounter\nfabric*\noccasion*\nlump*\nhopeless*\ndocument\nprecaution*\nintend*\ncash*\nhardware\ntidy\nresolve\nprotective*\nquit\nsevere*\nextension\ntrial*\nexpectation\ntelescope*\npassport\nexploit*\ndemocracy*\nrequirement\nfile\nneglect*\nexaggerate*\nthirst*\novernight*\nplot\nestate*\nliter*\nvariation*\ncopper*\ndevise*\nprinciple*\nsportsman*\ncreative\nformer*\nunity*\nsimilarly*\nassumption*\nreception*\n\nEnding","slug":"english/CET4","date":"2022-11-19T02:53:51.000Z","categories_index":"英语","tags_index":"英语,笔记","author_index":"Joshlee"},{"id":"2f67bc59e6bba41771deb086baae455e","title":"英语阅读理解训练","content":"\n\n阅读题型\n事实细节题\n\n词语理解题\n\n推理判断题\n\n观点态度题\n\n主旨大意题\n\n\n训练方法精读\n做一遍\n不借助任何东西，自己手动全文翻译一遍\n借助工具查单词、查语法再翻译一遍（切忌整句翻译）\n看答案：借助解析进行修改翻译\n再做一遍，标注题型，找到答案句\n\n泛读TODO\n阅读理解技巧\n读懂文章首句，把握全文方向\n看一道题做一道题\n划题目与选项关键词 - 概括+定位+ 区分\n同义转换 - 圈出与题目或选项与原文相近的词或表达\n同元素可排除\n常识判断\n带有绝对性词语的选项不选 - only\n\n完形填空技巧\n不靠所谓的语感做题，所谓的语感一般都是错的，必须要靠【证据】做题，每一个选项都要问一下自己：为什么选这个而不选那个\n读懂首段首句, 把握全文方向\n看一道题做一道题\n跳过毫无头绪的题\n圈出所有的转折词，but/however/while/on the contrary…(相反)\n同元素可排除\n圈出文章与选项相同、相近、相反的词\n\n精读第一篇\n\n\n\n\n\n\n\n\n2017 广东专插本英语真题 - Passage 1\n原文This past fall semester, at Duke University, there were two students who were taking Organic Chemistry. They did pretty well on all of the tests and the midterms and labs,etc., such that going into the final they had a solid “A” . There two friends were so confident going into the final that the weekend before finals‘ week, even though the Chemistry final was on Monday, they decided to go up to the University of Virginia and have a party with some friends up there. So they did this and had a great time. However, with the aftereffects of alcohol and everything, they overslept all day Sunday and didn’t make it back to Duke until early Monday morning.\nRather than taking the final then, what they did was to find Professor Aldric after the final and explain to him why they missed the final. They told him that they went up to UVA for the weekend, and had planned to come back in time to study, but they had a flat tire (爆胎) on the way back and didn’t have a spare and couldn’t get help for a long time and so were late getting back to campus.\nAldric thought this over and then agreed that they could make up the final on the following day. The two guys were overjoyed and relieved. So, they studied that night and went in the next day at the time that Aldric had told them. He placed them in separate rooms and handed each of them a test booklet and told them to begin.\nThey looked at the first problem, which was something simple about free radical formation and was worth 5 points. “Cool, “ they thought, “this is going to be easy. “ They did that problem and then turned the page. They were unprepared, however, for what they saw on the next page.\nIt said: (95 points) Which tire was flat?\n问题The two students decided to visit their friends at the weekend because ____.\nA. they didn’t want to take the exam\nB. they were invited by their friends\nC. they were not worried about the exam at all\nD. they forget the arrangement of the final exam\n\nThey didn’t return as planned because ____.\nA. they got lost on their way back\nB. they slept beyond the time to come back\nC. their car broke down on their way back\nD. they couldn’t get help when they were in difficulty\n\nHow did the Professor arrange the make-up exam?\nA. He made the exam booklet very long.\nB. He gave them different exam papers.\nC. He asked a very surprising question.\nD. He gave them very limited time to finish the paper\n\nWhen they took the first glance at the exam booklet, they thought\nA. it was easy\nB. it was too much\nC. it was too difficult\nD. it was reasonable\n\nIt can be inferred from the passage that ____.\nA. the students didn’t like Professor Aldric\nB. the two students had difficulties in their studies\nC. Professor Aldric was very clever and humorous\nD. the two students would surely pass the make-up exam\n我的答案\nC ✅\nD ❌ answer: (B)\nA ❌ answer: (C)\nA ✅\nC ✅\n\n翻译（自）\n\n\n\n\n\n\n\n\n不借助任何工具，自己翻译\n在杜克大学，这个过去掉落的 semester，有两个学生在讨论着圣诞节。他们在所有的考试和期中和实验室中都做的很好，于是他们最终得到了个“A”的固体。他们两个朋友都在临近最后一周的周末的期末的时候感到 confident ，但是圣诞节最终在周一，他们决定去 Virginia 的大学，那有一个很多朋友的聚会。于是他们做这个和有个美好的时间。然而，伴随着酒精的后劲和每个东西，他们周日一整天睡过头了，没去回到 Duke 大学，直到周一的早上。\n再比如到期末之后，他们期末之后去找专家 Aldric去解释他为什么没参加忘记了期末考试。他们告诉他他们可以在周末前往UVA，计划好回来学习的时间，但他们在回来的路上车子爆胎了，长时间没有空闲也不能得到取得帮助，于是他们回校园迟到了。\nAldric 想结束然后同意了他们可以在之后重新期末考试。两个小伙子非常开心和信任。于是，他们晚上回去就学习了，在明天的那个时候 Aldric 告诉了他们。他安排他们在分离开的教室，给他们每个人一张试卷，告诉他们可以开始考试了。\n他们看到第一个问题，是一道价值 5 分，关于一些简单的关于自由民族的信息。“太棒了”，他们想道，“这也太简单了。”他们做完了那个题后翻页。然而，他们完全没意料到，他们看到的下一页。\n上面写着：（95 分）是哪一个轮胎爆胎的？\n逐句翻译\n\n\n\n\n\n\n\n\n借助工具，重新逐句翻译\n\nThis past fall semester, at Duke University, there were two students who were taking Organic Chemistry.\n词汇短语\n\nfall  \nn.秋季，秋天\n\n\npast  \nn.刚结束的\n\n\nsemester  \nn.学期\n\n\nOrganic \nn.有机\n\n\nChemistry \nn.化学\n\n\n\n解析\n”This past fall semester“使用独立主格结构，代词\n翻译\n在杜克大学这个刚结束的秋季学期，有两个正在讨论有机化学的学生。\n\nThey did pretty well on all of the tests and the midterms and labs,etc., such that going into the final they had a solid “A”\n词汇短语\n\nmidterm\nn.期中考试\n\n\nthat going\n使得\n如此…以致\n\n\nsolid\nadj.一致的，团结的\nadj.坚硬的\nn.固体\n\n\n\n翻译\n他们在所有的测试和期中考试以及实验等方面中都做的非常漂亮，使得他们期末考试一致都拿到了“A”\n\nThere two friends were so confident going into the final that the weekend before finals‘ week, even though the Chemistry final was on Monday, they decided to go up to the University of Virginia and have a party with some friends up there.\n词汇短语\n\nconfident\nn. 自信的\n\n\neven though\n虽然\n\n\ngo up to\n前往\n\n\n\n翻译\n那两个朋友对于期末周之前周末的考试非常自信，虽然化学期末考试在周一，但他们决定前往 Virinia 大学和那里的一些朋友参加聚会。\n\n\nSo they did this and had a great time.\n词汇短语\n\nhave a great time\n玩得开心\n\n\n\n翻译\n所以他们在那玩的很开心\n\n\nHowever, with the aftereffects of alcohol and everything, they overslept all day Sunday and didn’t make it back to Duke until early Monday morning.\n词汇短语\n\nhowever\n然而\n\n\naftereffect\n副作用\n后劲\n\n\nuntil\nprep. 到…时\nconj. 到…时\n\n\n\n翻译\n然而，随着酒精和其他一切的副作用，他们周日一整天都睡过头了，没能在周一凌晨回到杜克大学。\n\nRather than taking the final then, what they did was to find Professor Aldric after the final and explain to him why they missed the final.\n词汇短语\n\nrather than\n宁愿\n而不是\n\n\n\n分析\nRather than taking the final then 状语前置\nrather than常用于两个选项比较，表示“是…而不是”，例如：\n\nFor exercise, I walk rather than run.\n以运动来说，我是走路而不是跑步。\nShe takes a bus rather than drive a car to work. \n她乘坐公共汽车而不是开车上班。\n\n放在句首则表示“没有…而是”，例如：\n\nRather than stay at home, my sister went out for a walk.\n我姐姐没有待在家，而是出门散步去了。\nRather than riding a bicycle, she walked to work.\n他没有骑单车，而是走路去工作。\n\nwhat they did 为主语从句， was 为谓语动词\n翻译\n他们没有参加期末考试，而是在期末考试后找到阿尔德里奇教授，向他解释为什么他们错过了期末考试。\n\nThey told him that they went up to UVA for the weekend, and had planned to come back in time to study, but they had a flat tire (爆胎) on the way back and didn’t have a spare and couldn’t get help for a long time and so were late getting back to campus.\n词汇短语\n\nwent up to\n前往\n\n\nin time\n及时\n\n\nspare\nadj.备用的\nv.抽出；节约；保证\nn.备用品\n\n\nflat tire\n爆胎\n\n\n\n翻译\n他们告诉教授，他们周末去 UVA，他们原本计划按时回来学习的，但他们在回来的路上车子爆胎了，也没有备胎，在长时间里不能得到帮助，于是就很晚才回到学校。\n\nAldric thought this over and then agreed that they could make up the final on the following day.\n词汇短语\n\nmake up\n补考\n化妆\n补充\n\n\nsb. thought this over\n…仔细考虑…\n\n\nthe following day\n接下来的一天（第二天）\n\n\n\n翻译\nAldric 仔细考虑了一下，然后同意了他们可以在明天补考期末考试。\n\nThe two guys were overjoyed and relieved.\n词汇短语\n\noverjoyed\n狂喜\n\n\nrelieve\nv.缓解；解除\n\n\n\n翻译这两个小伙子狂喜并放心了。\n\nSo, they studied that night and went in the next day at the time that Aldric had told them.\n翻译于是，他们在那一晚上疯狂学习，到了第二天的 Aldric 告诉他们的时间。\n\nHe placed them in separate rooms and handed each of them a test booklet and told them to begin.\n词汇短语\n\nseparate\nadj.单独的\nv.分离\n\n\nplace\nv.安置\n\n\nbooklet\n小册子\n\n\n\n翻译教授将他们安排在独立的房间，交给了他们每个人一个考试手册并告诉他们可以开始答题了。\n\nThey looked at the first problem, which was something simple about free radical formation and was worth 5 points.\n词汇短语\n\nradical\n adj.根本的\n\n\nformation\nn.形成；构成\n\n\nfree radical\n自由基（化学）\n\n\n\n翻译\n他们看到第一个问题：一个简单的关于自由的基本构成，价值 5 分。\n\n“Cool, “ they thought, “this is going to be easy. “\n翻译\n“太棒了，” 他们想，“这个太简单了。”\n\nThey did that problem and then turned the page.\n翻译\n他们做完了这个题，然后翻到下一页。\n\nThey were unprepared, however, for what they saw on the next page.\n词汇短语\n\nunprepared\n没准备的\n\n\nhowever\n然而\n无论怎样\n\n\n\n翻译❎ 然而，他们看到下一页的题，并没有准备。\n✅ 然而，他们对下一页中的内容完全没有准备。\n\nIt said: (95 points) Which tire was flat?\n翻译上面写着：（95 分）是哪一个轮胎爆了？\n\nDeepL过去的秋季学期，在杜克大学，有两个学生正在学习有机化学。他们在所有的测试、期中考试和实验等方面都做得很好，因此在进入期末考试时，他们的成绩是 “A”。这两个朋友对期末考试非常有信心，在期末考试周之前的周末，尽管化学期末考试是在星期一，他们还是决定去弗吉尼亚大学，和那里的一些朋友开个派对。所以他们这样做了，而且玩得很开心。然而，在酒精和一切的影响下，他们周日一整天都睡过头了，直到周一凌晨才回到杜克大学。\n他们没有参加当时的期末考试，而是在期末考试后找到奥德里克教授，向他解释他们为什么错过了期末考试。他们告诉他，他们周末去了弗吉尼亚大学，并计划及时回来学习，但他们在回来的路上爆胎了，没有备用轮胎，而且很长时间都无法得到帮助，所以回校晚了。\n奥德里克考虑了一下，然后同意他们可以在第二天补上决赛。这两个家伙喜出望外，松了一口气。于是，他们当晚学习，第二天在奥德里克告诉他们的时间去了。他把他们安排在不同的房间，给他们每人发了一本试卷，让他们开始。\n他们看了看第一个问题，那是一些关于自由基形成的简单问题，价值5分。”酷，”他们想，”这将是很容易的。”他们做了这个问题，然后翻开了这一页。然而，他们对下一页上的内容毫无准备。\n上面写着：（95分）哪个轮胎是瘪的？\n网易有道在刚刚过去的秋季学期，杜克大学有两个学生选修了有机化学。他们在所有的测试、期中考试和实验等方面都做得很好。在进入决赛时，他们获得了一个坚实的“a”。有两个朋友对进入决赛充满信心，所以在期末周的前一个周末，尽管化学期末考试是在星期一，他们还是决定去弗吉尼亚大学和一些朋友在那里开个派对。所以他们就这么做了，玩得很开心。然而，由于酒精和其他一切的影响，他们周日睡过头了，直到周一凌晨才回到杜克大学。 \n他们没有参加期末考试，而是在期末考试后找到阿尔德里奇教授，向他解释为什么他们错过了期末考试。他们告诉他，他们周末去了UVA，本来打算及时回来学习，但在回来的路上轮胎爆了(爆胎)，没有备胎，很长一段时间都得不到帮助，所以回学校迟到了。 \n奥尔德里奇想了想，然后同意他们可以在第二天进行决赛。两个人喜出望外，松了一口气。于是，他们就在那天晚上进行了研究，第二天在奥尔德里克告诉他们的时间去了学校。他把他们分别安排在不同的房间里，递给他们每人一本测试手册，然后让他们开始。 \n他们看了第一个问题，这是一个关于自由基形成的简单问题，值5分。“太好了，”他们想，“这将会很容易。”他们做了这道题，然后翻过这一页。然而，他们对下一页上的内容毫无准备。 \n上面写着:(95分)哪个轮胎没气了?\n第二篇\n\n\n\n\n\n\n\n\nCET4 2021-6-1 Part 3 Section C Passage One\n原文Educators and business leaders have more in common than it may seem. Teachers want to prepare students for a successful future. Technology companies have an interest in developing a workforce with the STEM (science, technology, engineering and math) skills needed to grow the company and advance the industry. How can they work together to achieve these goals? Play may be the answer. \nFocusing on SIBM skills is important, but the reality is that SIBM skills are enhanced and more relevant when combined with traditional, hands-on creative activities. This combination is proving to be the best way to prepare today’s children to be the malcers and builders of tomorrow. That is why technology companies are partnering with educators to bring back good, old-fashioned play. \nIn fact many experts argue that the most  21st-century skills aren’t related to specific technologies or subject matter, but to creativity; skills like imagination, problem-finding and problemsolving, teamwork, optimism, patience and the ability to experiment and talce risks. These are skills acquired when kids tinker (鼓捣小玩意） . High-tech industries such as NASA’s Jet Propulsion Laboratory have found that their best overall problem solvers were master tinkerers in their youth. \nThere are cognitive (认知的） benefits of doing things the way we did as children—building something, tearing it down, then building it up again. Research shows that given 15 minutes of free play, four- and five-year-olds will spend a third of this time engaged in spatial, mathematical, and architectural activities. This type of play—especially with building blocks一helps children discover and develop key principles in math and geometry. \nIf play and building are critical to 21st-century skill development, that’s really good news for two reasons: Children are born builders, makers, and creators, so fostering (培养） 21st-century skills may be as simple as giving kids room to play, tinker and try things out, even as they grow older. Secondly, it doesn’t talce 21st-century technology to foster 21st-century skills. This is especially important for underresourced schools and communities. Talcing whatever materials are handy and tinkering with them is a simple way to engage those important “malcer” skills. And anyone, anywhere, can do it.\n问题What does the author say about educators? \nA) They seek advice from technology companies to achieve teaching goals. \nB) They have been successful in preparing the workforce for companies.\nC) They help students acquire the skills needed for their future success. \nD) They partner with technology companies to enhance teaching efficiency. \nHow can educators better develop students’ STEM skills, according to the author? \nA) By blending them with traditional, stimulating activities.\nB) By inviting business leaders to help design curriculums.. \nC) By enhancing students’ability to think in a critical way. \nD) By showing students the best way to learn is through play. \nHow do children acquire the skills needed for the 21st century? \nA) By engaging in activities involving specific technologies. \nB) By playing with things to solve problems on their own. \nC) By familiarizing themselves with high-tech gadgets. \nD) By mastering basic principles through teamwork. \nWhat can we do to help children learn the basics of math and geometry? \nA) Stimulate their interest as early as possible. \nB) Spend more time playing games with them. \nC) Encourage them to make things with hands. \nD) Allow them to tinker freely with calculators. \nWhat does the author advise disadvantaged schools and communities to do? \nA) Train students to be makers to meet future market demands. \nB) Develop students’ creative skills with the resources available. \nC) Engage students with challenging tasks to foster their creativity. \nD) Work together with companies to improve their teaching facilities.\n翻译（自）老师和商业领导者有很多共同点，老师想要准备学生成功的未来。科技公司致力于去发展 STEM 技能的工坊，这需要去培养公司和发展工业。他们如何一起工作去实现这些目标呢？“玩”也许是答案。\n聚焦于 STEM 技能是重要的，但当与传统和具有创造性的活动相结合的时候，STEM 技能是起增强和联系的作用。这个结合是培养今天的孩子去成为明天的创造者和建造者最好的方式。这就是为什么科技公司都采用 教育者带回好的，旧潮流玩耍 的模式。\n事实上一些专家有争议，21 世纪最重要的技能不是关于特殊科技和学科改造的，而是创造性；技能像想象力，查找问题，问题解决，团队工作，优化，练习和能力去锻炼和放置危险。这些都是当孩子在捣鼓小玩意时获得的技能。高科技产品，比如 NASA 的喷气xxx 实验室发现最好的问题解决者，在小时候去主动地去捣鼓小玩意。\n这些都是认知上做事方式的效益，我们是小孩的时候，建造一些东西，撕毁掉，再把它建起来。研究者展示了：给15 分钟自由玩耍，四到五岁的孩子将花三小时去参与在精神学，数学，建筑学。这个玩耍的类型是使用建筑块去建造，这可以帮助孩子发现和开发数学和几何学。\n如果玩和建造成为 21 世纪的技能发展，这真的是好消息，有两个原因：儿童是天生的建造者，制造者，创造者，所以培养 21 世纪的技能可以给孩子一个空间去玩，捣鼓小玩意和尝试做完整的事情，直到他们长大。第二，这不用 21 世纪的科技去培养 21 世纪的技能。这对于资源落后的学校和社会是特别重要的。无论什么materials、手动和鼓捣小玩意，都是去培养重要的“制造者”者节能的简单途径。每个人，在每个地方，都可以做到。\n翻译（查）老师和商业领导者有很多共同点，老师要为学生成功的未来做准备。科技公司需要推动公司和产业的发展，从而致力于去发展 STEM 技能的劳动力。他们可以如何一起去实现这些目标呢？“玩”也许是答案。\n聚焦于 STEM 技能是重要的，但是事实是，当STEM 技能在与传统和动手创造的活动相结合的时候，会得到增强和更相关。这个结合证明了这是最好的让今天的孩子成为明天的制造者和建造者的方式。这就是为什么科技公司与教育工作者带回老旧的好游戏的原因\n事实上一些专家认为，21 世纪最重要的技能不是和特定的科技或者学科问题有关，而是创造性；一些技能比如，想象力，查找问题，问题解决，团队工作，优化，耐心和经历和承担危险的能力。这些都是当孩子们在捣鼓小玩意时获得的技能。比如高科技企业，NASA 的喷气推动实验室发现，全部问题的最好解决者，是年轻时候掌握了捣鼓小玩意的他们。\n我们像孩子一样去建造、摧毁、再建造起来的这种方式，是有做事情的认知上的好处的。研究者展示了：给十五分钟的自由玩乐时间，四岁和五岁的孩子将花三分之一的时间去参与空间，数学，建筑学活动，这个玩耍的方式，特别是使用建筑块，帮助孩子发现和开发在数学和几何学的核心准则。\n如果玩耍和建造是21 世纪技能发展的关键，这真的是好消息，有两个原因：儿童是天生的建造者，制造者，创造者，所以培养 21 世纪的技能非常简单，给孩子一个屋子去玩、鼓捣、尝试新事物，即使他们长大了。第二，这并不需要 用21 世纪的科技去培养 21 世纪的技能。这对于资源不足的学校和团体来说是特别重要的。无论采用什么材料都可以很有用，用他们简单的方式捣鼓小玩意，去从事他们重要的“建造者”的技能。每个人，在每个地方，都可以做到。\n翻译（改）老师和商业领导者拥有的共同点比看上去更多，老师想让学生为成功的未来做好准备。科技公司热衷于培养一支具备 STEM（科学、技术、工程和数学）技能的员工队伍，这些技能是推动公司和行业发展所不可或缺的。他们可以如何一起去实现这些目标呢？“玩”也许是答案。\n聚焦于 STEM 技能固然重要，但是事实是，当与传统的动手创造性活动相结合的时候，STEM技能会得到增强，并且更有意义。事实证明，这种结合是让如今的孩子成为未来的制造者和建造者做好准备的的最佳方式。这就是科技公司正与教育工作者合作，以重新引入优秀的老式玩法的原因。\n事实上一些专家认为，21 世纪最重要的技能与特定的技术或主题无关，而是和创造力有关；如想象力，发现问题，问题解决，团队工作，乐观，耐心以及实验和冒险的能力。这些都是当孩子们在捣鼓小玩意时获得的技能。NASA 的喷气推动实验室等高科技行业发现，他们最好的综合问题解决者在年轻时都善于鼓捣小玩意\n当我们按照孩童时期的方式做事-建造一个东西，拆掉它，然后重新建造它—我们会获得认知上的益处。研究表明，如果给四五岁的孩子十五分钟的自由玩乐的时间，他们将会将三分之一的时间花在空间，数学，建筑学活动上，这个类型的玩耍，特别是使用搭积木，帮助孩子发现和掌握在数学和几何学的关键原理。\n如果说玩耍和建造对 21 世纪的技能发展至关重要，那么这确实是好消息，有两个原因：孩子是天生的建造者，制造者，创造者，所以培养 21 世纪的技能可能会非常简单，给孩子一个玩耍、鼓捣、尝试的空间即可，即使他们长大了也是如此。第二，这并不需要 用21 世纪的科技去培养 21 世纪的技能。这对于资源不足的学校和团体来说是特别重要的。利用任何手边的材料进行捣鼓是培养那些重要的“制造者”技能的一个简单办法，并且每个人在任何地方都可以做到。\nDeepL教育工作者和商业领袖的共同点比看起来要多。教师希望为学生准备一个成功的未来。科技公司有兴趣培养具有STEM（科学、技术、工程和数学）技能的劳动力，以促进公司发展和行业进步。他们如何才能共同实现这些目标？游戏可能就是答案。\n关注STEM技能是很重要的，但现实是，STEM技能在与传统的、动手的创造性活动相结合时，会得到加强，而且更有意义。事实证明，这种结合是培养今天的孩子成为明天的破坏者和建设者的最佳方式。这就是为什么技术公司正在与教育工作者合作，使好的、老式的游戏回归。\n事实上，许多专家认为，21世纪最重要的技能与特定的技术或主题无关，而是与创造力有关；这些技能包括想象力、发现问题和解决问题、团队合作、乐观主义、耐心以及实验和冒险的能力。这些都是孩子们在修补（鼓捣小玩意）时获得的技能。. 高科技行业，如美国宇航局的喷气推进实验室发现，他们最好的整体问题解决者是年轻时的修补高手。\n按照我们的方式做事，有认知上的好处。按照我们小时候的方式做事，会有一些好处，比如建造一些东西，把它拆掉，然后再建造起来。研究表明，如果有15分钟的自由游戏时间，四岁和五岁的孩子会花三分之一的时间从事空间、数学和建筑活动。这种类型的游戏，特别是玩积木，有助于儿童发现和发展数学和几何的关键原则。\n如果游戏和搭积木对21世纪的技能发展至关重要，这确实是个好消息，原因有二。儿童是天生的建设者、制造者和创造者，所以培养 21世纪的技能可能很简单，就是给孩子们提供玩耍、修补和尝试的空间，即使他们长大了。第二，培养21世纪的技能不需要21世纪的技术。这对资源不足的学校和社区来说尤其重要。使用任何随手可得的材料和修补它们是一个简单的方法，以参与这些重要的 “恶意 “技能。而且任何人，在任何地方，都可以做到这一点。\n第三篇\n\n\n\n\n\n\n\n\nCET4 2021-6-1 Part 3 Section C Passage Two\n原文Being an information technology, or IT, worker is not a job I envy. They are the ones who, right in the middle of a critical meeting, are expected to instantly fix the projector that’s no longer working. They have to tolerate the bad tempers of colleagues frustrated at the number of times they’ve had to call the help desk for the same issue. They are also the ones who know there are systems that are more powerful, reliable and faster, but their employer simply will not put up the funds to buy them. \nAccording to a recent survey, employees who have a job reliant on IT support consider IT a major source of job dissatisfaction. Through no fault of their own, they can suddenly find their productivity deteriorating or quality control non-existent. And there’s little they can do about it. \nThe experience of using IT penetrates almost the entire work field. It has become a crucial part of employees’ overall work experience. When IT is operating as it should, employee self-confidence swells. Their job satisfaction, too, can surge when well-functioning machines relieve them of dull tasks or repetitive processes. But if there’s one thing that triggers widespread employee frustration, it’s an IT transformation project gone wrong, where swollen expectations have been popped and a long list of promised efficiencies have been reversed. This occurs when business leaders implement IT initiatives with little consideration of how those changes will impact the end user. \nWhich is why managers should appreciate just how influential the IT user experience is to their employees, and exert substantial effort in ensuring their IT team eliminates programming errors and application crashes. Adequate and timely IT support should also be available to enable users to cope with technological issues at work. More importantly, IT practitioners need to understand what employees experience mentally when they use IT. \nTherefore, businesses need to set up their IT infrastructure so that it is designed to fit in with their employees’ work, rather than adjust their work to fit in with the company’s IT limitations.\n问题What does the author say about working in IT?A) It is envied by many.C) It is financially rewarding.B) It does not appeal to him.D) It does not match his abilities.\nWhat is the finding of a recent survey on employees who have a job reliant on IT support?A) IT helps boost productivity.B) IT helps improve quality control.C) Many employees are deeply frustrated by IT.D) Most employees rely heavily on IT in their work.\nWhat is said to happen when IT is functioning properly?A) There is a big boost in employees’work efficiency.B) Employees become more dependent on machines.C) There are no longer any boring or repetitive tasks.D) Employees become more confident in their work.\nWhat should business leaders do before implementing new IT initiatives?A) Consider the various expectations of their customers.B) Draw up a list of the efficiencies to be promised.C) Assess the swollen cost of training the employees.D) Think about the possible effects on their employees.\nHow can a business help improve its employees’ experience in using IT?A) By designing systems that suit their needs.B) By ensuring that their mental health is sound.C) By adjusting their work to suit the IT system.D) By offering them regular in-service training\n\n关于在IT行业工作，作者说了些什么?A)它被许多人羡慕。C)在经济上是有回报的。B)他不喜欢D)这与他的能力不相符。\n最近一项关于工作依赖IT支持的员工的调查发现了什么?A) IT有助于提高生产力。B) IT有助于提高质量控制。C)许多员工对IT深感沮丧D)大多数员工在工作中严重依赖IT。\n当IT正常运行时会发生什么?A)员工的工作效率大大提高。B)员工变得更加依赖机器。C)不再有任何无聊或重复的任务。D)员工对他们的工作更有信心\n在实施新的IT计划之前，业务领导应该做什么?A)考虑客户的各种期望。B)起草一份承诺的效率清单。C)评估员工培训成本的膨胀。D)考虑对员工可能产生的影响\n企业如何帮助改善员工使用IT的体验?A)通过设计符合他们需求的系统B)确保他们的心理健康。C)调整他们的工作以适应IT系统。D)为他们提供定期的在职培训\n翻译（自）\n\n\n\n\n\n\n\n\nSpend time: 1h23m\n成为一个信息技术或者 IT 的劳动者，我认为这不是一份工作。他们在重要的会议中期待去及时地去修正没有在长期工作的项目者。他们必须忍受组织在数天中的坏脾气，必须在同桌寻求相同问题的帮助。他们也许知道自己是那些更强力、可靠和快速的系统中的一员，但他们的雇佣者推断这将不会提供资金去购买。\n根据最近的调查，职工有一个工作依赖于 IT 的支持，认为 IT 是一个主要的找工作来源。没有通过他们自己的过失，可以找到有效率地质量控制不存在。他们可以做到这一点。\n使用 IT 模式的经验最多整个工作区域。这会成为员工全部的工作经历中重要的一部分。当 IT 正在操作着，员工会自信满满。他们也对工作非常满意，当功能性优秀的机器依赖着无聊的任务或者个人进程。但如果他们的一个东西触发了员工，这是一个 IT 转换项目的错误，预期被打破，一个长长的承诺列表影响被反转。当老板用如何去改变他们的小想法去实现 IT 化，这将最终影响到用户。\n管理者应该欣赏如何影响有 IT 经验的用户成为他们的员工，在他们的IT团队消除代码错误和应用冲突中产生了重大影响。及时的 IT 支持也许应该有效的使用户在工作中用技术问题去cope。更重要的是，IT 从业者需要去搞懂在使用 IT 的时候什么是员工经验。\n最后，商业需要去启动 IT，于是这是设计适合他们员工工作，他们的工作用公司的 IT 限制去适应。\n翻译（查）成为一个信息技术或者 IT 的劳动者，不是我羡慕的一份工作。他们在重要的会议中,希望立马修好不能工作的投影仪，在沮丧的几天里，他们必须忍受同事在数天中的坏脾气，打电话给服务台寻求同样问题的帮助。他们也知道更强力、可靠和快速的系统，但他们的老板不过不会提供资金去购买。\n根据最近的调查，职工依赖 IT 支持去找工作，认为 IT 是工作中不满意的主要来源。并不是他们自己的错，他们可以突然找到他们效率低下和质量控制不存在，他们也对此无能为力。\n使用 IT 的经验几乎渗透所有工作领域。这会成为员工全部的工作经历中是至关重要的一部分。当 IT 正在操作着，员工会自信满满。当功能性优秀的机器接替人去完成无聊的任务或者重复的过程，激发了他们对工作的满意。但如果他们的一个东西让普遍员工感到沮丧，那将是一个 IT 转换项目的错误，预期被打破，一个长长的承诺列表影响被反转。当老板用如何去改变他们的小想法去实现 IT 化，这将最终影响到用户。\n这就是为什么管理者应该理解如何让有影响力的 IT 经验丰富的用户成为他们的员工，然后，花费了大量的努力，去确保他们的IT团队消除代码错误和应用崩溃。合适和及时的 IT 支持应该可以去使用户在工作中去解决技术问题。更重要的是，IT 从业者需要在使用 IT 的时候搞懂，什么是思想上的员工经验。\n所以，商业需要去建立自己 IT 基础设施，所以应该去设计适应员工工作，而不是调整他们的工作去适应公司的 IT 的限制性。\n逐句解析\n\n\n\n\n\n\n\n\nBeing an information technology, or IT, worker is not a job I envy.信息技术工作者并不是我羡慕的职业。\n主句的主语是：Being an information technology, or IT, worker\n系动词是：is not\n表语是：a job\nI envy 是省略了关系词（which/that）的非限定定语从句，修饰a job; 从句中，省略的关系词代替先行词 a job作 宾语\n\n\n\n\n\n\n\n\n\n\nThey are the ones who, right in the middle of a critical meeting, are expected to instantly fix the projector that‘s no longer working.他们就是那些在某项重要会议进行到一半，投影仪坏了时，被期望能立即修好投影仪的人。\n\ninstantly\n立刻\n\n\nprojector\n投影仪\n\n\ncritical\n批判的\n关键的\n重要的\n\n\n\nwho 引导定语从句修饰 the ones，从句中，who 代替先行词 the ones 作主语。\nare expected 一般现在时的被动语态\n「 … the projector thats no longer working. 」，that引导定语从句，修饰先行词 the projector，翻译为 xxx 的投影仪。no longer 不再…\n\n\n\n\n\n\n\n\n\n\nThey have to tolerate the bad tempers of colleagues frustrated at the number of times they’ve had to call the help desk for the same issue.他们必须忍受同事们 因为同一问题 不得不多次打服务台电话 而感到沮丧时 的坏脾气\n\nhave to\n必须\n\n\ntolerate /ˈtɒləreɪt/\n忍受\n\n\ncolleagues /ˈkɑːliːɡz/\n同事\n\n\nfrustrated /frʌˈstreɪtɪd/\nadj.沮丧\n\n\n\n句子核心：They have to tolerate the bad tempers.（他们必须忍受坏脾气）\n\n主句的主语“They”，半助动词“have to”，谓语动词“tolerate”，宾语是 the bad tempers\n介词短语 of colleagues 作后置定语，修饰 the bad tempers。\nfrustrated at the number of time 作后置定语，修饰 colleagues\n省略关系词（that）的定语从句，修饰 the number of times。\nThey 作主语\nhave had to为半助动词，表示“不得不”，时态为现在完成时，与谓语动词 call 共同构成复合谓语\nthe help desk作宾语，意思为“服务台”\n\n\nfor the same issue作原因状语，for 表“因为”，“因为相同问题”\n\n\n\n\n\n\n\n\n\n\n\nThey are also the ones who know there are systems that are more powerful, reliable and faster, but their employer simply will not put up the funds to buy them.他们也知道有更强大、更可靠、更便捷的系统，但他们的雇主根本不会出资去购买这些系统\n\nreliable\n可靠的\n\n\nsimply\n仅仅，只\n简单地\n\n\nput up\n提供\n建造\n\n\n\n\nThey are also the ones（主系表）\nwho know，who 引导定语从句，修饰 the ones\n(that) there are systems，省略 that 的宾语从句，作 know 的宾语；there be句型，可以翻译为「有」，跟上面可翻译为「知道有系统」\nthat are more powerful, reliable and faster，that 引导的定语从句，修饰 systems；跟上面可翻译为：「知道有更强大、更可靠、更便捷的系统」\n\n\n\n\n\n\nbut their employer simply will not put up the funds to buy them. 用 but 连接的并列句，表转折。\n\n\n\n\n\n\n\n\n\n\n\nAccording to a recent survey, employees who have a job reliant on IT support consider IT a major source of job dissatisfaction.根据最近的一项调查，那些工作上依赖信息技术支持的员工认为信息技术是导致缺乏工作满足感的主要原因。\n\nreliant\nadj.依赖的\n\n\ndissatisfaction\nn.不满\n\n\n\n句子核心：employees consider IT a major source\n\nAccording to a recent survey，作插入语，“根据最近的一项调查”\nemployees 主语\nwho have a job who 引导的定语从句，修饰 employees\nraliant on IT support 作后置定语，修饰 a job；跟上面可翻译为：「工作上依赖信息技术支持的员工」\n\n\n\n\nconsider IT a major source\nof job dissatisfaction 后置定语，修饰a major source，跟上面可翻译为：「工作不满的主要来源」\n\n\n\n\n\n\n\n\n\n\n\n\n\nThrough no fault of their own, they can suddenly find their productivity deteriorating or quality control non-existent.在自己没有犯错的情况下，他们会突然发现自己的生产效率在下降，或者无法控制工作质量\n\ndeteriorate /dɪˈtɪriəreɪt/\n价值（或质量）下降\n恶化\n\n\n\n\nproductivity deteriorating，译为“生产力下降”，deteriorate为非谓语动词动名词形式，表主动。\nquality control non-existent，不存在质量控制，即“无法控制工作质量”\n\n\n\n\n\n\n\n\n\n\n\nAnd there’s little they can do about it.而且他们对此几乎无能为力\n\ncan do about it\n\n无能为力\n\n\nAnd there’s little，And表“而且”，主句是一个 There be 句型，由“there + be(is) + 主语（little）”构成。\n\n(that) they can do about it. 省略关系词的定语从句，修饰 little\n\n\n\n\n\n\n\n\n\n\n\n\nThe experience of using IT penetrates almost the entire work field.使用信息技术的经历几乎渗透到了整个工作领域\n\npenetrate /ˈpenətreɪt/\n\nv.渗透, 深入\n\n\n主语\n\nThe experience of using IT\n\n\n谓语\n\npenetrates\n\n\n宾语\n\nalmost the entire work field\n\n\n\n\n\n\n\n\n\n\n\n\n\nIt has become a crucial part of employees’ overall work experience.它已经成为员工全部工作经历中的一个重要组成部分\n\ncrucial /ˈkruːʃ(ə)l/\n\nadj.重要的\n\n\nof employees’ overall work experience 介词短语，作后置定语，修饰a crucial part，译为：「员工全部工作经历的…」\n\n\n\n\n\n\n\n\n\n\n\n\nWhen IT is operating as it should, employee self-confidence swells.当信息技术正常运行时，员工的自信心就会增加\n\nswell\nv.增加；膨胀；充满\nn.膨胀\n\n\n\n句子核心：Employee self-confidence swells.\n\nWhen IT is operating when 引导时间状语从句\nas it should as 引导的方式状语从句，作时间状语从句的方式状语。省略句，完整意思为「as it should operate」，IT按照应该运行的方式去运行，即「IT正常运行」\n\n\nemployee self-confidence swells. 主句\n\n\n\n\n\n\n\n\n\n\n\nTheir job satisfaction, too, can surge when well-functioning machines relieve them of dull tasks or repetitive processes.当运行良好的机器将他们从无聊的工作或重复性的工作过程中解脱出来时，他们的工作满足感也会激增\n\nsurge\n\nv.激增\n\n\nfunctioning\n\nn.运行\n\n\nrelieve\n\nv.减缓；接替\n\n\nTheir job satisfaction 作主语\n\ntoo 插入语，删掉插入语不会影响整体句子的意思\n\ncan surge 作谓语\n\nwhen well-functioning machines relieve them 时间状语从句\n\nof dull tasks or repetitive processes 介词短语，作状语\n\n\n\n\n\n\n\n\n\n\n\n\n\nBut if there’s one thing that triggers widespread employee frustration, it’s an IT transformation project gone wrong, where swollen expectations have been popped and a long list of promised efficiencies have been reversed.但如果说有一件事会引发员工普遍的挫败感，那就是信息技术转型计划出了问题，不断增加的期望打破了，一长串有望实现的功效也遭到逆转。\n\ntrigger\nv.引发；触发\n\n\ntransformation\nn.转变\n\n\na long list of\n一长串的…\n\n\n\n\nIf there’s one thing if 引导条件状语从句\nthat triggers widespread employee frustration that引导定语从句，修饰 one thing，译为「引发普遍员工的挫败感的一件事」\n\n\nit’s an IT transformation project\ngone wrong 过去分词短语作后置定语，修饰 an IT transformation project\nwhere swollen expectations have been popped where 引导非限定定语从句，补充说明 an IT transformation project\nand a long list of promised efficiencies have been reversed and连接并列句；「a long list of…」表同位关系；have been reversed 为现在完成时的被动形式，译为：「被逆转」=&gt;「遭到逆转」\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis occurs when business leaders implement IT initiatives with little consideration of how those changes will impact the end user.企业领导在实施信息技术计划时很少考虑这些变化将如何影响终端使用者，因此就会发生上述情况。\n\nend user\n终端用户\n\n\nimplement\nv.实施\n\n\ninitiative\nn.措施；新方案；主动性\n\n\n\n\nThis occurs This 为主语，occurs 为谓语\nwhen business leader implement IT initiatives when 引导时间状语从句，作主句的时间状语\nwith little consideration \nof how those changes will impact the end user 介词短语作后置定语，其中 how 引导宾语从句作介词 of 的宾语。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhich is why managers should appreciate just how influential the IT user experience is to their employees, and exert substantial effort in ensuring their IT team eliminates programming errors and application crashes.这就是为什么老板应该认识到信息技术的使用者体验对他们的员工影响有多大，并应竭力确保他们的信息技术团队能消除编程错误和应用程序崩溃的问题\n\nappreciate\nv.明白；欣赏\n\n\ninfluential\nexert\nv.尽力；努力\n\n\neliminate\nv.消除\n\n\napplication crash\n应用程序崩溃\n\n\n\n\nWhich is which 是主语（指代前文内容），is 是系动词\nwhy managers should appreciate just why引导表语从句\nhow influential the IT user experience is to their employees how 引导的宾语从句；the IT user experience作主语，is 作系动词，influential 作表语，介词短语 to their eomployees作状语，表对象;译为「信息技术的使用者对他们的员工影响有多大」\n\n\nand exert substantial effort and 连接并列句\nin ensuring 介词短语作状语\n(that) their IT team eliminates programming errors and application crashes 省略 that 的宾语从句，作 ensuring 的宾语\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdequate and timely IT support should also be available to enable users to cope with technological issues at work.此外，还应该及时提供足够的信息技术支持，以确保使用者能够应对工作中的工作问题。\n\nadequate\nadj.足够的\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore importantly, IT practitioners need to understand what employees experience mentally when they use IT.更重要的是，信息技术从业者需要了解员工在使用信息技术时的心理体验。\n\nmentally\n精神上的\n\n\n\n\n\n\n\n\n\n\n\n\n\nTherefore, businesses need to set up their IT infrastructure so that it is designed to fit in with their employees’ work, rather than adjust their work to fit in with the company’s IT limitations.因此，企业需要建立自己的信息技术基础设施，以便其能适应员工的工作，而不是让员工调整他们的工作来适应公司的信息技术的局限性。\n\ninfrastructure\nn.基础设施\n\n\ntherefore\nadv.所以；因此\n\n\nlimitations\nn.局限性；因素；边界\n\n\nset up\n建设\n\n\n\n\nTherefore 插入语\nbusinesses need to set up their IT infrastructure \nso that it is designed to fit in with their employees’ work so that引导目的状语从句，表”以便“\n\n\nrather than adjust their work to fit in with the company’s IT limitations rather than 连接并列成分，表”而不是“\n\n翻译（DeepL）作为一名信息技术（或称IT）工作者，我并不羡慕这种工作。他们是那些在关键会议中，被期望立即修复不再工作的投影机的人。他们必须容忍同事的坏脾气，因为他们不得不为同一个问题给服务台打电话的次数太多，而感到沮丧。他们也是那些知道有更强大、更可靠和更快的系统的人，但他们的雇主根本不会拿出资金来购买它们。\n根据最近的一项调查，有一份依赖IT支持的工作的员工认为IT是工作不满意的主要来源。不是他们自己的错，他们会突然发现自己的生产力下降或质量控制不存在。而他们对此却无能为力。\n使用信息技术的经验几乎渗透到了整个工作领域。它已经成为员工整体工作经验的一个关键部分。当IT在正常运行时，员工的自信心会膨胀。当运作良好的机器将他们从枯燥的任务或重复的过程中解脱出来时，他们的工作满意度也会激增。但是，如果有一件事会引发员工普遍的挫败感，那就是IT转型项目出了问题，膨胀的期望被打破，一长串承诺的效率被推翻。当企业领导在实施IT计划时，很少考虑到这些变化将如何影响终端用户，就会出现这种情况。\n这就是为什么经理们应该了解IT用户体验对他们的员工有多大的影响，并花大力气确保他们的IT团队消除编程错误和应用程序崩溃。还应提供足够和及时的IT支持，使用户能够应对工作中的技术问题。更重要的是，IT从业者需要了解员工在使用IT时的心理体验。\n因此，企业需要设置他们的IT基础设施，使其旨在适应员工的工作，而不是调整他们的工作以适应公司的IT限制。\n翻译（网易）从事信息技术(IT)工作不是我羡慕的工作。他们是那些在重要会议进行到一半时，被要求立即修理坏了的投影仪的人。他们必须容忍同事的坏脾气，因为他们不得不多次为同样的问题打电话给服务台而感到沮丧。他们也知道有更强大、更可靠、更快的系统，但他们的雇主根本不会出钱购买。\n根据最近的一项调查，那些工作依赖于IT支持的员工认为IT是工作不满的主要来源。虽然不是他们自己的过错，但他们可能突然发现自己的生产率在下降或质量控制不存在。他们对此也无能为力。\n使用IT的经验几乎渗透到整个工作领域。它已经成为员工整体工作经验的重要组成部分。当IT正常运作时，员工的自信心就会增强。当运转良好的机器将他们从枯燥的工作或重复的过程中解放出来时，他们的工作满意度也会飙升。但如果有一件事引发了员工的普遍不满，那就是it转型项目出了问题，过高的期望破灭了，一长串承诺的效率被逆转了。当业务领导在实施IT计划时很少考虑这些变化将如何影响最终用户时，就会发生这种情况。\n这就是为什么经理们应该认识到IT用户体验对他们的员工有多么大的影响，并付出大量的努力来确保他们的IT团队消除编程错误和应用程序崩溃。此外，亦应提供足够及及时的资讯科技支援，让使用者在工作中能够处理科技问题。更重要的是，IT从业者需要了解员工在使用IT时的心理体验。\n因此，企业需要建立自己的IT基础设施，使其设计适合员工的工作，而不是调整他们的工作以适应公司的IT限制。\n","slug":"english/reading_training","date":"2022-11-17T08:46:23.000Z","categories_index":"英语","tags_index":"英语","author_index":"Joshlee"},{"id":"44e789181d3b4bef6dfcd4ebb07b6454","title":"Using Clash in Linux Server","content":"\n\n\n\n\n\n\n\n\nBackground: Too slow to install some dependent environments\nDownloadWe can go to the Clash Releases Page and find the corresponding system download address.The following demonstration with CentOS Linux 7 for x86.\nDownload using wget:\n\n\n\n\n\n\n\n\n\nIf direct wget is slow, you can use SFTP to upload to a Linux server after local download.\nbashwget https://github.com/Dreamacro/clash/releases/download/v1.11.4/clash-linux-386-v1.11.4.gz\n\nDecompression file Using gunzip and rename it to clash:\nbashgunzip clash-linux-386-v1.11.4.gz\nmv clash-linux-386-v1.11.4.gz clash\n\nAdd exceutable permissions to Clash:\nbashchmod +x clash\n\nConfigurationPut the clash configuration (config.yml, Country.mmdb) of your computer into the clash directory of Linux Server.\nYou can also download Country.mmdb manually by visiting this link.\nLaunchRunning Clash in the background:\nplaintextnohup .&#x2F;clash &amp;\n\nSystem ProxySetting system proxy in the shell:\nplaintextexport {http,https}_proxy&#x3D;127.0.0.1:7890\n\nVerifyVerify Proxy:\nplaintextcurl ip.gs\n\nVisit to Google:\nplaintextcurl google.com","slug":"system/Using Clash in Linux Server","date":"2022-08-07T01:34:49.000Z","categories_index":"操作系统","tags_index":"linux","author_index":"Joshlee"},{"id":"31cb8022faa8493f1aedc9b9cc8dea4f","title":"阿里云 ACP 云原生微服务","content":"\n\n考点总结\n","slug":"examination/AliyunACP","date":"2022-07-27T00:59:03.000Z","categories_index":"应试","tags_index":"考证","author_index":"Joshlee"},{"id":"5e7254d63639ed21d8e1e8e2812eb98c","title":"一些好用但鲜为人知的 Linux 命令","content":"系统监视UptimeUptime会返回服务器运行时长、当前时间、用户数量和内存使用平均数等信息。\nbash$ uptime\n\nWallWall可以向当前登录到系统的每个人的终端发送消息\nbash$ wall &quot;Your message&quot;\n\nTop实时显示 CPU 和内存使用情况的进程列表。\nbash$ top\n\nlsoflsof是一个单一的命令，用于一个基本的目的：List Open Files。这在遇到说文件被使用的挂载问题时特别有用。这个命令可以快速识别哪些文件被哪些进程使用。\nbash$ lsof\n\n网络NetcatNetcat、nc主要用于端口扫描，但实际上是一个伟大的实用网络工具，可供系统管理员在他们的后袋中用于任何任务。Netcat可以支持端口扫描、文件复制、端口转发、代理服务器和托管服务器……可以说，它的功能非常全面。\nbash# Example Usage:\n$ nc -vz &lt;host&gt; &lt;port&gt; # 检查给定端口上两个主机之间的连接\n$ nc -l 8080 | nc &lt;host&gt; 80 # 创建一个代理服务器\n\nNetstatNetstat返回各种网络的详细信息，如路由表（routing tables）、网络连接（network connections）、成员资格（memberships）、统计信息（stats）、标志（flags）等。\nbash# Example Usage \n$ netstat -a # 查看所有网络端口\n$ netstat -tlpn # 查看所有监听中的端口\n\n# Key Flags\n-s = display networking statistics\n-v = be verbose\n-r = show routing tables\n-i = display interface table\n-g = show group memeberships\n\nNslookup用于获取网络或本地的服务器信息。它查询DNS以找到服务器信息，这对网络调试很有用。\nbash# Example Usage\n$ nslookup bilibili.com\nServer:        183.60.83.19\nAddress:    183.60.83.19#53\nNon-authoritative answer:\nName:    bilibili.com\nAddress: 47.103.24.173\nName:    bilibili.com\nAddress: 139.159.241.37\nName:    bilibili.com\nAddress: 120.92.78.97\nName:    bilibili.com\nAddress: 119.3.70.188\nName:    bilibili.com\nAddress: 8.134.50.24\n# Key Flags\n-port = Change port number for connection\n-type = Change type of query. \n-domain = Sets search list to name\n\nTCPDump用于捕获和分析进出你的系统的流量。它是一个强大的多功能工具，专门用于调试和排除网络问题，但也可以作为一个安全工具使用。\nbash# Example Usage\n$ tcpdump\n$ tcpdump -i &lt;interface&gt; &lt;ipaddress or hostname&gt; &lt;port&gt;\n\n其他rsync用于将文件和目录复制到目的地，类似于cp命令。但是，它也允许复制到远程位置，并且可以提供进度条，这通常用于备份\nbash# Example Usage\n$ rsync -vap --ignore-existing &lt;source_file&gt; &lt;destination_file&gt;\n\n#  Key flags:\nv = verbrose\nr = recursive\np = preserve permissions\ng = group\no = owner\na = archive\n--progress = progresss bar\n\nscreen如果你需要在远程运行一个长时间的任务（如系统备份、ftp 传输等等），用 screen 就不用担心 SSH 会话中断而导致的任务中断了，Screen 会在断开连接的情况下继续运行你的命令！\nbash# Example Usage\n$ screen # 启动一个 screen 会话\n$ screen -ls # 显示正在运行中的服务\n$ screen -r # 连接会话\n\ndatebash# 将Unix timestamp转换为人类可读的日期形式\n$ date --date @1657252922\nFri Jul  8 12:02:02 CST 2022\n\n# 获取当前的时间戳\n$ date &quot;+%s&quot;\n1657252922\n\nsystemdbash# 列出所有Systemd服务\n$ systemctl -l -t service | less\n","slug":"system/Some important Linux commands","date":"2022-07-08T03:15:20.000Z","categories_index":"操作系统","tags_index":"linux","author_index":"Joshlee"},{"id":"c86bf2873749be4c9a292e4ee1b5c907","title":"Spring Security Note（TODO）","content":"\n\n简介Spring Security 是 Spring 家族中的一个安全管理框架。\n一般 Web 应用需要进行认证和授权\n认证：验证当前访问系统的是不是本系统的用户，并且要确认具体是哪个用户\n授权：经过认证后判断当前用户是否有权限进行某个操作\nQuick start认证（Authentication）登录校验流程解决问题思路分析登录\n自定义登录接口\n调用 ProviderManager 的方法进行认证，如果认证通过生成 JWT\n把用户信息存入 Redis 中\n\n\n自定义 UserDetailsService\n在这个类中实现列中去查询数据库\n\n\n\n校验定义 JWT 认证过滤器\n\n获取 Token\n解析 Token 获取其中的 userId\n从 Redis 中获取用户信息\n存入 SecurityContextHolder\n\n","slug":"backend/spring_security_note","date":"2022-06-05T07:34:41.000Z","categories_index":"后端","tags_index":"后端","author_index":"Joshlee"},{"id":"635215656b0faa819fe0d4b468a19e3e","title":"转-HumanSystemOptimization","content":"\n\n\n\n\n\n\n\n\n原文: https://github.com/zijie0/HumanSystemOptimization\n背景去年 5 月曾经写了一篇文章介绍了下 Lex Fridman 大佬的日常生活安排，后续我也根据他的方法对自己的日常生活做了一系列规范和改进。这一年整体实行下来，效果还是非常显著的，本文的最后会对我的一些实践以及借助的工具做一些分享。\n最近几个月，偶然在油管上看到了个 Rich Roll 采访 Andrew Huberman 的 podcast，介绍了如何提升我们日常工作，学习表现的相关神经科学原理与可以利用的“工具”，瞬间打开了一扇新世界的大门。后续又一连追了好几集 Huberman 自己的 podcast，从各个方面了解了一下跟我们日常生活，健康，学习，工作，锻炼等方面相关的知识。与其它很多讲“养生”的文章和视频最大的区别在于，Huberman 本身是斯坦福的神经科学教授，其中讲述的内容都是来自于高质量，peer reviewed 的科学研究成果，从机体工作原理出发，非常细致地介绍了相关的实验和结论，并给出了很多实操建议（很多都是零成本，不是搞推销的……）。\n通过一系列的学习，逐渐有种学习了各种人类的“组成和操作原理”的感觉。通过一系列的工具和实践，我们也可以像调优软件程序那样来“调优”我们自身的人体系统。这篇文章就来介绍一些相关的知识内容。注意，原版的 podcast 中有非常多专业性的阐述，在这篇文章中基本都去掉了，尽量以故事性的描述来讲解，相对会比较好理解。当然准确性也会因此有所下降，如果希望获取更专业的内容，强烈建议观看 原版的 podcast 内容。\n睡眠如果你想要获得健康，更好的工作学习状态，提升生理健康如免疫，新陈代谢，以及心理健康如更好的心情，专注能力等，最最重要的前提是拥有一个良好的睡眠。\n原理睡眠最重要的控制机理是我们内在的生物钟。随着生物钟的影响，我们体内的各类化学物质会发生变化，体温也随之改变，会影响我们的各种内在状态和外在行为。Huberman 教授很形象地描述了这个“生物钟”的具体作用方式：在早上，身体释放的皮质醇（cortisol）和肾上腺素（aderenaline）会让我们醒来，同时还会设定松果体释放褪黑素的倒计时钟，会在十多个小时之后让我们感到困意再次入睡。\n影响这个生物钟的最大因素是光照。我们的眼睛除了能够看到东西，另外一个重大的作用就是通过黑视素神经节细胞来接收光照信息，用以设定我们的内在生物钟。这也是为什么有时候我们通宵工作之后，虽然已经持续很久时间没有睡眠了，但随着太阳升起，整体的生物钟被设定到了类似起床时的状态，各类化学物质的释放会让我们突然感觉又有精神了。后续很多最佳实践里也都跟这个原理相关，我们需要控制自己接收光照的时间点，类型和时长。\n此外，体温也是一个用于控制我们生物钟的手段。一般来说我们的体温会从深睡眠中比较低的状态逐渐升高，到醒来后持续上升。到了一天的后半段会开始逐渐下降，直到再次进入睡眠。\n实践基于上面的原理，Huberman 教授提供了一系列提升睡眠的最佳实践：\n\n皮质醇的释放与接触阳光有关，因此如果想尽快醒来且保持日间良好的精神状态，起床后应该到外面去接触阳光，持续 2-10 分钟。这对于血压控制，心理状态，设定睡眠的“倒计时钟”等都有很大好处。户外日光的效果最好，如果是人造光源，蓝光的效果会比较好，且最好是上部（天空的位置）的光源。根据光照强度推算，隔着窗户接收日光的强度会降低 50%以上，而达到同样效果所需要的光照时间则需要 50 到 100 倍。有意思的是，这一点对于视障人士也有效，因为前面提到的黑视素神经节细胞并不是用于视觉成像的细胞。\n对应的，在晚上要尽量减少光源的接触，因为这会扰乱我们的生物钟，让身体系统误以为是在白天。尤其是晚上 11 点到次日凌晨 4 点之间接收光源，会抑制后续几天的多巴胺的释放，影响心情，心理健康，专注度，学习能力，新陈代谢等等。关于多巴胺的作用和机理，后面会再单独介绍。\n如果不可避免需要在晚上接触光源，处于较低位置，暗淡的红光，蜡烛之类的会相对好一些。如果要看电脑，建议使用 blue blockers 眼镜，这跟一些电脑软件会自动调节屏幕色温的效果可能类似。\n傍晚观察落日，对于后续入睡也有帮助，甚至能减轻晚上摄入光照的负面影响，有点神奇。\n人一天中的精神状态一般会在中间有个短暂的低谷，所以午睡对于有些人可能是有帮助的。也可以用一些其它的非睡眠深度休息的方式来替代，如 Yoga Nidra，冥想，自我催眠（可以利用一些 App，如 Reveri）等。\n体温对生物钟周期的影响：\n早上洗冷水澡，会让人快速升温，从而把睡眠周期往前移（早起）。\n晚上锻炼身体，会让人保持高体温，从而延后周期（晚睡）。\n可以选购一些自动控制体温的智能床垫来提升睡眠质量。\n\n\n一般建议的锻炼时间：醒来后 30 分钟，3 小时和 11 小时这三个时间点。不过总体来看好像影响度比较小。\n饮食和药物因素：\n咖啡因会占据腺苷（adenosine）的受体，阻断入睡的信号。有不少文章都提到中午之后尽量不要喝咖啡，但 Huberman 表示没有科学实验表明咖啡因对所有人的效果是一样的，得根据自己的测试情况来。比如他自己在下午 5 点喝咖啡也能正常入睡。\n镁，对入睡有帮助。\n芹黄素也能帮助入睡，但要注意对雌性激素的影响。\n建议不要摄入太多牛磺酸。\n不建议通过摄入褪黑素来帮助入睡，褪黑素药物本身的规格把控不严格，且褪黑素容易引起抑郁情绪。\n中午可以吃低卡路里以及含酪氨酸的食物，如坚果，大豆，部分蔬菜等，提升多巴胺，肾上腺素，保持清醒。\n晚上则可以吃点淀粉，白肉等富含色氨酸的食物，进而转化为血清素，会让人更加平静，容易入睡。\n\n\n对于绝大多数人，6-8 小时的睡眠时长是比较健康的。\n对于各类药物的检索可以参考：examine.com。\n\n饮食在前面 Lex 的分享中，提到了他采取了生酮饮食以及 fasting（禁食）的习惯，这引起了我对于饮食习惯的注意。Huberman 教授正好也有几个 podcast 介绍了 fasting，肠道健康等话题，很有意思。\nFasting 的背景我们可以把身体跟进食相关的化学状态分成 2 类：\n\n吃饱了的状态，也就是血糖含量较高的状态。此时我们身体会更活跃地进行体内细胞的复制与成长。\n禁食的状态，也就是血糖含量较低的状态。此时我们的身体会更活跃地进行体内细胞的修复与清理（autophagic）。\n\n由于睡眠时我们天然是不吃东西的，所以一般来说睡眠中的一部分时间会使我们处于禁食状态，饮食时间的选择实际上就是在控制上述两个状态的持续时间和平衡关系。比较有意思的是世界上很多民族文化和宗教中，都有一些跟禁食相关的习俗，甚至会持续很多天。\n在 2012 年，科学家开始对小白鼠做实验，把他们分成两大组，一组可以在一天中的任何时间吃东西，而另一组只能在固定的 8 小时里吃东西。在大组里再区分小组，给小白鼠吃健康的和不健康的食物。结果发现，只能在 8 小时里吃东西的小白鼠们，即使吃的是不健康的高脂肪食物，他们的健康水平仍然得到了保持甚至提高，相比所有不做限制的组都有明显的提升。\n这个研究震动了学术界，后续又有非常多的针对人类，不同性别，不同年龄，不同职业（包括运动员）的各种实验与论文发表，科学家们发现这种间歇性禁食状态对于身体有非常多的好处，包括：促进肝脏健康，胆汁酸代谢，炎症自愈，保持体重，提升 brown fat 储备（对健康有益），防止非酒精性脂肪肝，血糖控制，肠道健康等等。如果养成间歇性禁食的习惯 60 天以上，还会让我们的身体倾向于代谢脂肪来供能，控制体重。\n因此，Huberman 教授指出，何时进食，与吃什么东西，其实是同等重要的。这个研究也让很多学术界的研究人员自己也都养成了 fasting 的习惯，包括 Huberman 自己。\nFasting 的实践由于长时间的禁食难度较大，所以绝大多数的研究都专注于间歇性禁食，也就是 time restricted feeding。简单来说就是跟前面的小白鼠实验一样，在一天的固定时间段来吃东西（跟睡眠周期对齐），而其它时间段都不摄入任何食物的做法。这里简单整理为基础和高阶两个版本：\n\n基础：如果想享受 fasting 的基础收益，最简单的执行原则是起床后至少 1 小时内不要吃东西，同时睡前的 2-3 小时不要吃任何东西。\n高阶：目前研究结果中最理想的进食窗口是 8 小时，结合社会习俗等，一般比较合理的时间在 10-18 点或 12-20 点的范围。看起来不吃早饭并不是什么坏事 :)\n作者特地温馨提醒，如果想通过健身来增肌，建议可以把这个时间窗口往前移，因为早上摄入蛋白质会对肌肉增长有益。而健身的时间可以自由选择。\n尽量保证这个窗口时间的稳定性，也非常重要。否则就跟频繁倒时差产生的效果差不多，会打不少收益折扣。\n如果想尝试高阶 fasting，建议逐渐切换进食习惯，例如每两天缩短 1 小时的进食窗口，逐渐达到理想的 8 小时。\n\n值得注意的是，这里说的不吃任何东西，并不是说连水也不能喝。从前面的背景可以看到，是否处于禁食状态，主要依据是血糖水平，因此：\n\n喝水，茶，咖啡（不加牛奶）等，并不会中断禁食。但一勺糖的摄入就会中断。\n晚饭后想尽快进入禁食状态，可以做一些轻量运动，比如散步等，加快血糖清理。\n二甲双胍，黄连素（berberine）等可以直接促进血糖清理。肉桂皮，柠檬汁，也能轻微降低血糖。\n\n最后，如果禁食期间觉得有些头晕，颤抖，并不需要立刻进食或摄入糖分。可以喝一点盐水（可以加柠檬汁），一般就能很好的缓解症状。这让我想起 Lex 会提到了会服用药片来补充各种电解质元素，比如钠，镁，钾等。\n饮食与消化道健康由于我个人的肠胃功能比较差，所以也特别关注了一下消化道健康的话题。Huberman 邀请了一位非常知名的微生物学家 Sonnenburg 来介绍肠胃微生物群落与我们的健康之间的关系，也是学到了很多新的知识：\n\n肠道的微生物群不仅影响消化系统的健康运作，对人体的免疫系统也起到了非常关键的因素。\n婴儿出生，成长的方式会形成非常不同的肠道菌群生态。暴露在微生物环境中（但要注意会引起疾病的情况），对于维持菌群环境是有益的，比如家里养宠物，让孩子自由玩耍等，不需要过度清洁与消毒。\n什么是健康的肠道菌群生态，目前没有一个标准的结论。不过总体来看，菌群的多样性程度高，一般就表示更加健康。\n抗生素会严重破坏肠道菌群生态，需要谨慎使用。\n\n在访谈中，两位重点讨论了一个实验，就是什么样的饮食方式会让我们更好的维持肠道菌群的多样性和健康。实验主要对比了两种附加饮食：\n\n高纤维食物：全谷类，豆类，蔬菜，坚果。这也是传统上被认为非常健康的食物，其中很多纤维的分解都需要肠道菌群的帮助，换句话说，纤维就是它们的“食物”。\n发酵类食物：酸奶，牛奶酒（kefir），康普茶，酸菜，泡菜，纳豆等。注意需要是自然发酵，一般是冷藏且非罐装的食品。而且像酸奶这类要格外注意不要加糖等添加剂。\n\n实验的结果也颇令人意外：\n\n摄入发酵类食品的组，显著提升了肠道菌群的多样性。被试者几十个免疫标志物的显著降低，对各类炎症都有更好的抑制作用。没想到吧，肠道菌群还能调节炎症。\n肠道菌群本来的多样化程度比较高的人，摄入高纤维食物是有帮助的。如果不是，则摄入高纤维食物的帮助不大。在工业化进程中，人类的进食习惯已经有很多代都转变为了摄入大量肉类，加工食品等，肠道菌群的生态无法仅通过提高纤维食物的量来改变其族群结构。\n\n此外在访谈中，两位还讨论了具体食谱推荐的问题，引用了 Christopher Gardner 关于生酮饮食与地中海饮食比较的研究。这里总结一下实践建议：\n\n如果要改善肠道菌群生态，最好的方式是一天两次摄入天然发酵类食品。\n高纤维食物对于肠道菌群生态的维护是有益的，建议日常饮食以植物类食物为主，尽量避免深度加工食品的摄入，控制糖的摄入。Sonnenburg 教授还讲了个故事，说微生物学家参加的会议，一般餐厅的沙拉吧总是会供不应求 :) 前面提到的 Rich Roll 大佬也是个素食者。\n益生菌的效果没有广泛研究支持，且这类产品的监管很有限。益生元的效果也是好坏参半，缺乏多样性，溶解速度太快等问题都使总体效果存疑。\n地中海饮食相比生酮饮食来说对健康的影响效果接近，但更容易坚持遵循。另外生酮饮食如果长期实践可能有一定的风险。所以总体更推荐地中海饮食结构。\n\n另外值得参考的是我们也有官方的 中国居民膳食指南，或许更适合东方人的饮食习惯。\n心态与动力这一部分主要介绍的是人体的多巴胺系统原理，以及如何利用它来形成健康，自律的生活方式。这一集是 Huberman 开播以来播放量最高的一集，对于强健我们的心智有着非常好的指导作用。\n原理多巴胺是一种非常重要的化学物质，主要作用于两个神经回路：一个影响身体的运动，例如帕金森病与多巴胺的分泌不足有关；另一个则影响我们的动机，欲望与快乐，这几乎与我们从事的各种活动有关，无论是工作，学习还是社交，休闲娱乐。这里我们会主要讨论多巴胺的后者影响能力。我们为什么会“放弃”，实际上是由于在不安，压力，沮丧等情绪作用下，身体内的去甲肾上腺素水平不断提升，当超过一定阈值时，神经系统中的认知控制就会关闭，我们就放弃了。多巴胺能够抑制去甲肾上腺素作用，从而持续“激励”我们前行。\n神经系统中多巴胺含量水平的高低会影响我们的情绪，当多巴胺水平低时，我们会感到情绪低落，没有动力，而多巴胺水平高时，我们会感到兴奋和快乐。在通常情况下，我们的身体处于多巴胺 baseline 的状态，当我们达成一些令人兴奋的目标（比如玩游戏胜利，考试拿高分）后，多巴胺的水平会达到一个高峰，此时我们就会获得巨大的愉悦感。在高峰之后，多巴胺水平会回落到比 baseline 更低的一个水平，且这个状态会持续一段时间。\n这里有两个非常重要的原理：\n\n多巴胺绝对值含量的高低只是一方面，更重要的是其“相对变化量”的多少。比如在刷抖音时看到了一个很有趣的视频，多巴胺水平升高，你会感到快乐，刷到下一个视频时，你感到的快乐程度好像不会那么强烈了，因为多巴胺已经在一个比较高的水平，难以形成更大的变化量。而同样的视频，如果你是几天之后看到，或许你会觉得有意思的多。所以当你持续做一件喜欢的事情时，你感受到快乐的阈值也会不断提高。\n多巴胺的总体“储备”是有限的！也就是说无论你是通过学习，工作，娱乐，社交，运动等不同方式来获得快乐，所消耗的“快乐货币”都是同一种：多巴胺。举几个例子来看下这个原理带来的影响：\n很多自律的人都会说自己是 work hard，play hard 的生活方式，比如工作日通过高强度的工作来获得成就和满足感，休息日进行各种休闲娱乐，运动，社交等方式来获得快乐，其实背后都是在释放多巴胺来获取快乐。长期持续，我们身体的多巴胺 baseline 会逐渐下降，出现一种耗尽（burn out）的心理感觉，对很多事物无法保持之前的兴趣与精力。\n很多人会对玩电子游戏着迷，因为它们能带来巨大的多巴胺释放刺激让人感到快乐。但要意识到，多巴胺的储备是有限的，如果对此上瘾，你的多巴胺耗尽问题就会变得非常严重：一方面能够引起你兴趣的事物会变少，可能只有玩游戏才能带来快乐；另一方面，后续甚至会导致玩游戏本身也无法触发多巴胺释放，引起严重的抑郁问题。\n\n\n\n另外，多巴胺也具有叠加效应。比如你喜欢健身，那么运动就会刺激多巴胺的释放。而我们实际去健身时，可能会不自觉地安排了很多其它的“快乐因素”，比如选一个精神状态比较好的日子，运动前喝一些能量饮料，跟认识的朋友一起去，边健身边 social，听一些自己喜欢的音乐或 podcast，等等。这些因素也都会促进多巴胺的释放，让你感到“前所未有的快乐”。但要注意前面的原理，多巴胺的高峰越高，后面随之而来持续的低谷也会越长，而且长此以往，可能会降低你单纯从运动中获取快乐的能力。这样的例子还有很多，比如边跟朋友吃饭，边玩手机，拍照发朋友圈，可以计算一下叠加了几种快乐因素 :)\n影响多巴胺的外界因素我们来看下具体影响多巴胺释放的各类因素有哪些，首先是促进多巴胺分泌的：\n\n巧克力，提升到 1.5 倍的多巴胺 baseline\n性行为，提升到 2 倍\n尼古丁，提升到 2.5 倍\n可卡因，提升到 2.5 倍\n安非他命，提升到 10 倍\n咖啡因本身只会少量提升多巴胺，但它会抑制一些多巴胺受体，提升同等多巴胺造成感受的效果\n马黛茶，包含咖啡因，能控制血糖，还能保护多巴胺神经元\n刺蒺藜豆也能提升多巴胺（基本等同于 L-DOPA），还能提升男性精子数量和质量\n运动，带有主观成分，喜欢跑步的人，可以提升到 2 倍 baseline\n健康的社交关系也会促进多巴胺释放\n\n食物方面感觉 Huberman 教授非常推荐马黛茶。\n也有很多提升多巴胺释放或影响其效果的药物：\n\nL-Tyrosine（酪氨酸），提升多巴胺\nPhenethylamine（PEA），巧克力中也包含，能够提升多巴胺\nHuperzine A，提升多巴胺\n各种“聪明药”，如 Adderall, Modafinil, Alpha-GPC, Ginkgo 等，留学党应该很多都有耳闻\n\n通常来说，不推荐持续使用这些药物，因为多巴胺释放之后的高峰会带来 baseline 水平的降低，导致无法享受活动的快乐，无法专注，限制学习能力和神经元可塑性等。Huberman 表示一周使用一次的频率应该是安全的。\n最后还有一个比较特别的研究，就是冷水浴能够提升多巴胺释放到 baseline 的 2.5 倍左右，且持续时间更长，能达到 3 小时左右。建议使用 10-14 摄氏度的水温，注意安全。此外冷水浴也不需要太频繁，每周 11 分钟左右足够。如果已经习惯了冷水浴，那么也就没有释放多巴胺的效果了。\n还有一些因素会降低多巴胺，如：\n\n褪黑素，会引起多巴胺的减少。前面也提到过并不建议使用褪黑素来帮助入睡，或者适应时差等。\n睡眠时段接触光源，也会引起接下来几天的多巴胺水平下降。半夜睡不着刷手机是很有害的哦。\n\n维持健康的多巴胺水平了解了原理和各种影响因素后，我们来看下如何有效设计我们的生活工作方式来维持健康，可持续的多巴胺水平。\n简单回顾一下，前面我们已经知道了多巴胺储备有限，且对一件事物上瘾会不断提高感受快乐的阈值，那么如何让我们能对一件事情保持长时间的兴趣和投入度，又不至于耗尽多巴胺呢？一个经典的例子是赌场的运作方式，我们并不是每一次下注都能赢，偶尔赢一次会释放多巴胺，而且根据赢得钱的多少有所上下浮动，这会吸引玩家持续参与。这就是一种非常有效的间歇性且随机的奖励机制。感觉很多游戏，社交网络产品也借鉴了这个思路来进行设计。\n对于我们经常需要从事的活动，我们也可以模拟这个机制。还记得前面提到的多巴胺叠加效应吗？我们可以通过随机化叠加因素的多少，来实现多巴胺释放的差异性。还是以健身为例，我们可以随机决定今天是否要听音乐，是否去健身时带手机，是否要在健身前喝能量饮料等因素。如果其它什么都不做，只是单纯健身，那么多巴胺的释放量就会相对较低。如此就能模拟多巴胺释放有高有低的随机奖励机制。\n成长型思维最后来看下如何构建良好的思维方式来利用多巴胺系统提升自我。\n有一个非常知名的实验，挑选了一群天生喜爱画画的小朋友，在他们完成画作后给与一些奖励。后面在移除这些奖励后，小朋友们对于画画的兴趣和动力大大降低了。这个实验说明，当我们因为一个活动收到奖励（比如金钱，美食等）时，我们反而会降低活动本身的愉悦程度。而且多巴胺本身影响我们对时间的认知，同时也影响我们的情绪状态，如果我们始终以完成活动后的奖励为目标，则整个过程中就很少释放多巴胺，让原本困难的过程变得更加难以坚持。\n仔细想一下，这是一个非常有意思的观察。多巴胺有点像我们的“本能系统”，决定了我们是否有动力做一件事。但反过来我们的主观思想却可以影响这个系统起作用的方式，这也是人类为何能摆脱动物本能，达成很多需要“反人性”的投入才能取得的成就的原因吧。上述的实验是我们的主观思想造成的一个反面作用的例子，我们自然也可以实现正面作用，那就是成长型思维。\n具体来说，就是通过自我暗示，把努力过程本身当作一种“奖励”。我在努力学习，这个过程本身就是有趣的，会让我不断变得更强，这样的想法会在过程中激发身体系统释放多巴胺，而多巴胺提升了我们的情绪和动力水平，也会让努力的过程中碰到的困难变得相对容易克服。专注于这个过程的本身，而不是在过程前进行各种外界刺激（如前面提到的药物），或者在过程后给自己巨大的奖励。\n这种思维方式看起来很主观，但这就是我们的神经系统工作的方式，虽然人类的“硬件系统”都差不多，但知识，思维这些运行之上的“软件”却可以千差万别。我们可以通过自律，自我暗示来改变自身对各类活动的喜好。例如通过暗示 fasting 对我们健康的益处，来获取满足感，而不是借助于 fasting 结束后的大快朵颐。通过自律抵御高油盐食物的吸引力，并且自我暗示植物类食物对身体的好处，坚持一段时间，会觉得花椰菜也挺美味的。这也是为什么我们在这篇文章中介绍了很多原理性的内容，而不仅仅是行为建议。因为这些原理知识能够让我们做更好的自我暗示 :)\n多巴胺系统中也有对我们认知成长造成“障碍”的运作机理。例如当我们接受到的信息支撑我们之前的信念时，也能够激发多巴胺的释放让我们感到快乐，这从本质上会改变我们对世界的认知。由此可见，“空杯心态”是多么难得的品质，网上如此多的争论无法达成共识也有很大一部分“归功”于此。如何克服神经系统中的这类缺陷呢？一种可能的方法是尽可能调节情绪，使自己处于镇静的状态（提升血清素水平），这样才能让自己更好的去倾听和吸收跟自己认知不一致的信息，更好地协同合作。\n这一节的 podcast 对我本人的冲击非常大，强烈建议大家观看这期 Mindset &amp; Drive，相信也会有不同的收获。\n学习与专注在了解了多巴胺的运作机制基础上，我们可以继续探究一些跟大脑健康，专注度，如何进行高效学习相关的话题。\n学习的原理从脑神经科学来看，学习的本质是神经元的重新连接（rewire），进一步来看，需要大脑处在一种学习的化学状态下，也就是 Huberman 经常提到的神经可塑性（neuroplasticity）状态。要达到这个神经可塑性状态，有两个重要条件，一个是足够的专注度，另外一个是“犯错”的信号（后面会展开）。另外大脑一个比较有意思的机制是，在学习时的神经可塑状态下，乙酰胆碱会标记需要改变的神经元，而具体的神经元重连接则主要是在休息和睡眠时发生，是不是有点像 JVM 虚拟机的垃圾回收机制 :)\n什么是犯错信号呢？当我们尝试做一些事情，但没有达到预期目标时，身体会给大脑发信号，“我犯错了”。处在这种犯错，沮丧的认知状态下，神经系统会释放肾上腺素（提升 alertness），乙酰胆碱（提升 focus），多巴胺（促进神经元的 change，rewire）等化学物质，激活神经元的可塑性。也就是说，犯错是我们进入学习状态的重要前提。搞机器学习的同学应该很熟悉了吧，这跟我们训练模型不是一模一样么 :) 另外很多人可能觉得心流（flow）状态是学习的最佳状态，而 Huberman 则不这么认为。心流是一种精神高度集中且接近于自动化的状态，是在做我们已经知道怎么做的事情，而不是在学习新的知识技能。\n对于这个学习状态，经典的实验是给人们戴上一些能转变角度的眼镜，然后执行一些类似物体抓取的任务。由于看到的东西通过眼镜改变了其本来的位置，一开始在尝试时总会出现抓取动作的偏离。但后续在进入神经可塑性状态后，我们能逐渐适应相关的视觉偏移，协调自己的听觉，动作等都与之协同，顺利完成任务。更有意思的是，这个“神经可塑性”的化学状态是可以持续的，我们甚至可以先通过一些其它操作触发大脑的这个机制，再去进行真正的学习，以加快学习的速度。这里还有一个隐藏逻辑，当你在遇到挫折困难时，大脑进入了可塑性状态，而此时你却放弃了，那么神经元也会重新连接到这种容易放弃的行为模式，形成恶性循环。\n人在年幼时期大脑天然的神经可塑性会比较好，而在 25 岁以后则会大大下降。我们后面会提到如何来进行克服。\n另外，休息和睡眠时也会发生大量的神经元重连接的活动，这也是之前我们就提到过的，高质量的睡眠是实现很多生理，心理健康强壮的先决条件。\n利用神经可塑性如果正在阅读文章的你还未满 25 岁，那么恭喜你，你的神经可塑性仍然非常的好，可以尽可能广泛的学习各种知识和技能。比如你可以很快学会各种乐器，新的语言，新的运动，新的专业技能等等。通过更广阔领域的体验接触，尽量找到你最有兴趣的方向，可以后续再不断深入经营。\n如果已经像我一样超过了 25 岁，那么还有很多办法来提升神经可塑性：\n\n通过实验发现，成年人对于小幅度的增量学习是完全可以适应与掌握的。例如每次视觉上的偏差只有 7 度，而不是一下子就来个 180 的大颠倒，那么成年人也能很快从错误中学习纠正。应用到实际学习中，我们每次学习的内容可以控制一下不要太多（本文有点违反了，建议收藏慢慢学习），多次积累来完成神经系统的调整学习。\n对于达成目标的渴求度越高，重要性越大，奖励的刺激越大（比如为了生存），则神经可塑性就会越容易出现。这个比较符合直觉，但是现实中可操作性可能不高。\n第三点最有意思，通过扰乱前庭神经系统（vestibular system），能够达到神经元可塑性的状态。简单来说，就是让你的身体有一些“新颖的重力体验”，如倒立，瑜伽，体操，滑板，任何让身体会失去平衡的一些状态等，会快速激发“我犯错了”的信号，进入学习状态，甚至可以在之后去做别的任务的学习。这一下子就让我想到了淘宝成立初期的“倒立文化”，没想到还真的有科学依据。需要注意的是，这个体验必须要新颖，也就是说如果你已经倒立很熟练了，那么去做倒立就是个日常行为，并不会给身体一种在犯错边缘，需要纠正的刺激。\n\nHuberman 认为，大脑的主要功能链路是感知，认知，情感，思想，行动。在尝试控制我们的神经系统来进行各种任务时（例如学习，解决困难问题，挑战运动极限），我们是很难用精神思想来控制其本身的（比如不断跟自己说我不能分心），更可行的办法是“逆向链路”，从我们的行动出发，利用神经系统的运作原理，逐渐影响思想，情感，认知甚至感知部分。这也是 Huberman 非常推崇各种“行动工具”的原因。Mood follows action。\n学习的理想状态除了神经可塑性的化学状态外，我们也需要注意其它的因素。例如我们不能太放松以至于有些昏昏欲睡，也不能太紧张激动，无法控制自己拥有清晰的思考等。这些也都跟我们体内的多巴胺，肾上腺素，乙酰胆碱，血清素，褪黑素等化学物质的水平有关，需要做好调节。在之前 Rich Roll 的访谈节目中，Huberman 提了一个非常有效的“呼吸工具”，叫生理叹息（Physiological Sigh）。操作方法上简单来说就是吸两口气，然后出一口长气。通常情况下，只要一两次生理叹息就足以使我们的压力和警觉水平迅速下降，让人感到更加平静，提升学习表现。\n前面提到的成长型思维也很重要，在遇到错误导致的沮丧感觉时，可以不断增强自我暗示，失败是帮助我们学习成长的唯一路径，对我们是有益的，以此增加多巴胺的释放，提升学习动力和过程中的愉悦感。\n联系到睡眠对学习的促进作用，也有一些研究提供了一些相关的 tips：\n\n在学习时听一些有规律的节拍，在入睡时也播放同样的微弱节拍，能够提升学习和记忆的效果。\n一般在 90 分钟的学习后（人体生物钟的周期），可以选择进行 20 分钟的休息（non sleep deep rest），也会加强学习的效果。\nGap effect，在学习中随机停止 10 秒钟，这些停止会在睡眠中加速“播放”，提升学习效果。\n\n提升专注“专注”背后的机理是大脑中两种“网络模式”的协调，一种叫 Default network，在我们不做任何事情时被激活，另一种叫 Task networks，在我们专注于做某些事情时被激活。普通人的大脑能够很好地协调这两个模式，两者像跷跷板一样，当一种模式被激活时另一种模式会被抑制。而具有专注障碍（比如多动症）的人来说，这两者无法很好地进行协调，因此会出现无法专注的现象。\n通过提升多巴胺水平，可以有效促进这两种网络模式的协调，因此有非常多的多动症治疗药物都跟提升多巴胺有关，例如 Adderall，Modafinil 等。一些调查表明，这些药物（经常被称为聪明药，nootropics）在美国被滥用的程度甚至超过了大麻，不少“学霸”都以此来提升注意力，减少对睡眠的需求。但 Huberman 教授表示，一方面多巴胺的刺激提升后都会带来多巴胺水平的低谷，另一方面这些药物也可能导致上瘾，对新陈代谢作用造成扰动，有很多负面影响，对长期的学习与记忆效果可能并没有提升作用。在之前介绍多巴胺的章节也有提到，应该谨慎使用这类药物，并严格控制使用频率不能过高。\n最好的提升专注的方法当然是前面聊过的更好的控制我们的多巴胺系统，例如把行动跟背后的意义相连接，给自己正面的心理暗示；将任务拆成多个小的里程碑，通过过程自身的激励来促进多巴胺的释放提升我们的专注度。此外一些安全有效的提升专注力的方法包括：\n\n适量补充 Omega-3 EPA 鱼油，这是神经细胞的组成原料之一，能够有效减轻抑郁，对治疗多动症（ADHD）也有帮助。\n通过身体其它部分释放运动，可以帮助提升注意力。教授举的例子是作为神经科医生在开刀时，如果采用半蹲半站的姿态（运动释放），拿手术刀的手更稳定不容易颤抖。这让我想起以前读书时很多同学习惯转笔，现在工作了也有不少人喜欢玩指尖陀螺，或者站立办公，可能都是类似效果。\n限制视野范围，能够提升专注度。比如我们经常因为眼睛瞟到了任务栏上的消息提示闪动而分心，可以通过一些设置来进入“专注模式”。\n视线的高低也会影响神经状态，视线往下看会让神经系统偏向镇静，放松，甚至困倦，而视线向上则会让系统提升警惕。工作时一般至少把显示器放置在鼻子位置之上。\n大脑不擅长处理大量频繁的 context switch，典型的比如刷抖音，不同的信息以非常快的速度频繁切换，这对我们的注意力是有伤害作用的。2014 年的一项研究表示，我们每天在手机上花费的时间应该少于 60 分钟（青少年）/120 分钟（成年），以免引起注意力障碍问题。\n还有研究表明，17 分钟的冥想，能够对大脑中的神经元做重新连接，永久地改善注意力。只要做一次就可以，完全可以尝试一下。\n\n大脑健康最后来看下提升大脑健康和效能的一些方法。\n首先是前面提到过的，保证高质量的睡眠。\n运动方面，对大脑直接帮助最大的是有氧运动，提升心肺功能，支持大脑供能。建议每周 150-180 分钟的有氧训练。\n对于大脑健康有帮助的食物，其中前三点是比较重要的，后面的部分涉及的研究没有那么多：\n\nOmega3, 尤其是 EPA 等脂肪酸，是大脑组成的重要部分，且一般人都容易摄入不足。多吃鱼，牡蛎，鱼子酱，奇亚籽，核桃，大豆。一天至少摄入 1.5 克，理想情况需要 3 克以上。不喜欢吃鱼的话可以辅助摄入鱼油。\n磷脂酰丝氨酸，也对认知能力有帮助。通过鱼，肉类，卷心菜来摄入。\n乙酰胆碱，重要的神经调质，提升注意力。摄入胆碱的重要来源是鸡蛋，尤其是蛋黄。土豆，坚果，水果中也含有，虽然没有蛋黄中的含量那么丰富。可以通过 Alpha-GPC 等补充剂来获取。\n肌酸，尤其对于不吃肉的人，一天需要摄入 5 克左右。\n花青素，在蓝莓，黑莓，葡萄等食物中有提供。可以降低 DNA 损伤，缓解认知下降等问题。大约每天需要 60-120 克蓝莓的补充。\n谷氨酰胺，可以通过牛肉，鸡肉，鱼肉，鸡蛋，大豆，卷心菜，菠菜，芹菜等食物来摄取。提升大脑在缺氧（高海拔地区）下的表现，还能够抑制对糖的需求。\n水，钠，钾，镁等电解质是神经元信号传递所需的基础元素，需要保证。\n\n这一节中还讨论了我们身体对各种食物喜好进行判断的三个渠道，前两个分别是味觉判断和营养成分的下意识判断。第三个比较有意思，也跟多巴胺有关，即我们可以通过提升大脑代谢的活跃度来增加对某种食物的喜好。比如你如果不喜欢吃鱼，一种方法是你可以把鱼跟你平时爱吃的食物一起吃，另一种是给自己足够的心理暗示，说服自己吃鱼是有益身体健康的。通过这两种办法，你都可以让大脑释放多巴胺，从而逐渐提升对鱼类食物的喜好程度。\n最后，如果你对膳食补充剂感兴趣，还可以看看 Huberman 教授平时会吃的补充剂有哪些。\n长寿最后我们来看下如何延年益寿，这是 Huberman 跟这个领域的专家，来自哈佛的 David Sinclair 的一集访谈节目。\n衰老的本质Sinclair 认为，衰老是一种疾病，它本身导致了非常多通常意义上的疾病的出现，比如阿尔兹海默症，癌症等。我们可以通过科学的手段来“治疗”衰老，甚至逆转它。\n从本质上来说，衰老是基因信息的损失，这分为两部分：\n\nDNA 本身的信息，比如细胞中的 DNA 结构会在辐射等情况下受到破坏。\n控制哪些基因进行表达的信息受到了破坏，也就是所谓的表观基因组（epigenome）。这部分在衰老的因素中占了 80%。\n\n人体内有一个天然的“衰老时钟”，而且并不是以匀速走的。在年轻时我们的生长发育过程中，这个时钟走得更快。所以如果青春期发育比较迅速的人，一般来说整体的时钟走的比较快，寿命也会相对短，是不是有点吓人……而且，一般比较矮小的人，像侏儒很少会得心脏病，癌症，也会明显更长寿。不过不要紧张，前面提到了，基因本身的信息只占了衰老因素的 20%，控制基因表达这部分占了大多数。\n这里有点意外的是 Sinclair 教授介绍的最重要的几个实验，都跟前面我们提到的 fasting 有关。比如一般老鼠的寿命大概是 2 年，他们实验室有一只叫 Yoda 的老鼠，活了足足 5 年。其主要的做法就是选取了侏儒基因，以及执行 fasting。\n教授详细介绍了 fasting 为何能提升动物/人类 30% 以上的寿命：\n\n在低血糖水平时，身体会抑制哺乳动物雷帕霉素靶蛋白（mTOR），激活去乙酰化酶（sirtuin），形成一个非常良好的化学状态，清理旧蛋白质，提高胰岛素敏感度，提供更多能量，修复细胞等等。后面这个乙酰化酶是我们抵御衰老的一个重要武器。\n当胰岛素水平低时，“长寿基因”会被激活，如 SIRT1 等。\nfasting 会给细胞足够的“休息时间”。\n血糖水平低，会让身体对胰岛素更敏感，更快吸收血糖，也对健康有益。\n当你从来不感受饥饿时，你的衰老时钟也走的更快。\n除了 24 小时周期 fasting 触发的 autophagic，还有更深层次的清理机制，会在禁食第二，三天启动。在老年老鼠上的实验表明，这种长时间的禁食可以让他们延长寿命 35%。不过这个实操难度对普通人来说有点大。\n\nSinclair 也对比了一些上个世纪失败的研究，比如通过抗氧化剂来抵御衰老。现代长寿研究的核心思想是，如何通过一些机制手段来触发身体自身的衰老抵抗机制。\n此外 Sinclair 也介绍了一些激动人心的前沿技术，例如通过基因治疗方法，可以重启我们的 DNA 表达系统。通过一次注射，可以让盲人恢复视力，这已经在老鼠身上得到了验证。或许几年后，我们可以像死侍那样实现身体各部分的逆转老化。\n实践这里列出一些 Sinclair 自己的实践方式，如果想要采纳还是要结合自身的情况来看。有意思的是这集节目下有个热门留言是这个教授竟然已经 52 岁了，完全看不出来……所以你懂的。\n\n不吃早饭，午饭也吃的比较少，酸奶或者橄榄油，晚饭吃蔬菜为主，加鱼和虾，基本不吃牛排。不吃糖，甜品，面包。基本达到了 2 小时进食窗口的高阶 fasting 状态。他偶尔也会尝试一整天都不吃东西，但比较难坚持。\n每天摄入 1 克的白藜芦醇（resveratrol），1 克的 NMN（进而会转化为 NAD，which is sirtuin 的“燃料”），还有二甲双胍（metformin）。其中锻炼的日子可能会跳过一些补充品。他并不吃复合维生素。\n以蔬菜为主食的好处：富含各种营养，维生素；包含异种激素（Xenohormesis），植物基于“压力”之下产生的物质，对长寿有益。后者也可以通过槲皮素（quercetin）来做膳食补充。\n一般会隔一天进行有氧运动和力量训练。有氧运动能提升 NAD 水平。\n根据家族病史来决定一些药物摄入，如他 29 岁就开始服用降胆固醇药物。\n对于人造甜味剂，教授认为总体来说是安全的。他偶尔也会喝健怡可乐。\n\n对于这一系列实践，Sinclair 教授都进行了 10 多年的自身实验，并使用各种手段来监控身体数据。通过监控数据可以推测出一个人的“生理年龄”如何（不是光看脸），他自己在上述实践下，生理年龄在持续下降，现在已经达到了 30 岁左右的水平（实际年龄 52 岁）。另外，他认为每个人的身体情况不一样，医院约定俗成的生理指标范围也不一定适合每个人。未来这种健康数据的实时监控与个性化诊断会成为主流。他举了一些例子：\n\n监控血糖水平 HbA1c，观察 fasting 的影响等。\n监控炎症指标 CRP，与心脏病等各种疾病的诱发相关。\n监控 LDL，通过药物等进行控制。膳食胆固醇对血液胆固醇几乎没有影响，不需要戒红肉，黄油等。\n补充铁元素可能加速衰老。医学指标需要个性化，低铁元素含量并不一定导致贫血。\n\n还有一些影响寿命的负面因素：\n\n肥胖症会加速衰老。\n吸烟，会破坏基因表达，加速衰老。\nX 光检查同理，没有必要时，避免接触。\n\n展望一下 longevity 研究的未来，还是挺激动人心的。现代科学每一年能让我们的平均寿命延长 1/4 年，如果每一年能让我们的平均寿命延长超过 1 年，则达到了寿命“逃逸速度”（类比以 1000 英里每小时的速度往西飞行，太阳永远不会落下），实现了“永生”。著名的未来学家 Ray Kurzweil 预测，大约 12 年后（2034 年）就能实现，让我们拭目以待。\n除了这集 podcast，也必须附上吴承霖大佬的万星项目 程序员延寿指南。\n个人实践前面介绍的内容有点多，这篇文章篇幅也有些超了。最后来简单介绍下我个人目前采纳的一些行动和辅助工具。\n睡眠方面暂时没有什么特别的措施，现在带娃基本上晚上睡眠质量也比较一般。只是会稍稍注意一下晚上 11 点后尽量不接触手机光源。早起接收光照这点，基本上就是早上遛狗或者开车通勤时间来接触，基本压力不大。如果比较讲究的同学，还可以下一个 My Circadian Clock App 来追踪一下生物钟，也是 Satchin Panda 等大佬参与开发的项目，值得信赖。\n饮食方面，开始尝试 8 小时进食窗口的 fasting，目前感觉良好。中饭一般吃蔬菜为主的轻食，晚上就比较放飞自我，想吃啥吃啥。早上会看情况喝点盐水，茶或者 AG1 的补充剂。膳食补充剂目前基本只有复合维生素和 EPA 鱼油在使用，后面可以参考下 Huberman 的“配方” 增加一些。Huberman 自己也在节目中表示对白藜芦醇和 NMN 还在观望状态，我查了些资料发现有争议的地方还不少，所以我个人建议先采纳广受认可和使用的一些补充剂，如 EPA 鱼油，二甲双胍等。个人目前考虑的补充剂列表：\n\n基础维生素，常规补充剂。\nOmega-3 EPA。\nAG1，超火的小绿粉，各种植物提取物 + 各种维生素矿物会，Fridman，Huberman 等大佬的节目里都有提到，就是贵了点。\nBetaine HCL &amp; Pepsin，保护肠胃。\nL-Tyrosine，提升多巴胺，可能会买个尝尝鲜。\n二甲双胍，抗衰老“神药”。\nResveraCel，白藜芦醇，NR 等抗衰老组合。\n\n很多人都关心 fasting 可能引发胆结石，这里提供一些补充信息：\n\n从这篇 Bloch, H. M. 等人的论文 来看，fasting 过程中胆汁的饱和度有一个先上升后下降的过程，Dr. Berg 也以此做了解释，认为 fasting 加生酮饮食（摄入脂肪）对胆囊健康反而是有益的。\n从这篇 Sichieri, R. 等人的论文 的结果来看，long overnight fasting 和节食会提升得胆结石的概率。不过减肥（减少脂肪）本身就会提升得胆结石的概率。\n持续 24 小时以上的禁食相关的研究比较少（比较难执行），但从机理上来说长时间的禁食应该会增加得胆结石的概率。\n饮食结构，自身状况对胆结石的形成也会有很大影响，例如高胆固醇，高胰岛素水平，高碳水饮食等。高纤维食物，健康的脂肪摄入，有助于降低得胆结石的概率。\n\n总体看下来，我个人感觉这块的实验上没有一个定论（就跟 咖啡是否会引发胆结石 一样），但应该不是一个概率很大的问题，起码 Huberman 教授跟这个领域的另一位权威 Satchin Panda 教授都没有提到这块的问题。理想情况是执行 fasting 时持续对你的身体状况做医学指标的跟踪。其它就看个人选择了 :)\n工作，学习，专注方面，主要看自律了。这方面我总体控制还可以，在了解了多巴胺的工作原理之后就更加有自信了，主要靠各种软件的专注模式来近似执行番茄时钟法，此外也采用了升降桌，大概有 30% 的时间站立办公。工作间歇会尝试一下 Yoga Nidra。此外晚上学习时段会用 iPad 的 Books 来记录一下阅读时间，基本上每天保持 30 分钟以上，持续坚持。后面考虑试试工作时喝马黛茶，以及夏天开始尝试冷水澡。\n运动方面是这一年来改观最大的一项，依靠小米手环 PAI 指数功能的督促，基本上做到了每周平均 3 次的跑步或者羽毛球活动，持续把 PAI 值保持在 200 左右。总体来说对于精神状态的改观还是很大的，肚子上的脂肪也减少了很多。唯一比较困扰的是一般下班后运动都要 9，10 点开始了，结束后会离入睡的时间比较近，有时候会对睡眠质量有所影响。\n最后，Huberman 教授的 podcast 中还有很多其它内容，比如习惯养成，健身增肌，应对恐惧与创伤，情绪管理等，感兴趣的朋友可以进一步挖掘。本文以实验事实与原理假设的陈述为主，以上所有的行动方案都需要在咨询医师，专业人员的条件下，结合自身情况执行，注意自身安全，本人与 Huberman 都不负相关后果责任。\n备注：这篇文章也同时发布到了 Github，欢迎大家 Star 并提出宝贵建议，谢谢！如果你对我的其它作品感兴趣，也欢迎搜索关注公众号：RandomGenerator。\n","slug":"life/HumanSystemOptimization","date":"2022-05-31T16:46:27.000Z","categories_index":"生活","tags_index":"人生","author_index":"Joshlee"},{"id":"a5751cb68211f766011de586416700ec","title":"各种数据范围下的算法选择","content":"\n\n\n\n\n数据范围\n时间复杂度\n算法\n\n\n\n\n\nDFS+剪枝，状态压缩 DP\n\n\n\n\nDP，Floyd，高斯消元\n\n\n\n, \nDP，二分，朴素版 Dijkstra、朴素版 Prim、Bellman-Ford\n\n\n\n\n块状链表、分块、莫队\n\n\n\n\nSort、线段树、树状数组、Set、Map、Heap、拓扑排序、Dijkstra+Heap、Prim+Heap、Kruskal、SPFA、求凸包、求半平面交、二分、CDQ 分治、整体二分、后缀数组、树链剖分、动态树\n\n\n\n常数较小的\n单调队列、Hash、双指针扫描、并查集、KMP、AC 自动机、Sort、树状数组、Heap、Dijkstra、SPFA\n\n\n\n\n双指针扫描、KMP、AC自动机、线性筛素数\n\n\n\n\n判断质数\n\n\n\n\n最大公约数、快速幂、数位 DP\n\n\n\n\n高精度加减乘除\n\n\n\n\nk 表示数位、高精度加减、FFT/NTT\n\n\n","slug":"algorithm/refer_algorithm","date":"2022-04-08T02:43:04.000Z","categories_index":"算法","tags_index":"算法,技巧","author_index":"Joshlee"},{"id":"da2d8763fa18b31af06ba8fb8f150918","title":"PTA-L3-003 社交集群(30 分)","content":"\n\n\n\n\n\n\n\n\n\n\n题目链接：PTA-L3-003 社交集群(30 分)\n题目背景当你在社交网络平台注册时，一般总是被要求填写你的个人兴趣爱好，以便找到具有相同兴趣爱好的潜在的朋友。一个“社交集群”是指部分兴趣爱好相同的人的集合。你需要找出所有的社交集群。\n输入格式输入在第一行给出一个正整数 ，为社交网络平台注册的所有用户的人数。于是这些人从  到  编号。随后  行，每行按以下格式给出一个人的兴趣爱好列表：\n\n其中是兴趣爱好的个数，是第个兴趣爱好的编号，为区间  内的整数。\n输出格式首先在一行中输出不同的社交集群的个数。随后第二行按非增序输出每个集群中的人数。数字间以一个空格分隔，行末不得有多余空格。\n输入样例plaintext8\n3: 2 7 10\n1: 4\n2: 5 3\n1: 4\n1: 3\n1: 4\n4: 6 8 1 5\n1: 4\n\n输出样例plaintext3\n4 3 1\n\n解题思路\n题目的大致意思就是，一个人可以有多个兴趣爱好，而拥有共同兴趣爱好的人可以组成一个圈子，你要找出一共有多少个圈子，以及圈子有多少人。看到这种需要进行元素分组管理的问题，我们考虑使用并查集去维护。\n因为要统计圈子的人数，我们需要开两个数组，一个数组  维护兴趣爱好的分组，一个数组  用于存放各个分组的人数。对于每个人的多个兴趣爱好 ，我们将第  合并(merge)入  形成一个圈子（分组），也就是将  视为一个头节点，然后根据这个头节点 去更新圈子的人数，更新人数的时候需要去找到  的祖先节点，对祖先节点的人数进行更新，即 ;\n最后统计一波人数即可，有一点细节要注意的是，最后的输出不能有空格！不然爆 0\n完整代码javaimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    private static int[] a;\n\n    private static final int MAX = 1010;\n\n    public static void main(String[] args) throws IOException {\n        int n = Integer.parseInt(br.readLine());\n        \n        // nums 用于统计人数\n        int[] nums = new int[MAX];\n\n        // 初始化并查集\n        a = new int[MAX];\n        for (int i = 1; i &lt; a.length; i++) {\n            a[i] = i;\n        }\n\n        Set&lt;Integer&gt; set = new HashSet&lt;&gt;();\n        for (int i = 1; i &lt;= n; i++) {\n            String[] s = br.readLine().split(\" \");\n            int first = Integer.parseInt(s[1]);\n            \n            // 增加人数\n            nums[find(first)]++;\n            \n            set.add(first);\n            for (int j = 2; j &lt; s.length; j++) {\n                int h = Integer.parseInt(s[j]);\n                set.add(h);\n                // 将后面的全部并入第一个\n                merge(h, first);\n            }\n        }\n\n        // 统计集群人数\n        Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();\n        for (int i = 1; i &lt; a.length; i++) {\n            if (set.contains(i)) {\n                int ii = find(i);\n                if (ii == i) {\n                    if (map.containsKey(i)) {\n                        map.put(i, map.get(i) + nums[i]);\n                    } else {\n                        map.put(i, nums[i]);\n                    }\n                } else {\n                    if (map.containsKey(ii)) {\n                        map.put(ii, map.get(ii) + nums[i]);\n                    } else {\n                        map.put(ii, nums[i]);\n                    }\n                }\n            }\n        }\n        // out\n        pw.println(map.size());\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;(map.values());\n        // 逆序排序\n        ans.sort(Collections.reverseOrder());\n        int i;\n        for (i = 0; i &lt; ans.size() - 1; i++) {\n            pw.print(ans.get(i) + \" \");\n        }\n        pw.print(ans.get(i));\n        pw.flush();\n    }\n\n    private static void merge(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x != y) {\n            a[x] = y;\n        }\n    }\n\n    private static int find(int x) {\n        if (x != a[x]) {\n            a[x] = find(a[x]);\n        }\n        return a[x];\n    }\n\n    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n    private static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));\n\n}\n\n\n","slug":"algorithm/PTA-L3-003","date":"2022-04-05T08:00:41.000Z","categories_index":"算法","tags_index":"并查集,题解","author_index":"Joshlee"},{"id":"2fb6f73465144858123c433ce6781558","title":"矩阵快速幂","content":"\n\n\n引例（洛谷P3390）题目描述给定一个的矩阵，求。\n输入格式第一行两个整数  接下来  行，每行  个整数，第  行的第  的数表示 。\n输出格式输出\n共 行，每行  个数，第  行第  个数表示 ，每个元素对取模。\n输入输出样例输入 #1plaintext2 1\n1 1\n1 1\n\n输出 #1plaintext1 1\n1 1\n\n数据范围对于 % 的数据：\n完整代码javaimport java.io.*;\n\n/**\n * P3390 【模板】矩阵快速幂\n */\n@SuppressWarnings(\"all\")\npublic class P3390 {\n\n    private static long[][] matrix;\n\n    private static int n;\n\n    private static long k;\n\n    private static final int MOD = 1000000007;\n\n    public static void main(String[] args) throws Exception {\n        n = nextInt();\n        k = nextLong();\n        matrix = new long[n][n];\n        for (int i = 0; i &lt; matrix.length; i++) {\n            for (int j = 0; j &lt; matrix[i].length; j++) {\n                matrix[i][j] = nextInt();\n            }\n        }\n        \n        long[][] ans = quickPow(k);\n        for (int i = 0; i &lt; ans.length; i++) {\n            for (int j = 0; j &lt; ans[i].length; j++) {\n                pw.print(ans[i][j] + \" \");\n            }\n            pw.println();\n        }\n        \n        pw.flush();\n    }\n\n    private static long[][] quickPow(long k) throws Exception {\n        long[][] res = new long[n][n];\n        // 单位矩阵\n        for (int i = 0; i &lt; n; i++) {\n            res[i][i] = 1;\n        }\n        while (k &gt; 0) {\n            if ((k &amp; 1) &gt; 0) {\n                res = matrixMultiplication(res, matrix);\n            }\n            k &gt;&gt;= 1;\n            matrix = matrixMultiplication(matrix, matrix);\n        }\n        return res;\n    }\n\n    private static long[][] matrixMultiplication(long[][] A, long[][] B) throws Exception {\n        int rowA = A.length, columnA = A[0].length, rowB = B.length, columnB = B[0].length;\n        if (columnA != rowB) {\n            throw new Exception(\"第一个矩阵的列数必须等于第二个矩阵的行数！\");\n        }\n        long[][] C = new long[rowA][columnB];\n        for (int i = 0; i &lt; rowA; i++) {\n            for (int j = 0; j &lt; columnB; j++) {\n                for (int k = 0; k &lt; columnA; k++) {\n                    C[i][j] += A[i][k] * B[k][j];\n                    C[i][j] %= MOD;\n                }\n            }\n        }\n        return C;\n    }\n\n    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n    private static StreamTokenizer st = new StreamTokenizer(br);\n\n    private static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));\n\n    private static int nextInt() throws IOException {\n        st.nextToken();\n        return (int) st.nval;\n    }\n\n    private static long nextLong() throws IOException {\n        st.nextToken();\n        return (long) st.nval;\n    }\n\n}\n\n\n","slug":"algorithm/matrix_quick_power","date":"2022-03-28T08:00:41.000Z","categories_index":"算法","tags_index":"算法,矩阵,快速幂","author_index":"Joshlee"},{"id":"b6bea84273156013b3326c84401baf8a","title":"一文搞懂树状数组","content":"\n\n介绍树状数组是由Peter M. Fenwick提出的二叉索引树（Binary Indexed Trees）结构，最初用于数据压缩。在算法竞赛中，常用于区间操作。\n类似的数据结构还有线段树，线段树可以实现树状数组所有的操作，甚至更多。而树状数组代码简洁，运行速度也线段树快，占用内存空间也比线段树少，如果是一个单点修改的问题，树状数组绝对是一个不二选择。\n接下来我们引入一个问题：\n\n\n\n\n\n\n\n\n\n 已知有  个箱子 ，你需要进行以下两种操作：\n\n将  个大理石放入第  箱子中\n求第  到  个箱子中大理石总共有多少个\n\n假设我们要进行  次操作。\n对于这个问题，很容易想到朴素的做法：直接修改数组、遍历求和。\n朴素做法对于操作 1 的时间复杂度为：。操作 2 时间复杂度为：。当所有操作都为 2 的时候，达到最坏时间复杂度  。\n如果数据量大的话，使用朴素的做法显然会 。\n这是道简单的单点修改 &amp; 区间查询的题目，我们使用树状数组，查询的时间复杂度就可以降到，最坏时间复杂度就可以降到 了。\n原理下图为树状数组的原理：\n\n是不是看起来非常抽象？完全无法理解其中是什么含义？是的就是非常的抽象，让我来解释一下这张图你就明白了~\n树状数组的结构和线段树很类似，都是用一个大的节点去管理若干个小节点，查询的时候只需要查大节点就可以得到区间的信息。\n图中 8 个蓝色的方块代表着数组 ，而绿色方块代表数组  ，即管理着数组  的逻辑结构，为什么叫逻辑结构呢，我的理解是这个结构是根据逻辑虚构出来的，在实际内存中并不存在数组 ，而图中的  则是将抽象的逻辑结构形象化了，有助于去理解数据结构。可以从图中看出：\n\n 管理的是 \n\n 管理的是 \n\n 管理的是 \n\n 管理的是 \n\n\n以 t[6] 为例，方块的下半部分是数组索引的二进制表示形式，而高亮部分的位（10）就是 lowbit。我们可以发现，lowbit 的值就是结点的覆盖长度，6的  值为 2，那么就可以得知t[6]结点的覆盖长度为 2。知道了覆盖长度，我们就可以利用覆盖长度来找上一个结点或下一个结点（父结点）了。\n比如我们要找 t[6] 的父结点 t[8]，只需要t[6+lowbit(6)]就行了，由此我们可以得出:  的父节点为 。\n那如果要找 t[6] 的上一个结点 t[4] 呢？也很简单，和找父结点类似，索引值减去 lowbit 的值就可以了，也就是t[6-lowbit(6)]，由此我们可以得出:   的上一个结点为 。\n好了，知道了怎么找到上一个结点和父结点，那么我们就可以正式开始搞树状数组了~\n等等，到这里你一定很懵逼，上面说的  到底是啥玩意？那怎么去求  呢？那么在正式开搞树状数组前，我们先详细的讲讲运算~\nlowbit运算为了简洁起见，我们定义”“为非负整数中最小的非零有效位，即非负整数在二进制表示下最低位 1 及其后面的 0 构成的数值。\n例如，我们对十进制数字 44 进行  运算：。\n其中就是最低位 1 及其后面的 0 构成的数值。\n但怎么通过程序去找到所谓的  数值呢？转成二进制再通过遍历寻找？这显然效率太低，不妨我们用位运算试试吧~\n\n首先我们知道44的二进制为 101100，即。\n将 101100 按位取反，得到 010011，再将取反后的值 + 1，得到 010100。\n观察101100 和 010100，可以看出，除了最低位的 1 和后面的 0，其余位上两者均不同。这时聪明的你可能已经发现了，将两者进行按位与运算不就可以得到lowbit了吗？没错，就是这样的~\n\n简言之，就是将该二进制值 和 该二进制取反后+1 的值 进行按位与运算，就可以得到 lowbit 值了，即：\n\n众所周知，正数和 0 的补码是数字本身，而负数的补码则是将其对应正数按位取反再加 1。因为在常见计算机中存储使用的是补码，取反加一后的值就是负的这个数，所以 lowbit 的值为 n&amp;-n，即最终为：\n\n代码如下：\njava// Java\npublic int lowbit(int n) {\n      return n &amp; -n;\n}\n\n\n\n单点修改 &amp; 区间查询单点修改单点修改我们只需要将  加上 , 更新  所有的上级（父结点）即可。\n例如对 ，具体过程如下图\n\n代码如下：\njava// Java\npublic void add(int i, int k) {\n      while(i &lt;= n) {\n          a[i] += k;\n          i += lowbit(i);\n    }\n}\n\n区间查询想要在单点修改中进行区间查询，首先要知道怎么求  的前缀和。\n还是利用  函数，一直找上一个结点进行求和。\n例如求  前缀和，过程如下图：\n\n知道了怎么求前缀和后，求区间就很简单了，只需要将两个前缀和相减，即：\n\n例如求区间和，过程如下图：\n\n代码如下：\njava// Java\npublic int getPrefixSum(int i) {\n      int sum = 0;\n      while(i &gt; 0) {\n          sum += a[i];\n          i -= lowbit(i);\n    }\n      return sum;\n}\n\npublic int getSum(int l, int r) {\n      return getPrefixSum(r) - getPrefixSum(l - 1);\n}\n\n区间修改 &amp; 单点查询区间修改代码如下：\njava// Java\n\n单点查询代码如下：\njava// Java\n\n区间修改 &amp; 区间查询区间修改代码如下：\njava// Java\n\n区间查询代码如下：\njava// Java\n\n练习题\nLuoguP3374【模板】树状数组 1(单点修改 &amp; 区间查询)\nLuoguP3368【模板】树状数组 2(区间修改 &amp; 单点查询)\n\n参考\nhttps://www.bilibili.com/video/BV1pE41197Qj\nhttps://oi-wiki.org/ds/fenwick/\nhttps://www.topcoder.com/thrive/articles/Binary%20Indexed%20Trees\n\n","slug":"data-structure/binary-indexed-tree","date":"2022-02-17T10:00:41.000Z","categories_index":"数据结构","tags_index":"树状数组,数据结构","author_index":"Joshlee"},{"id":"b6831801f35d47f9ac7cc7cf693ccf65","title":"CSS 常用属性总结","content":"\n\n\n\n\n\n\n\n\n下表为平时常用的 CSS 属性\n\n\n\n属性\n描述\n可选值\n\n\n\ncolor\n元素颜色，一般用于设置字体颜色\n\n\n\nbackground-color\n背景颜色\n\n\n\nbackground-image\n设置背景图片\n\n\n\ndisplay\n元素的显示类型\n&#123;block, inline-block, inline, none, flex ...&#125;\n\n\nwidth\n元素的宽度\n\n\n\nheight\n元素的高度\n\n\n\nmin-width\n最小宽度\n\n\n\nmin-height\n最小高度\n\n\n\nmax-width\n最大宽度\n\n\n\nmax-height\n最大高度\n\n\n\nmargin\n外边距\n\n\n\npadding\n内边距\n\n\n\nborder\n边界属性\n\n\n\nborder-color\n边框颜色\n\n\n\nborder-width\n盒子模型的边框宽度\n\n\n\nborder-style\n边框样式\n&#123;none, solid, dotted, inset, dashed solid ...&#125;\n\n\nborder-radius\n外边框圆角\n\n\n\nfont\n字体属性\n\n\n\nfont-family\n定义字体\n\n\n\nfont-style\n字体样式\n&#123;normal, italic, oblique&#125;\n\n\nfont-weight\n字体厚度（用于加粗）\n&#123;normal, bold, lighter, bolder&#125;\n\n\nposition\n用于元素的定位\n&#123;static, relative, absolute, fixed, sticky&#125;\n\n\nz-index\n设置重叠元素的顺序\n&#123;auto, -1, 0, 1, 2, 3 ...&#125;\n\n\noverflow\n元素内容溢出属性\n&#123;visible, hidden, scroll, auto ...&#125;\n\n\ncursor\n指定当鼠标指向元素时，展示不同的游标\n&#123;default, pointer, wait, help, progress, not-allowed ...&#125;\n\n\nopactity\n元素的不透明度、透明度\n0.0-1.0\n\n\n","slug":"frontend/CSS 常用代码总结","date":"2022-02-13T05:50:41.000Z","categories_index":"前端","tags_index":"前端,CSS","author_index":"Joshlee"},{"id":"62bc8025e0eb197d420ffa98bc79c161","title":"git 常用命令","content":"仓库shell# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name &quot;[name]&quot;\n$ git config [--global] user.email &quot;[email address]&quot;\n\n增加/删除文件shell# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n\n代码提交shell# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n\n分支shell# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n\n标签shell# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n\n查看信息shell# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n\n远程同步shell# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n撤销shell# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n\n其他shell# 生成一个可供发布的压缩包\n$ git archive\n","slug":"tools/git常用命令","date":"2022-01-28T17:00:41.000Z","categories_index":"常用工具","tags_index":"git,汇总","author_index":"Joshlee"},{"id":"0b9c5318228023fdd1e179358a45ba07","title":"图","content":"\n\n图的基本概念\n\n\n\n\n\n\n\n\n图是一种复杂的非线性结构。在线性结构中，数据元素之间满足唯一的线性关系，每个数据元素（除第一个和最后一个）只有一个直接前趋和一个直接后继；在树形结构中，数据元素之间有明显的层次关系，并且每个数据元素只与上一层中的一个元素（parent node）及下一层的多个元素（child node）相关；而在图形结构中，节点之间的关系是任意的，图中任意两个数据元素之间都有可能相关。\n图的定义图G由两个集合V(顶点Vertex)和E(边Edge)组成，定义为G=(V, E),其中V(G)表示图G中顶点的有限非空集；E(G)表示图G中顶点之间的关系（边）集合。若，则用 |V| 表示图G中顶点的个数，也称图G的阶, , 用 |E| 表示图G中边的条数。\n无向图(undirected graph)若E是无向边(简称边)的有限集合时，则图G为无向图。边是顶点无序对，记成（v, w）或 (w, v), 因为**(v, w) = (w, v), 其中v, w是顶点。可以说顶点w和顶点v互为邻接点**。边（v，w）依附于顶点w和v，或者说边（v，w）和顶点v、w相关联。\n有向图(directed graph)若E是有向边(也称弧)的有限集合时，则图G为有向图(digraph)。弧是顶点的有序对，记为，其中v、w是顶点，v称为弧尾，w称为弧头，&lt;v, w&gt;称为从顶点v到顶点w的弧，也称v邻接到w，或w邻接自v。\n顶点的度、入度、出度无向图顶点v的度是指依附于该顶点的边的条数，记为在具有n个顶点、e条边的无向图中，即无向图的全部顶点的度的和等于边数的2倍\n有向图入度(in-degree) 是以顶点v为终点的有向边的数目。记为出度(out-degree)是以顶点v为起点的有向边的数目, 记为顶点v的度等于其入度和出度之和, 即在具有n个顶点、e条边的有向图中，\n顶点-顶点的关系描述\n路径: 顶点到顶点之间的一条路径是指顶点序列，\n回路: 第一个顶点和最后一个顶点相同的路径称为回路或环\n简单路径: 在路径序列中, 顶点不重复出现的路径称为简单路径\n简单回路: 除第一个顶点和最后一个顶点外, 其余顶点不重复出现的回路称为简单回路\n路径长度: 路径上边的数目\n点到点的距离: 从顶点u出发到顶点v的最短路径若存在, 则此路径的长度称为从u到v的距离。若u到v根本不存在路径，则记该距离为无穷（∞）。\n无向图中, 若从顶点v到顶点w有路径存在, 则称v和w是连通的\n有向图中, 若从顶点v到顶点w和从顶点w到顶点v之间都有路径, 则称这两个顶点是强连通的连通图若图G中任意两个顶点都是连通的, 则称图G为连通图, 否则称为非连通图对于n个顶点的无向图G若G是连通图, 则最少有n-1条边若G是非连通图, 则最多可能有条边强连通图若图中任何一对顶点都是强连通的, 则称此图为强连通图对于n个顶点的有向图G, 若G是强连通图, 则最少有n条边(形成回路)图的局部子图设两个图和, 若是的子集, 且是的子集, 则称是的子图若有满足的子图, 则称其为的生成子图连通分量无向图中的极大连通子图称为连通分量。\n\n极大连通子图: 子图必须连通, 且包含尽可能多的顶点和边\n强连通分量有向图中的极大强连通子图称为有向图的强连通分量极大强连通子图: 子图必须强连通, 且保留尽可能多的边\n生成树连通图的生成树是包含图中全部顶点的一个极小连通子图(边尽可能的少, 但要保持连通)若图中顶点数为n, 则它的生成树含有n-1条边。对生成树而言，若砍去它的一条边，则会变成非连通图，若加上一条边则会形成一个回路 \n生成森林在非连通图中, 连通分量的生成树构成了非连通图的生成森林\n边的权、带全图/网边的权: 在一个图中, 每条边有可以表上具有某种含义的数值, 该数值称为该边的权值带权图/网: 边上带有权值的图称为带权图, 也称网带权路径长度: 当图是带权图时, 一条路径上所有边的权值之和, 称为该路径的带权路径长度\n特殊形态的图无向完全图无向完全图: 无向图中任意两个顶点之间都存在边若无向图的顶点树为, 则\n有向完全图有向完全图: 有向图中任意两个顶点之间都存在方向相反的两条弧若有向图的顶点数，则\n稀疏图边数很少的图称为稀疏图(没有绝对的界限, 一般来说)时, 可以将G视为稀疏图\n稠密图稀疏图反之对应的是稠密图\n树树: 不存在回路, 且连通的无向图n个顶点的树, 必有n-1条边 ** =&gt;**  n个顶点的图, 若, 则一定有回路\n有向树有向树: 一个顶点的入度为0、其余顶点的入度均为1的有向图，称为有向树\n常见考点对于n个顶点的无向图G,\n\n所有顶点的度之和=2|E|\n若G是连通图, 则最少有n-1条边(树), 若 |E| &gt; n-1, 则一定有回路\n若G是非连通图, 则最多可能有条边\n无向完全图共有条边\n\n对于n个顶点的有向图G,\n\n所有顶点的出度之和=入度之和=|E|\n所有顶点的度之和=2|E|\n若G是强连通图, 则最少有n条边(形成回路)\n有向完全图共有条边\n\n图的存储\n\n\n\n邻接矩阵\n邻接表\n十字链表\n邻接多重表\n\n\n\n空间复杂度\nO(\nV\n²)\n无向图O(\n\n\n有向图O(\nV\n+\nE\n)\n\n\n找相邻边\n遍历对应行或列\n\n\n\n\n\n时间复杂度为O(\nV\n)\n找有向图的入边必须遍历整个邻接表\n很方便\n\n\n删除边或顶点\n删除边很方便, 删除顶点需要大量移动数据\n无向图中删除边或顶点都不方便\n很方便\n很方便\n\n\n适用于\n稠密图\n稀疏图和其他\n只能存有向图\n只能存无向图\n\n\n表示方式\n唯一\n不唯一\n不唯一\n不唯一\n\n\n邻接矩阵结点数为n的图的邻接矩阵A是的. 将G的顶点编号为, 则若或是中的边若或不是中的边\n性质设图G的邻接矩阵为(矩阵元素为0/1), 则的元素等于由顶点 i 到顶点 j 的长度为 n 的路径的数目\n顶点的度、出度、入度无向图:\n\n第i个结点的度=第i行(或第i列)的非零元素个数\n\n有向图:\n\n第i个结点的出度 = 第i行的非零元素个数\n第i个结点的入度 = 第i列的非零元素个数\n第i个结点的度 = 第i行、第i列的非零元素个数之和\n\n邻接矩阵法求顶点的度、出度、入度的时间复杂度为\n性能空间复杂度:  只和顶点数相关, 和实际边数无关适合用于存储稠密图无向图的邻接矩阵是对称矩阵, 可以压缩存储(只存储上三角区或下三角区)\n压缩存储策略: 只存储主对角线+下三角区。按行优先原则将各元素存入一维数组中。\n对称矩阵的性质矩阵下标一维数组下标下三角区和主对角线元素上三角区元素\n代码实现javaimport lombok.Data;\n\nimport java.util.*;\n\n@Data\npublic class Graph&lt;T extends Comparable&lt;T&gt;&gt; {\n\n    /**\n     * storage vertex\n     */\n    private List&lt;T&gt; vertexList;\n\n    /**\n     * storage adjacency matrix of the graph\n     */\n    private int[][] edges;\n\n    /**\n     * denotes the number of edges\n     */\n    private int numOfEdges;\n\n\n    public Graph(int n) {\n        edges = new int[n][n];\n        vertexList = new ArrayList&lt;&gt;(n);\n        numOfEdges = 0;\n    }\n    \n    /**\n     * add vertex to vertexList\n     *\n     * @param vertex vertex of graph\n     */\n    public void insertVertex(T vertex) {\n        vertexList.add(vertex);\n    }\n\n    /**\n     * add edge\n     *\n     * @param v1     index of first vertex\n     * @param v2     index of second vertex\n     * @param weight weight value of vertex\n     */\n    public void insertEdge(int v1, int v2, int weight) {\n        edges[v1][v2] = weight;\n        edges[v2][v1] = weight;\n        numOfEdges++;\n    }\n\n    public void show() {\n        for (int[] edge : edges) {\n            System.out.println(Arrays.toString(edge));\n        }\n    }\n}\n## 邻接表法\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12654026/1630136100915-5f4d0cc8-4174-4a6d-8eb6-da046388558a.png#clientId=u6eac1fa5-0d5b-4&amp;from=paste&amp;height=216&amp;id=ue3ea6b47&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=432&amp;originWidth=1356&amp;originalType=binary&amp;ratio=1&amp;size=86580&amp;status=done&amp;style=none&amp;taskId=uee3c8b61-db9a-4388-be17-06c2550795a&amp;width=678)\n邻接表采用顺序+链式的方式存储\n\n\n\n\n\n邻接表\n邻接矩阵\n\n\n\n空间复杂度\n无向图O(\nV\n\n\n适合用于\n存储稀疏图\n存储稠密图\n\n\n表示方式\n不唯一\n唯一\n\n\n计算度/出度/入度\n计算有向图的度/入度不方便, 其余方便\n必须遍历对应行或列\n\n\n找相邻的边\n找到有向图的入边不方便, 其余方便\n必须遍历对应行或列\n\n\njava// 边/弧的结点\nclass ArcNode {\n    \n    int adjVen; // 边/弧指向哪个结点\n\n    ArcNode next; // 指向下一条弧的指针\n    \n}\n\n// 顶点\nclass VNode&lt;T&gt; {\n    \n    T data;\n    \n    ArcNode first;\n    \n}\n\n// 邻接表存储的图\nclass ALGraph&lt;T&gt; {\n    \n    Vnode&lt;T&gt;[] vertices;\n    \n    int vexNum;\n    \n    int arcNum;\n    \n}\n## 十字链表\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12654026/1630140353795-04e9ce68-ece0-4256-8f0a-18f4b172a6c6.png#clientId=u6eac1fa5-0d5b-4&amp;from=paste&amp;id=ufe9e40f9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=570&amp;originWidth=1089&amp;originalType=binary&amp;ratio=1&amp;size=120159&amp;status=done&amp;style=none&amp;taskId=uaf7fe6c9-adca-4de4-8f1f-4b5cb54ecfd)\n空间复杂度: \n如何找到指定顶点的所有**出边**? -- 顺着绿色线路找\n如何找到指定顶点的所有**入边**? -- 顺着橙色线路找\n十字链表只用于存储有向图\njavaclass ArcNode {\n    \n    // 弧尾顶点编号\n    int tailVex;\n    \n    // 弧头顶点编号\n    int headVex;\n    \n    // 权值\n    int info;\n    \n    // 弧头相同的下一条弧\n    ArcNode hLink;\n    \n    // 弧尾相同的下一条弧\n    ArcNode tlink;\n    \n}\n\nclass VexNode&lt;T&gt; {\n    \n    // 数据域\n    T data;\n    \n    // 该顶点作为弧头的第一条弧\n    ArcNode firstIn;\n    \n    // 该顶点作为弧尾的第一条弧\n    ArcNode firstOut;\n}\n## 邻接多重表\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12654026/1630150083967-56ddced6-ce66-40a5-9428-5d33a2109ff8.png#clientId=u6eac1fa5-0d5b-4&amp;from=paste&amp;height=441&amp;id=u41bbeb93&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=588&amp;originWidth=1045&amp;originalType=binary&amp;ratio=1&amp;size=87946&amp;status=done&amp;style=none&amp;taskId=uc23add5c-99a6-46eb-a935-7a17c014b04&amp;width=784)\njavaclass EdgeNode {\n    \n    // 边的两个顶点编号i, j\n    int i, j;\n    \n    // 权值\n    int info;\n    \n    // 依附于顶点i,j的下一条边\n    EdgeNode iLink, jLink;\n    \n}\n\nclass VertexNode {\n    \n    // 数据域\n    int data;\n    \n    // 与该顶点相连的第一条边\n    EdgeNode firstEdge;\n    \n}\n# 图的遍历\n## 深度优先遍历(DFS)\n深度优先搜索算法（英语：Depth-First-Search，**DFS**）是一种用于遍历或搜索树或图的算法\nDFS会尽可能深的搜索树的分支。当节点v的所在边都已被探寻过，搜索将回溯到发现节点v的那条边的起始节点。这个过程一直进行到从源节点可达的所有节点为止。如果还存在未被发现的节点，则选择其中一个源节点并重复以上过程，整个进程反复进行直到所有节点被访问为止。\n### 实现方法\n\n\n首先将根结点放入stack中\n从stack中取出第一个节点，并检验它是否为目标\n如果找到目标，则结束搜寻并回传结果\n否则将它某一个尚未检验的直接子节点加入stack中\n\n\n重复步骤2\n如果不存在未检测的直接子节点\n将上一级节点加入stack中\n重复步骤2\n\n\n若stack为空，表示整张图都检查过了代码实现javapackage com.algorithm.datastruct;\n\nimport lombok.Data;\n\nimport java.util.*;\n\n@Data\npublic class Graph&lt;T extends Comparable&lt;T&gt;&gt; {\n\n    /**\n     * storage vertex\n     */\n    private List&lt;T&gt; vertexList;\n\n    /**\n     * storage adjacency matrix of the graph\n     */\n    private int[][] edges;\n\n    /**\n     * denotes the number of edges\n     */\n    private int numOfEdges;\n\n    /**\n     * record whether a node has been accessed\n     */\n    private boolean[] isVisited;\n\n    public Graph(int n) {\n        edges = new int[n][n];\n        vertexList = new ArrayList&lt;&gt;(n);\n        numOfEdges = 0;\n    }\n\n    /**\n     * add vertex to vertexList\n     *\n     * @param vertex vertex of graph\n     */\n    public void insertVertex(T vertex) {\n        vertexList.add(vertex);\n    }\n\n    /**\n     * add edge\n     *\n     * @param v1     index of first vertex\n     * @param v2     index of second vertex\n     * @param weight weight value of vertex\n     */\n    public void insertEdge(int v1, int v2, int weight) {\n        edges[v1][v2] = weight;\n        edges[v2][v1] = weight;\n        numOfEdges++;\n    }\n\n    public void show() {\n        for (int[] edge : edges) {\n            System.out.println(Arrays.toString(edge));\n        }\n    }\n\n    public T getValueByIndex(int i) {\n        return vertexList.get(i);\n    }\n\n    public int getWeight(int v1, int v2) {\n        return edges[v1][v2];\n    }\n\n    /**\n     * get the index of first adjacency vertex\n     *\n     * @param index index to be found\n     * @return success return index, failure return -1\n     */\n    public int getFirstNeighbor(int index) {\n        for (int i = 0; i &lt; vertexList.size(); i++) {\n            if (edges[index][i] &gt; 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * get the index of next adjacency vertex by the previous adjacency vertex\n     *\n     * @param v1 x of previous adjacency vertex\n     * @param v2 y of previous adjacency vertex\n     * @return success return index, failure return -1\n     */\n    public int getNextNeighbor(int v1, int v2) {\n        for (int i = v2 + 1; i &lt; vertexList.size(); i++) {\n            if (edges[v1][i] &gt; 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    public void dfs(boolean[] isVisited, int i) {\n        System.out.print(getValueByIndex(i) + (i + 1 == vertexList.size() ? \"\" : \"-&gt;\"));\n        isVisited[i] = true;\n        int w = getFirstNeighbor(i);\n        while (w != -1) {\n            if (!isVisited[w]) {\n                dfs(isVisited, w);\n            }\n            w = getNextNeighbor(i, w);\n        }\n    }\n\n    public void dfs() {\n        isVisited = new boolean[vertexList.size()];\n        for (int i = 0; i &lt; vertexList.size(); i++) {\n            if (!isVisited[i]) {\n                dfs(isVisited, i);\n            }\n        }\n    }\n\n}\n\n## 广度优先遍历(BFS)\n广度优先搜索算法（英语：Breadth-First Search，缩写为**BFS**），又译作宽度优先搜索，或横向优先搜索，是一种图形搜索演算法。\nBFS是从根节点开始，沿着树的宽度遍历树的节点。如果所有节点均被访问，则算法中止。广度优先搜索的实现一般采用open-closed表。\n\n实现方法\n首先将根结点放入队列中\n从队列中取出第一个节点, 并检验它是否为目标\n如果找到目标, 则结束搜寻并回传结果\n否则将它所有尚未检验过的直接子节点加入队列中\n\n\n若队列为空, 表示整张图都检查过了 – 即图中没有欲搜寻的目标. 结束搜寻并返回null。\n重复步骤2代码实现javapublic void bfs(boolean[] isVisited, int i) {\n    Queue&lt;Integer&gt; queue = new ArrayDeque&lt;&gt;();\n    System.out.print(getValueByIndex(i) +  (i + 1 == vertexList.size() ? \"\" : \"=&gt;\"));\n    isVisited[i] = true;\n    queue.add(i);\n    // index of queue head node\n    int u;\n    // adjacency vertex\n    int w;\n    while (!queue.isEmpty()) {\n        u = queue.poll();\n        w = getFirstNeighbor(u);\n        while (w != -1) {\n            if (!isVisited[w]) {\n                System.out.print(getValueByIndex(w) + (w + 1 == vertexList.size() ? \"\" : \"=&gt;\"));\n                isVisited[w] = true;\n                queue.add(w);\n            }\n            w = getNextNeighbor(u, w);\n        }\n    }\n}\n\npublic void bfs() {\n    isVisited = new boolean[vertexList.size()];\n    for (int i = 0; i &lt; vertexList.size(); i++) {\n        if (!isVisited[i]) {\n            bfs(isVisited, i);\n        }\n    }\n}\n\n最小生成树(MST)最小生成树的概念最小生成树是一副连通加权无向图中一颗权值最小的生成树对于一个带权连通无向图, 生成树不同, 每棵树的权(即树种所有边上的权值之和)也可能不同. 设R为G的所有生成树的集合, 若T为R中边的权值之和最小的生成树, 则T称为G的最小生成树(Minimum-Spanning-Tree, MST)\n\n最小生成树可能有多个, 但边的权值之和总是唯一且最小的\n最小生成树的边数 = 顶点数 - 1。砍掉一条则不连通，增加一条边则会出现回路\n如果一个连通图本身就是一颗树，则其最小生成树就是它本身\n只有连通图才有生成树，非连通图只有生成森林\n\nPrim算法普里姆算法(Prim’s algorithm), 于1930年由捷克数学家沃伊捷赫·亚尔尼克发现；并在1957年由美国计算机科学家罗伯特·普里姆独立发现；1959年，艾兹格·迪科斯彻再次发现了该算法算法描述: 从某一顶点开始构建生成树; 每次将代价(权值)最小的新顶点纳入生成树, 直到所有顶点都纳入为止时间复杂度: 适合用于边稠密图Prim算法可视化(即时实现)​\nKruskal算法Kruskal算法是一种用来查找最小生成树的算法, 由Joseph Kruskal在1956年发表算法描述: 每次选择一条权值最小的边, 使这条边的两头连通(原来已经连通的就不选), 直到所有结点都连通时间复杂度: 适合用于边稀疏图\n最短路径问题BFS算法Dijkstra算法Dijkstra（/ˈdikstrɑ/或/ˈdɛikstrɑ/）算法由荷兰计算机科学家 E. W. Dijkstra 于 1956 年发现，1959 年公开发表。是一种求解 非负权图 上单源最短路径的算法。\n流程将结点分为两个集合：已确定最短路长度的点集（记为集合）和未确定最短路长度的点集（记为集合）。一开始所有的点都属于集合。初始化，其他的均为。然后重复这些操作：\n\n从集合中，选取一个最短路长度最小的结点，移到集合中。\n对那些刚刚被加入集合的结点的所有出边执行松弛操作。\n\n直到T集合为空，算法结束。\n时间复杂度\n暴力：\n二叉堆：\n优先队列：\nFibonacci堆：\n线段树：代码实现\n\nFloyd算法有向无环图描述表达式拓扑排序关键路径","slug":"data-structure/graph","date":"2022-01-12T11:37:25.000Z","categories_index":"数据结构","tags_index":"图论,考研","author_index":"Joshlee"},{"id":"10e799bf47669bd7fff35712248e1c6e","title":"2021年度总结","content":"\n\n前言写下此文的时候，2021已接近尾声，2022的钟声即将敲响，一年了，发生了什么呢，我又做成了什么呢…\n月度\n1月：创业园的师兄接到了个项目给我们做，起初这个项目叫维修小店，也就是做一个维修平台的小程序，于是学习了uni-app。\n2月：根据产品原型图写前端…\n3月：继续维修宝的前端；蓝桥杯选拔赛垫底orz\n4月：维修小店开发\n5月：维修小店改名为《维修宝》，这个月没少熬夜/通宵肝进度；学会了使用UniCloud实现微信支付/授权认证/…；在月末开始刷LeetCode了。\n6月：我干了什么..?\n7月：月初领到了《维修宝》杯水车薪工资，终于要结束了；月中学校的面向对象实训课，用Java网络编程的知识做了个基于TCP协议的聊天室；月末得知《维修宝》要大改，于是又开始了。\n8月：终于把王道考研的数据结构都过了遍，但有些还是一知半解；迭代《维修宝》。\n9月：LeetCode AC了100道题。\n10月：开始刷洛谷的题了，刷题、学习算法，一直循环\n11月：洛谷AC了100道题、AC了一道紫题、拿到了绿名；蓝桥的培训选拔赛，100个人参加，以第8名的成绩成功入围\n12月：蓝桥选拔赛以第11名的成绩成功获得公费资格；算法大赛校赛三等奖；月中师兄来了个项目，做跨境电商的；“传智杯”拿了个B组区域赛二等奖\n\n年度\n《维修宝》小程序项目\nUNI-APP\n微信的各种业务\n云开发\nVUE\nelement-ui\n\n\nLeetCode+洛谷 刷了200+道题\n算法大赛校赛三等奖\n“传智杯”B组程序设计大赛区域赛二等奖\n\n2022 TODO\n为上岸深圳技术大学做准备！！！\n尽快搞定跨境电商项目\n备赛3月WEB技能大赛\n备赛3月的蓝桥杯\n学习汇编\n学习408\n完成处心：Java后端\n减肥ww\n阿里云ACP认证\n\n平台出勤Gitee\nLeetCode\n洛谷\n\n","slug":"life/2021年度总结","date":"2021-12-31T12:25:41.000Z","categories_index":"生活","tags_index":"人生,2021,总结","author_index":"Joshlee"},{"id":"3f945107ce99195b9c8dafd2737a8d45","title":"How to Using FiddlerEverywhere","content":"\n\nFiddler EveryWhere 环境安装1. 安装Fiddler 功能强大，同时占用空间小，能记录所有的客户端和服务器端的 http 和https 请求，方便测试人员进行接口测试。官方下载地址：https://www.telerik.com/fiddler/fiddler-everywhere由于笔者使用的是Mac OS，而经典版的只支持Windows，所以我们这里下载最新版的Fiddler EveryWhere，安装步骤如下：\n\n打开下载好的Flddler Everywhere.dmg, 弹出如下界面，点击Agree同意\n\n\n图1 同意许可证协议\n\n\n将左侧Fiddler的LOGO拖拽到右侧的Applications文件夹即可完成安装\n\n\n图2 拖拽到Applications完成安装\n\n\n软件安装过程非常简单，读者可自行完成安装。笔者安装的 Fiddler Everywhere 为 3.0.1 版。安装完成后，启动 Fiddler Everywhere，出现如下图的欢迎界面（需要注册并登陆）。意思是你可以有三种方法去使用Fiddler：\n\n\nSystem Traffic Capturing（系统流量捕捉）\nPreconfigured Browser Capturing（预先配置的浏览器捕捉）\nDebug mobile devices（调试手机设备）\n\n\n图3 欢迎界面\n\n2. 使用程序界面如下图所示：图4 Fidder Everywhere界面示意图\n\n工具条：即选项卡，可以选择实时流量抓取区（Live Traffic）和对接口进行测试（Composer），Fiddler Everywhere 的 Composer 比较类似 Postman ，接口测试起来非常方便\n会话区：Fiddler Everywhere 捕获的流量会实时呈现在这里\n请求存储区：用于存储接口\n\n目前许多网站都会采用https 协议来进行传输，相比于 http 协议，主要是增加了传输加密和安全认证等功能，从而提高了传输的安全性。但需要注意的是，Fiddler 刚安装完成是并不能显示 https 协议的会话，需要进行相应的设置，并进行证书安装。Mac下操作步骤如下：\n\n进入设置\n\n图5 进入设置\n\nTrust root certificate，信任根证书，并勾选Capture HTTPS traffic和Ignore server certificate errors(unsafe)即可，如下图所示：\n\n图6 设置\n\n\n\n\n\n\n\n\n\n为什么要先学fiddler？学习接口测试必学http协议，如果直接先讲协议，为了更好的理解协议，先从抓包开始。结合抓包工具讲http协议更容易学一些。为什么使用Fiddler Everywhere而不是经典版的Fiddler？Fiddler Everywhere是一款跨平台（Windows、Mac、Linux）的Web调试代理工具，本文将用Mac系统进行演示\nFiddler Everywhere 的使用1. 证书问题为什么需要证书？先说结论：捕获HTTPS必须要导入Fiddler的证书。知道什么是证书之前需要了解下 “非对称加密”\n\n对称加密：客户端和服务器用一个秘钥加密和解密。对称加密效率高\n非对称加密：将公钥公布于众，客户端拿公钥加密，服务器拿自己的私钥解密，这样即使数据被截获，别人也解密不出明文内容。效率低。\n\n非对称加密有两个秘钥，公钥和私钥，而这两个秘钥只要用一个加密，另一个就能解密，我们正常加密数据用公钥加密，用私钥解密而我们还有一种用法就是服务器发数据用私钥加密，客户端用公钥解密，那么客户如果用公钥正确解密出数据，那么就证明这个数据一定是服务器发的，因为私钥只有它知道，这个过程我们一般不叫加密，叫签名，也就是服务器对数据签个名，代表这个确确实实是它发的。其实我们正常情况下因为对称加密效率虽高，但是不安全，因为它告诉对方秘钥的时候这个秘钥容易被截获，但是我们如果用非对称加密，安全是安全，效率又太低，所以一般采用对称加密来加密数据，非对称加密配送对称加密的秘钥。因为公钥是在网络上进行传输的，那么假如遭遇了如下图所示的中间人攻击，那么A的私钥就可能是伪造的。那么如何验证公钥的合法性呢？——证书\n什么是证书？证书就是由认证机构，采用它们自己的私钥，对发送方的公钥和发送方的信息进行数字加密。各大CA（认证机构）的证书已经默认被添加到了浏览器和操作系统中。服务器生成自己的密匙对——公钥和私钥服务器在认证机构注册自己的公钥认证机构（CA）用自己机构的私钥对，服务器的公钥进行数字签名并生成证书（里面带了这个签名过得公钥和服务器一些信息）认证机构把证书给客户端客户端用认证机构的公钥验证数字签名认证成功后用里面带的服务器的公钥加密并发消息给服务器服务器用自己的私钥解密这样一来就可以解决数据传输的安全问题了问题：\n\n如果黑客在服务器在认证机构注册公钥的时候截取数据呢？\n\n这个完全不用担心，CA证书的申请，流程很多，而且较为严格，比如准备很多文件，再比如CA那边如果通过后还会要申请方这边的管理员验证之类的。\n\n认证机构的公钥咋传输的？如果黑客改了呢？  如果改了那么这个证书就不会验证成功，其实各大CA的公钥已经在系统和浏览器中内置了。看下边的例子：\n\n百度的证书信息：系统自带的CA证书：\n抓包工具为什么需要导入证书？1.客户端发一个HTTPS请求，被Fiddler拦截并且Fiddler伪装成客户端发请求给服务器\n\n服务器向假装成客户端的FIddler返回了CA证书\n自己制作了一张证书，假装服务器给客户端发了自己做的证书。获取服务器的公钥\n客户端生成对称秘钥，并用Fiddler假冒的公钥加密发送\nFiddler用自己的私钥解密获取对称秘钥\n……这样的话Fiddler能完全获取解析到双方加密的数据。实验证明：当我们正常访问百度，查看证书：开启Fiddler后，我们再访问百度：\n\n安装根证书\n点击Trust root certificate （Mac会需要输入系统密码）\n勾选Capture HTTPS traffic\nSave保存即可安装成功，就可以开始抓HTTPS啦（可能需要重启Fiddler Everywhere）\n\n\n删除证书如果之前装过一些fiddler证书，安装的姿势不对，导致新的证书不起作用，这时候需要先删掉之前的证书了\n\n在启动台（Launchpad）的其他中找到钥匙串（Keychain Access），或者在聚焦搜索(spotlight search)中搜钥匙串(Keychain Access)也可以找到。\n\n\n\n我们可以在Default keychains -&gt; login -&gt; Certificerts 中可以找到Fiddler的根证书DO_NOT_TRUST_FiddlerRoot，右键即可删除。\n\n\n2. 手机APP抓包前言fiddler在抓手机app的请求时候，通常也会抓到来自PC的请求，导致会话消息太多，那么如何把来自pc的请求过滤掉，只抓来自APP的请求呢？必备环境：1.电脑上已装fiddler2.手机和电脑在同一局域网\n设置\nFiddler Everywhere -&gt; Settings -&gt; Connections，勾选Allow remote computers to connect\n8866端口为Fiddler的监听端口，后续手机中会用到。我这里的端口默认是8866，具体的端口号按实际情况来。\n\n\n查看本机IP打开终端（Terminal），输入ifconfig（Windows下为ipconfig），找到IP，如下图：\n手机设置代理\n手机设置-&gt;WLAN设置-&gt;选择该wifi，点右边的箭头（有的手机是长按弹出选项框）。\n将代理换为手动进行配置：\n配置主机名：与主机IP保持一致\n端口：8866（Fiddler的监听端口）\n\n\n保存后即可抓取手机上的请求了\n\n\n抓取HTTPS请求\n如果app都是http请求，是不需要安装证书，能直接抓到的，如果是https请求，这时候手机就需要下载证书了\n打开手机浏览器输入地址：[主机IP]:[Fiddler端口]，比如我这里是172.20.249.225:8866\n出现如下画面，点箭头所指的位置，点击安装就可以了。\n不同手机安装证书方法可能会有所差异\n\n\n3. 查看GET和POST请求前言前面讲了关于Fiddler Everywhere抓包的一些基本配置，配置完之后就可以抓到我们想要的数据了，接下来就是如何去分析这些数据。本篇以洛谷的请求为例，简单分析get与post数据有何不一样，以后也能分辨出哪些是get，哪些是post了。\nGET请求\n打开Fiddler Everywhere，然后浏览器输入洛谷首页地址：https://www.luogu.com.cn/\n点开右侧Inspectors下的Headers区域，查看Request Headers\nRequest Headers区域里面的就是请求头信息，可以看到打开洛谷首页的是get请求\n\n\nPOST请求\n打开登录首页：https://www.luogu.com.cn/auth/login\n输入账号和密码点击登录后，查看箭头所指的地方，可以看出是post请求\n\n\n如何找出需要的请求\n点开漏斗（Advanced Filters）\n\n\n\n比如我们要只抓洛谷的请求，那我们可以设置条件：url contains luogu.com.cn，如下图：\n\n\n\nAPPLY后即可只抓取洛谷的请求了\n\nGET和POST请求的区别\n关于get和post的功能上区别就不说了，大家自己查资料，这里主要从fiddler抓包的层面查看请求参数上的区别\nget请求的Raw参数查看，主要分三部分：\n\n\n第1部分是请求url地址\n第2部分是host地址\n第3部分是请求头部信息header\n\n\n再查看博客登录请求的Raw信息，post的信息分四部分。–前面3块内容都一样，第3部分和第4部分中间会空一行–第4部分内容就是post请求的请求body（get请求是没body的）\n\n\n4. 工具介绍本篇简单的介绍下fiddler界面的几块区域，以及各自区域到底是干什么用的，以便于更好的掌握这个工具\n会话框会话框主要查看请求的一些请求的一些基本信息，如# 、URL、HTTP Version、Result、Method、Process、Remote IP、Body Size、Comments，具体如下表：\n\n\n\n字段\n说明\n\n\n\n#\n这一栏是代表这个请求大概是什么内容\n\n\nURL\n请求的路径\n\n\nHTTP Version\nHTTP的版本，如HTTP/1.1\n\n\nResult\nHTTP状态码，如200(成功)、3xx（重定向相关）、4xx（找不到资源，一般是请求地址有问题）、5xx（一般是服务器本身的错误）\n\n\nMethod\n请求方法，如：GET、POST、HEAD、OPTIONS、PUT、PATCH、DELETE、CONNECT\n\n\nProcess\n进程\n\n\nRemote IP\n远程IP\n\n\nBody Size\n请求产生的数据大小\n\n\nComments\n类似于备注，可以右键一个请求进行Comment\n\n\nRequest和Response\n\nRequest是客户端发出去的数据，Response是服务端返回过来的数据，这两块区域功能差不多\nheaders:请求头，这里包含client、cookies、transport等\nParams：请求时所带的参数\ncookies:查看cookie详情\nraw:查看一个完整请求的内容，可以直接复制\nbody：经过格式化后的主体\n\ndecode解码Fiddler Everywhere 会自动进行解码，无需再手动执行了\n5. 接口测试（Composer）前言Fiddler最大的优势在于抓包，我们大部分使用的功能也在抓包的功能上，fiddler做接口测试也是非常方便的。Fiddler Everywhere的Composer功能非常强大又简单易用，逐渐向Postman靠齐\nComposer简介点开右侧Composer区域，可以看到如下界面，就是测试接口的界面了\nJSON数据1.有些post的请求参数和返回参数是Json格式的，如洛谷的登录请求：https://www.luogu.com.cn/api/auth/userPassLogin2.在登录页面手动输入账号和密码，登录成功。3.找到这个登录成功的会话，查看json数据如下图：\n模拟GET请求\n在Composer区域地址栏输入博客首页：http://luogu.com.cn\n选择GET请求，点Execute执行，请求就可以发送成功啦\n请求成功下方的Response会生成会话记录，可以查看本条请求的响应详情\n\n\n模拟POST请求(实战登陆洛谷)这里的模拟POST请求我们以登陆洛谷为案例进行讲解。\n\n洛谷登陆链接：https://www.luogu.com.cn/auth/login如上图，洛谷的登陆需要输入用户名+密码+验证码才能登陆成功，从表面上来看，我们只需要两个接口就能登陆成功，一个是获取验证码的GET请求接口，一个是登陆的POST接口，先GET验证码，然后根据验证码加上我们的用户名和密码调用登陆接口进行登陆，但实际并非想象中的那么简单，以下为抓包流程：\n1. 过滤我们只需要抓取洛谷的接口，如下图，在Search栏输入洛谷的域名：luogu.com.cn，就只会抓取洛谷的请求了\n2. 抓取验证码接口在洛谷的登陆界面点击刷新验证码，抓到验证码的接口，可以在Response-&gt;Prieview中看到验证码的图像为了方便接口测试，我们右键这个验证码请求-&gt;点击Edit in Composer，如下图：可以发现接口的地址为：https://www.luogu.com.cn/api/verify/captcha?_t=1640680004860.4568。参数_t为时间，也就是距 1970 年 1 月 1 日之间的毫秒数，如下图：我们还可以将这个请求进行保存，点击EXCUTE旁边的SAVE，输入请求的名称，选择所在的文件夹，点击SAVE保存即可，如下图：\n3. 抓取登陆接口我们在洛谷输入正确的用户名、密码和验证码后点击登陆。在Fiddler中寻找刚才发送的登陆请求，由于我们已知洛谷的登陆请求为POST方法，所以可以根据Method排序去找POST请求。找到一个POST请求的Request区Body中有刚刚输入的账号/密码/验证码的信息，这个就是洛谷登陆接口了[https://www.luogu.com.cn/api/auth/userPassLogin](https://www.luogu.com.cn/api/auth/userPassLogin)，如下图：接下来我们还是跟步骤2一样存储一下这次的请求，右键登陆请求 -&gt; Edit in Composer，然后SAVE一下Request（我这边把请求名称取名为了“登陆”），现在我们左下角的的Requests区就有了两个请求：\n4. 测试登陆按照最初的想法，先调用验证码接口，查看到验证码：zn22然后使用zn22这个验证码加上我们自己的用户名密码去调用登陆接口，登陆请求的Body中有三个参数username、password、captcha分别对应着用户名、密码、验证码，这些我们根据实际情况去修改，如下图：修改完请求体后点击EXCUTE执行，响应体中给我们提示报错了，提示会话超时，请刷新页面后重试：出现这种类似的错误信息，原因一定出在请求的请求头中，服务器对请求头进行了限制，比如验证Cookies、和为了防止跨站攻击而设置的验证X-CSRF-TOKEN等，所以才会出现此类情况。接下来，分析POST登陆请求的请求头：\nHost:www.luogu.com.cn\nConnection:keep-alive\nContent-Length:82\nsec-ch-ua:\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"96\", \"Google Chrome\";v=\"96\"\nX-CSRF-TOKEN:1640768448:U3hwS2h4azHVGgygSHLD9oaY7Z+4Bf9U8VwT1rWLEYQ=\nsec-ch-ua-mobile:?0\nUser-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36\nContent-Type:application/json\nAccept:application/json, text/plain, */*\nX-Requested-With:XMLHttpRequest\nsec-ch-ua-platform:\"macOS\"\nOrigin:https://www.luogu.com.cn\nSec-Fetch-Site:same-origin\nSec-Fetch-Mode:cors\nSec-Fetch-Dest:empty\nReferer:https://www.luogu.com.cn/auth/login\nAccept-Encoding:gzip, deflate, br\nAccept-Language:en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7\nCookie:__client_id=d60b5430b77152d9bc168bca64ace8883254e127; _uid=0\n\n上述的请求头中，除了X-CSRF-TOKEN和Cookie其他都不需要变动。X-CSRF-TOKEN可以在GET https://www.luogu.com.cn/auth/login的Body中找到，如下图：而Cookes可以在Response -&gt; Cookies中找到，右键Value可以进行复制，如下图：知道了这两个是如何获取的就可以继续我们的测试登陆了，具体步骤也就变成了：\n\nGET https://www.luogu.com.cn/auth/login，获取到Cookies和X-CSRF-TOKEN，并记录下来。\n带上Cookies去GET https://www.luogu.com.cn/api/verify/captcha，记录下获取到的验证码。\nPOST https://www.luogu.com.cn/api/auth/userPassLogin：需要修改Headers中的Cookies和X-CSRF-TOKEN，请求体Body中的captcha参数更换为步骤二获取到的验证码。\n\n登陆成功如下图，就可以拿syncToken以及响应的Cookies去请求需要登陆的接口了。\nGET请求（URL详解）前言上一篇介绍了Composer的功能，可以模拟get和post请求，get请求有些是不带参数的，这种比较容易，直接放到url地址栏就行。有些get请求会带有参数，本篇详细介绍url地址格式。\nurl详解\nurl就是我们平常打开百度在地址栏输入的：https://www.baidu.com,如下图，这个是最简单的url地址，打开的是百度的主页\n再看一个稍微复杂一点的url，在百度输入框输入：洛谷\n\n\n\n查看url地址栏，对比之前的百度首页url地址，后面多了很多参数。当然最主要的参数是:wd=上海悠悠博客园（后面的一大串可以暂时忽略）\n那么问题来了，这些参数有什么作用呢？可以做个简单的对比，在地址栏分别输入：https://www.baidu.comhttps://www.baidu.com/s?wd=洛谷对比打开的页面有什么不一样，现在知道作用了吧，也就是说这个多的”/s？wd=洛谷”就是搜索的结果页面\n\nurl解析\n以https://www.baidu.com/s?wd=洛谷这个URL请求为例\n那么一个完整的url地址，基本格式：https://host:port/path?xxx=aaa&amp;ooo=bbb\n\n\nhttp/https：这个是协议类型，如图中所示\nhost:服务器的IP地址或者域名，如图中2所示\nport:HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如：192.168.3.111:8080，这里的8080就是端口\npath:访问资源的路径,如图中3所示/s (图中3是把path和请求参数放一起了)\n？:url里面的？这个符号是个分割线，用来区分问号前面的是path，问号后面的是参数\nurl-params:问号后面的是请求参数，格式：xxx=aaa，如图4区域就是请求参数\n&amp;：多个参数用&amp;符号连接\n\nUrlEncode编码\n如果url地址的参数带有中文的，一般在url里面会是这样的，如第二点里的wd=%E6%B4%9B%E8%B0%B7。像看到%B4这种编码的就是经过url编码过的，需要解码就能看到是什么中文了\n用urlencode在线编码/解码工具，地址：https://www.urldecoder.org/\n\n\n请求参数（params）\n在url里面请求参数一般叫params，每个参数对应的都有name和value值\n多个参数情况如下：\n\n\nPOST请求（body）前言上一篇讲过get请求的参数都在url里，post的请求相对于get请求多了个body部分，本篇就详细讲解下body部分参数的几种形式。注意：post请求的参数可以放在url，也可以放在body，也可以同时放在url和body，当然post请求也可以不带参数。只是一般来说，post请求的参数习惯放到body部分\nbody数据类型常见的post提交数据类型有四种：\n\n第一种：application/json：这是最常见的json格式，也是非常友好的深受小伙伴喜欢的一种，比如：\n\n{“input1”:”xxx”,”input2”:”ooo”,”remember”:false}\n\n\n第二种：application/x-www-form-urlencoded：浏览器的原生 form 表单，如果不设置 enctype 属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数\n\ninput1=xxx&amp;input2=ooo&amp;remember=false\n\n\n第三种：multipart/form-data:这一种是表单格式的，数据类型如下：\n\nWebKitFormBoundaryrGKCBY7qhFd3TrwA \nContent-Disposition: form-data; \nname=”file”; \nfilename=”chrome.png” \nContent-Type: image/png PNG\ncontent of chrome.png \nWebKitFormBoundaryrGKCBY7qhFd3TrwA\n\n\n第四种：text/xml:这种直接传的xml格式\n\n&lt;!--?xml version=\"1.0\"?--&gt;\n&lt;methodcall&gt;\n\t&lt;methodname&gt;examples.getStateName&lt;/methodname&gt;\n\t&lt;params&gt;\n\t\t&lt;param&gt;\n\t\t\t&lt;value&gt;&lt;i4&gt;41&lt;/i4&gt;&lt;/value&gt;\n\t\t&lt;/param&gt;\n\t&lt;/params&gt;\n&lt;/methodcall&gt;\n\nx-www-form-urlencoded浏览器的原生  表单，如果不设置 enctype 属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。请求类似于下面这样（无关的请求头在本文中都省略掉了）：\nPOST http://www.example.com HTTP/1.1\nContent-Type: application/x-www-form-urlencoded;charset=utf-8\n\ntitle=test&amp;sub%5B%5D=1&amp;sub%5B%5D=2&amp;sub%5B%5D=3\n\n首先，Content-Type 被指定为 application/x-www-form-urlencoded；其次，提交的数据按照 key1=val1&amp;key2=val2 的方式进行编码，key 和 val 都进行了 URL 转码。大部分服务端语言都对这种方式有很好的支持。例如 PHP 中，可以获取到的值，_POST[‘sub’] 可以得到 sub 数组。很多时候，我们用 Ajax 提交数据时，也是使用这种方式。例如 JQuery 和 QWrap 的 Ajax，Content-Type 默认值都是「application/x-www-form-urlencoded;charset=utf-8」。\n6. HTTP协议简介什么是HTTP1.HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。2.HTTP（HyperText Transfer Protocol）协议是基于TCP的应用层协议，它不关心数据传输的细节，主要是用来规定客户端和服务端的数据传输格式，最初是用来向客户端传输HTML页面的内容。默认端口是803.http（超文本传输协议）是一个基于请求与响应模式的、无状态的、应用层的协议\n\n请求报文1.HTTP请求报文主要由请求行、请求头部、空一行、请求正文4部分组成（当然，如果不算空的一行，那就是3个部分）\n\n2.下图是fiddler工具抓的post请求报文（工具使用看fiddler篇），可以对照上图，更清楚的理解http的请求报文内容。\n\n响应报文1.HTTP响应报文主要由状态行、消息报头、空一行、响应正文4部分组成（当然，如果不算空的一行，那就是3个部分）2.下图就是一个请求的响应内容，用fiddler抓包工具可以查看\n完整的HTTP内容\n一个完整的http协议其实就两块内容，一个是发的请求，一个服务端给的响应。\n以下是请求https://github.com/timeline.json 这个地址后，用fiddler抓包导出为文本，查看完整的http请求内容。（具体操作查看《fiddler 1.10会话保存》）\n\n内容如下：以下是请求报文\nGET https://github.com/timeline.json HTTP/1.1\nHost: github.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\nCookie: xxx(已省略)\n\n以下是请求报文\nGET https://github.com/timeline.json HTTP/1.1\nHost: github.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\nCookie: xxx(已省略)\nX-Request-Id: d09e199dc290c6f0dc79fe49007069ab\nX-Runtime: 0.004161\nContent-Security-Policy: xxx(已省略)\nStrict-Transport-Security: xxx(已省略)\nX-Content-Type-Options: nosniff\nX-Frame-Options: deny\nX-XSS-Protection: 1; mode=block\nX-Runtime-rack: 0.007388\nX-GitHub-Request-Id: FE36:2B0A9:177175F:23C092D:594FD998\nContent-Length: 379\n\n以下是响应正文（json格式）\n{“message”:”Hello there, wayfaring stranger. If you’re reading this then you probably didn’t see our blog post a couple of years back announcing that this API would go away: http://git.io/17AROg Fear not, you should be able to get what you need from the shiny new Events API instead.”,”documentation_url”:”https://developer.github.com/v3/activity/events/#list-public-events”}\n\n请求行8种请求行请求行有三个主要参数：请求方法、url、协议版本。\n请求方法请求方式简介get请求指定的页面信息，并返回实体主体。post向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。HEAD类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头OPTIONS返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向web服务器发送‘*’的请求来测试服务器的功能性PUT向指定资源位置上传其最新内容DELETE请求服务器删除Request-URL所标识的资源TRACE回显服务器收到的请求，主要用于测试或诊断CONNECTHTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。\n\n注意：1）方法名称是区分大小写的。2）最常见的的就是通常说的get和post方法。\n\nurl详解1.打开百度，在搜索框输入任意文字，搜索后，复制地址栏的url地址：\nhttps://www.baidu.com/s?wd=%E4%B8%8A%E6%B5%B7%E6%82%A0%E6%82%A0%E5%8D%9A%E5%AE%A2&amp;rsv_spt=1&amp;rsv_iqid=0x91baaabd00070ba2&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2\n\n2.那么一个完整的url地址，基本格式如下：\nhttps://host:port/path?xxx=aaa&amp;ooo=bbb\n\n\nhttp/https：这个是协议类型，如图中1所示\nhost:服务器的IP地址或者域名，如图中2所示\nport:HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如：192.168.3.111:8080，这里的8080就是端口\npath:访问资源的路径,如图中3所示/s (图中3是把path和请求参数放一起了)\n？:url里面的？这个符号是个分割线，用来区分问号前面的是path，问号后面的是参数\nurl-params:问号后面的是请求参数，格式：xxx=aaa，如图4区域就是请求参数\n&amp;：多个参数用&amp;符号连接\n\n协议版本根据HTTP标准，HTTP请求可以使用多种请求方法。HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。\n","slug":"testing/Fiddler Everywhere抓包","date":"2021-12-30T02:43:04.000Z","categories_index":"测试","tags_index":"软件测试","author_index":"Joshlee"},{"id":"2cc8b90b0dba95b11728dd29144d57a6","title":"《软件开发工具》","content":"\n\n第1章 绪论软件产品的质量、效率、价格已成为各方关注的十分重要的问题。\n1.1 软件开发工具的由来\n操作系统、汇编程序、汇编系统时软件开发中必不可少的工具，但一般不把他们归入软件开发工具的范围，类似的还有磁盘的处理、病毒的防治、系统的备份等。\n\n软件开发工具的范围（概念）：在高级程序设计语言（第三代语言）的基础上，为提高软件开发的质量和效率，从规划、分析、设计、测试、文档和管理等方面，对软件开发者提供各种不同程度的帮助的一类新型的软件\n\n第一代计算机语言（机器语言）：由0和1组成的字符串\n\n第二代计算机语言（汇编语言）：针对难记忆、无意义的二进制字符串，人们试图用英语中具有一定意义的单词（或单词的缩写）来代替它，这就是 “助记忆码”或汇编码,用汇编编写的程序叫汇编程序，而把这些汇编程序转换成机器指令的程序则称为汇编系统（Assembler）。至今，汇编语言还是计算机专业人员必须学习的基本知识之一。\n\n操作系统差不多与汇编语言同时出现（20世纪50年代末60年代初）：\n\n操作系统的出现改善了人们应用计算机的条件。操作系统利用计算机本身能迅速处理信息的优势\n\n\n\n自动地完成系统初始化、文件管理、内存管理、作业管理、处理机管理等一系列工作\n这改善了计算机的使用环境，也同样对计算机应用的前进发挥了十分重要的作用\n\n\n第三代计算机语言（过程化语言）：在第三代语言的应用中，人们又发现了新的瓶颈–处理过程的描述\n\n第四代计算机语言（非过程化语言）：非过程化语言的思想是只要给机器下达做什么的命令，由机器自己去安排执行的顺序。在认识到软件工作的重要性的同时，也认识到了软件工作的困难性，这就是“软件危机”的问题\n\n硬件是计算机的躯体，软件是计算机的灵魂\n\n软件是广大使用者与计算机之间的桥梁\n\n软件是人类在各个领域中积累的知识的结晶\n\n软件是人类文明与知识得以延续的新的载体\n\n客观世界的复杂性，决定了软件本身的复杂性，人类知识的丰富多彩决定了软件的极大多样性；客观世界的动态性，决定了软件对可维护性、可重用性越来越高的要求。保证它的正确性、可靠性、如何控制软件开发工作的进度与成本，很自然地称为理论上十分重要、实际中十分迫切的课题。\n\n克服软件危机的方法(新技术)：\n\n\n结构化程序语言\n软件工程学\n面向对象的程序设计方法\n即插即用的程序设计方法（Plug and Play Programming）\n面向开源软件和互联网的程序设计\n\n\n用通用软件(如早期的WORDSTAR)帮助软件开发的主要弱点：\n\n\n有许多工作是通用软件无法完成的\n通用软件完成某些工作，只能表现出其表面的形式，而不能反映其逻辑内涵\n通用软件来帮助人们完成软件开发工作时，常常遇到难以保持一致性的困难\n\n\n\n针对以上问题，20世纪80年代以来，一些专门用于支持软件开发的软件开发工具陆续问世，从而进入专用的软件开发工具的阶段。如以下几类：\n\n\n面向特定功能模块的各种代码生成程序（包括报表生成器、菜单生成器、对话生成器等）\n综合性的第四代语言\n专用于某种文档的编写工具\n数据字典管理系统（DDMS）\n专用于画数据流程图、E-R图或程序框图的绘图软件等\n\n\n1989年，IBM公司宣布了一个名为AD/Cycle的巨大的理论框架（一体化环境开始，里程碑）\n\n\n缺点：\n\n\n拘泥于集中式的处理思路，对于新兴起的客户、服务器结构没有及时跟上\n坚持在OS/400等自己、特定的硬件平台上开发，背离了开放型的大趋势\n\n\n\n但是集成的软件开发环境的研发并没有因此停滞，例如Rational公司推出了Objectory，Rose等集成的软件开发工具\n\n21世纪以来，软件开发工具的发展也进入了新的阶段。两个鲜明的特点使软件开发工具的功能和效率提高了一个新的阶段：\n\n\n面向网络，不仅基于网络，而且用于网络。从HTML到XML，从SOAP到UDDL\n软件开发越来越需要考虑互联网上的应用，越来越注意要再网络环境下使用\n\n\n\n开源软件的兴起和运用\n开源软件开发工作效率地提供是肯定有益的\n\n\n\n1.2 软件开发工具的概念软件开发工具的概念要点:\n\n它是在**高级程序设计语言(第三代语言)**之后，软件技术进一步发展的产物\n它的目的是在人们开发软件中给予各种不同方面、不同程度的支持或帮助\n它支持软件开发的全过程，而不是仅限于编码或其他稳定的工作阶段\n\n在理解这个概念时,应同时认识软件开发工具的继承性与创新性。它的基本思想仍是致力于软件开发的高效优质\n\n硬件（Hardware）是躯体，软件（Software）是灵魂，二者缺一不可。软件一端连着计算机硬件，向硬件提供可以执行的机器指令，另一端面向用户\n软件是用户与硬件之间的桥梁\n软件实际上是人类知识与经验的结晶。所谓事先编好的指令，正是人们在实践中形成的工作规范与步骤\n当人们把程序编制出来时，已经为这些经验或理论知识找到了一种新的载体\n\n软件开发过程的实质： 知识的提炼、表述、固化\n软件开发新特点：\n\n自动化程度的提高\n这一阶段的工作明确地把需求分析和架构设计包括在软件工作的范围之内\n把软件开发工作延伸到项目及版本管理，从而超出了一次编程的局限\n在这一阶段的研究中，吸收了许多管理科学的内容与方法。在这方面卡内基·梅隆大学的软件工程研究所提出的能力成熟度模型（Capacity Morality Model-CMM）具有重要的意义\n\n总之，软件开发工具的提出与使用，是软件技术发展的一个新的阶段。\n与软件开发工具的概念术语有很多，如：\n\n第四代语言\n第四代语言系统通过某些标准处理过程的自动生成，使得用户可以只说明要求做什么，而把具体的执行步骤的安排交由软件自动处理\n\nCASE工具\n\n\nCASE工具有两种理解。一种是计算机辅助软件工程（Computer Aided Software Engineering），另一种则是计算机辅助系统工程（Computer Aided System Engineering）\n无论按哪种理解, 它的基本思想与软件开发工具是完全一致的,即应用计算机自身处理信息的巨大能力,帮助人们开发复杂的软件或应用系统\n\n可视化程序设计（Visual Programming）\n\n最终用户计算（End User Computing）\n\n组件程序设计（Component Programming）\n\n即插即用的程序设计（Plug and Play Programming）\n\n\n1.3 软件开发工具的功能与性能1. 软件开发的过程第一阶段 - 需求分析:\n软件开发工作首要的任务是根据这种初始要求形成严格的、明确的、可供实际开发使用的功能说明书。\n软件设计者需要从初始要求出发、经过大量的调查研究工作，抽象出应用领域中的实际的信息需求，设计出计算机系统内外的、合理的信息流程，并规定出软件系统的功能与性能要求。\n这些调查分析的成果集中体现在第一个重要文档–软件功能说明书\n第二阶段 - 总体设计：\n软件的结构设计、公用的数据文件或数据库的设计、各部分的连接方式及信息交换的标准\n总体设计的成果是系统的总体设计文件及各个模块的设计任务书。总体设计文件应包括结构图、模块清单、公用数据结构\n第三阶段 - 实现阶段（Coding）:程序的编写与文档的编写是两件并行的工作\n第四阶段 - 测试或调试阶段：其中包括模块的调试与整个软件的联调两个部分\n2. 软件开发工具的功能要求\n\n认识与描述客观系统： 主要用于需求分析阶段\n存储及管理开发过程中的信息\n代码的编写或生成\n文档的编制或生成\n软件项目的管理: 这方面的功能更明确地是为项目管理人员提供支持, 项目管理包括进度管理、资源与费用管理、质量管理三个基本内容\n\n\n\n3. 软件开发工具的性能对于软件开发工具来说以下五项应是特别重要的:\n\n表达能力或描述能力\n保持信息一致性的能力\n使用的方便程度\n工具的可靠程度: 即在各种各样的干扰下仍能保持正常工作,而不导致丢失或弄错信息\n 对硬件和软件环境的要求: 一般来说, 软件开发工具对环境的要求不应当超出它所支持的应用软件的环境要求, 有时甚至还应当低于应用软件的环境要求\n\n1.4 软件开发工具的类别1. 按工作阶段划分可以把软件开发工具分为三类：计划工具(出现最晚)、分析工具、设计工具(出现最早)\n各种代码生成器、一般所说的第四代语言及帮助人们进行测试的工具，都属于设计工具\n分析工具主要指用于支持需求分析的工具，如帮助人们编写数据字典的、专用的数据字典管理系统工具-FLOW，帮助人们画系统结构图或E-R图的工具等。保持信息的一致性，在这类工具中具有十分重要的地位\n计划工具则是完全为项目主管人员服务的\n2. 按集成程度划分专用的、面对某一工作阶段或某一工作任务的工具，以及集成化的、面对软件开发的全过程的工具\n集成化的软件开发工具也常常被称为软件工作环境（是指支持全过程、全阶段的软件开发工具）。\n3. 按与硬件、软件的关系划分有点软件开发工具依赖于特定的计算机或特定的软件（如某种数据库管理系统），有的则是独立于硬件与其他软件的。\n设计工具多是依赖于特定软件的\n分析工具与计划工具往往是独立于机器与软件的\n集成化的软件开发工具又常常是依赖于机器与软件的\n1.5 软件开发工具的研究与使用软件开发工具的使用者：\n\n从计算机专业出身的技术人员\n来自各个应用领域，他们出身于计算机以外的各个专业领域，如会计、金融、工程、企业管理等\n\n第2章 软件开发过程及其组织软件危机源于客观世界，大系统的复杂性，规模越来越大\n如何克服软件危机: 1. 结构化程序设计方法 2. 软件工程方法 3. 面向对象的程序设计方法 4.即插即用的程序设计方法 5.面向开源软件和互联网平台的程序设计\n两个领域的问题需要特别注意: 1.软件质量的评价与改善问题 2.项目组管理的任务与方法。这两者与软件开发工作也是有直接联系的\n2.1 软件开发的困难软件的复杂性超出了人类的处理能力\n1. 软件开发的基本问题两个转换没有顺利地通过。首先是从用户的理解到程序员的理解，其次是从程序员的理解到程序的理解\n\n\n第一个转换是用户对软件功能的理解与程序员对软件功能的理解之间的转换\n程序员必须花相当的时间尽可能地了解与熟悉应用领域, 并且正确地理解用户工作中的信息需求和信息流程\n保证这一顺利完成的手段就是利用尽可能的标准化的方法编写程序设计任务书, 用明确的语言或图形、表格，把程序要处理的信息的内容、格式、来源、去向、存储与处理清楚地表达出来，作为双方共同的理解\n\n\n第二个转换所要解决的是人和机器之间的交流与协调问题, 这个转换关键在于程序员的知识水平和实际经验\n\n2. 大型软件开发中的困难\n一致性的保持称为十分困难的问题\n\n测试的困难大大增加\n\n水波效应: 人们修改程序的某一处时, 由于没有充分考虑这一修改对相关部分带来的影响, 结果出现了新的错误\n每个程序员只了解自己的一部分, 无法全面地预测自己的任何改动对其他部分的影响, 而项目负责人也不可能深入每一个细节中, 只能采用所谓的”黑箱“检验方法。这种检验只能证明程序有错而不能证明程序无错\n\n\n工作进度难以控制\n\n单个程序员常常过低估计工作难度而拖延进度\n对整个系统进行联调, 联调后发现问题回到程序员手中的修改, 反复多少次是无法事前判断的\n\n\n文档与代码的协调十分困难\n\n我们所说的文档包括: 功能说明书、总体设计、各模块的设计任务书、每个部分的研制报告、测试报告、直到最终的验收报告和给使用者的用户手册\n\n代码与文档必须一致，否则文档不仅没有用处，反而会造成混乱\n\n版本更新带来的困难\n\n版本更新的大量工作往往在于审核与回顾，包括对代码和文档两个方面的认真检查\n\n\n3. 困难产生的原因\n这些困难来自大系统的复杂性\n许多具有主动性的个人之间的组织与协调带来大量的困难\n各个应用领域之间的差别导致困难的加重\n时间的因素，变化的因素给软件开发工作带来许多困难\n\n2.2 软件开发方法的发展大型软件开发过程的各种角色:\n\n用户\n\n\n提出需求\n验收\n使用\n需求修改\n\n\n项目负责人(或软件架构师)\n\n\n分析需求(包括设计方案的形式)\n向程序员分配任务\n验收程序员的工作成果–代码与文档\n对整个软件进行联调\n向用户交付使用\n接收与分析用户的修改要求\n向程序员布置修改任务\n验收修改成果并向用户提交新的版本或修改的结果\n\n\n程序员\n\n\n编写程序\n编写文档\n调试自己编码的程序\n向项目负责人提交工作成果\n\n\n硬件\n\n\n1. 结构化程序设计方法好的程序结构的各种看法: \n\n它能够保证程序正常地，按照功能说明书运行\n它具有灵活性，没有错误，即使有了错误也能够很快地改正\n它的文档齐全，一旦需要变更，很容易找到应当改动的地方\n它运行速度快\n它在经济上能够保证投资很快地得到回报\n\n程序的结构分解成三种基本模块（避免“水波效应”）：\n\n处理单元\n循环机制\n二分决策机制 \n\n模块的划分应当符合以下三条基本的要求:\n\n凝聚性强：模块的功能在逻辑上尽可能地单一化、明确化，最好做到一一对应\n低耦合：模块之间的联系及互相影响尽可能的少，尽量避免逻辑耦合，而仅限于数据耦合\n模块的规模应当足够小，以便使它本身的调试易于进行\n\n结构化程序设计的实施要点:\n\n限制甚至不用GOTO语句，绝对禁止超越模块边界的GOTO语句\n子程序（也叫方法或函数）尽可能做到只有一个入口和出口\n程序风格应尽量明确、清晰，包括适当增加注释\n在程序编写的同时完成有关的文档编撰，不要拖延时间\n\n结构程序设计的方法是为程序员服务的，而对于项目负责人来说，则较少涉及他所关心的问题。对于这种方法的批评意见是增大了程序工作量，增加了编程中的麻烦与繁琐的工作，并且降低了程序的运行效率。\n为了保证软件的可靠、准确与易于修改，这种代价是值得的\n2. 软件工程方法根据经典的辞书《简明不列颠百科全书》，工程指的是“应用科学知识使自然资源最佳地为人类服务的一种专门技术”。工程的观点是和近代、现代的大生产联系在一起的，它是和依靠个人技艺的手工的生产方式相对立的\n软件工程的思想和方法:\n\n把软件的质量寄托于各个程序员的技能与认真负责是不牢靠的、危险的、不现实的\n要想从根本上提高软件开发的效率和质量，就应当吸取人们在各种传统产业中的成功经验\n从组织和管理的角度加强力量\n使软件生产从程序员的个人劳动提高到有组织的、可控制的工程\n\n软件工程从传统产业中吸取的经验：\n\n它们在多年实践的基础上，对于这项工作的步骤做出了严格的规定\n顺序绝对不能颠倒\n每一个阶段都有各自的明确的任务\n在质量、表达方式等方面要有统一\n它们作为有关各方沟通与交流的手段，使参加工作的不同职务、不同角色的人们成为一个整体，共同地完成一项大的工程任务\n\nIBM提出的AD/Cycle中，对于应用软件的开发过程作了如下的划分和规定：\n第一阶段：需求分析\n第二阶段：分析与设计阶段\n第三阶段：编程阶段\n第四阶段：测试阶段\n第五阶段：使用及维护阶段\n在标准化方面（如著名的ISO 9001标准等），人们主要从2个方面去探索：\n\n表达方式的标准化\n对工作的质量及检查制定标准\n\n软件工程的思想主要集中于加强项目管理者的工作上，对于程序员关系不大，这点与结构化程序设计方法正好互相补充。\n3. 面向对象的程序设计方法面向对象的程序设计(Object Oriented Programming–OOP)\n“面向对象”（Object Oriented）这个用于有多种不同的翻译方法，如“面向客体”、“面向目标”、“物件导向”\n“Object”的由来：把信息的静态属性(数据结构)和对它的处理(功能模块)从根本上结合起来，数据库(数据结构)和功能的矛盾和冲突就迎刃而解了\n20世纪70年代，Smalltalk语言的出现 ，使人们对这种思想的作用刮目相看。这种与众不同的语言把一切事物都看做Object，仅用三个最基本的语句（new，send，get）来表明对象的生成、送出消息、得到消息，而把一切动作都作为对象接到信息的反应，通过一套巧妙的递归嵌套，可以发展出任意的、复杂的结构。当C语言接受了这种思想后，发展出C++后，面向对象的思想成为普遍的潮流 \n面向对象的程序设计的基本思想：\n\n客观世界的任何事物都是对象，它们都有一些静态属性（相当于数据结构），也都有一些相关的操作（相当于程序模块或方法）。作为一个整体，对象对外不必公开这些属性与操作。这就是所谓的“封装性”（Encapsulation）\n对象之间有抽象与具体\n抽象的、较大的对象所具有的性质，包括静态属性和动态操作，自然地成为它的子类的性质，不必加以说明或规定。这就是所谓的“遗传”（Inheritance）\n对象之间可以互送消息(Message)。这消息可以是传送有一个参数\n\n面向对象的程序设计之所以能产生巨大的影响，其根本原因在于它提供了认识框架。也正因为这样，认识框架迅速地散步到程序设计语言的范围之外，以至出现了面向对象的系统分析（OOA）,面向对象的系统设计（OOD)，面向对象的数据库管理系统（ODBMS）\n4. 即插即用的程序设计方法与即插即用紧密相关的还有组件程序设计(Component Programming)，组合文件（Compound Document），宏观程序设计（Macro Programming）等，这是在面向对象的程序设计方法的基础上提出来的\n一部分人专门生产软件组件（相当于芯片），而另一部分人构造整个软件的结构（相当于计算机结构），并且把软件组件插入这个结构，以便迅速地完成大型软件的研制工作。这就是即插即用的意思\n实现的困难:\n\n标准化的问题十分困难\n软件部件的提供方式\n存在多种硬件、多种操作系统\n\n一些软件公司或机构在这方面作了不少探索，并已经在标准化方面提出了方案，如注明的CORBA（Common Object Request Broker Architeeture），就是一种公用的对象需求的转换结构，还有COM101（Common Object Model 101）等 \n5. 面向开源软件的程序设计方法随着开源软件（Open Source）的出现和发展，利用开源软件进行程序设计，已经成为越来越普遍的方法。对于开源软件，社会上和学术界有不同的看法。支持者认为这实现了软件的重用，能够大大提高软件生产的效率，是一种革命性的进步\n在一些应用面广，流程比较清晰，比较规范的应用领域，开源代码的重用是比较有把握的。\n使用开源代码并不一定会减轻工作量。实际上这对于软件开发人员，特别是项目负责人或软件系统的架构师来说，要求更高、更难。\n2.3 软件开发过程的管理一般来说，项目管理的要素是进度、质量、费用（开支）、资源利用。对于软件开发来说，核心是质量问题\n1. 什么样的软件才是好的软件?\n正确地实现所要求的功能，准确地给出预定的输出结果\n用户界面友好，符合实际用户的使用习惯于知识能力\n具有足够的速度（而不是越快越好），能在符合用户要求的时间额度内，给出所要求的处理结果\n具有足够的可靠性，能够在各种干扰下保持正常的工作\n程序易读，结构良好，文档齐全，从而保证系统易于修改\n\n2. 好的程序员与好的项目组就单个程序员来说，主要的指标包括以下几个方面：\n\n具有程序设计所需要的基本知识与技能，如关于数理逻辑的知识与训练，关于各类数据结构的概念及处理方法等\n对本项目所在的领域有较深入的了解，从而能够准确地理解用户的信息需求，正确地把握有关的信息流程与信息处理原则\n对于软件开发的技术环境比较熟悉，包括硬件设备、软件环境和网络环境。特别是对于所用的语言，应当有足够的、实际运用的经验\n\n就规模超出单个程序员的工作量的大型软件来说：\n\n保证严格地在本模块范围内操作，绝不使用可能干扰其他模块的命令或函数\n严格按总体设计的要求和理解去传递参数值，绝不随意修改其内容或含义\n在对公用的文件或数据库进行存取时，必须完全地、准确地统一规定的格式去操作，决不能擅自改变 \n在使用标识符时，应按照统一的原则，尽量使用易于看出逻辑含义的名称。\n严格按照统一的要求编写文档，在内容、格式、表达方式、符号使用上遵循项目组的统一规定\n尽量保持程序风格的统一，如注释行的安排，行末空格的使用等。\n\n3. 怎样建立一个好的项目组?根据CMM模型及其他一些材料，一个好的项目组至少具备以下几个条件：\n\n有严格的、成文的工作规范和文档标准，而且应当为全体成员所熟知，并且切实得到遵守\n人员之间有严格的分工，除了程序员之外，必须有专门的秘书（负责文档的收集、审核及保管）\n每个项目都要事先制定详细的时间表，并且得到严格执行。每一项目完成之后都有完整的资料，并得到妥善保存\n\n第3章 软件开发工具的理论基础软件开发工具的目的十分明确，就是从信息管理与信息处理方面，给软件开发人员提供支持与帮助\n本章重点阐述概念模式、信息库（或称为中心库）、人机界面以及项目管理\n3.1 软件开发过程的信息需求软件开发过程的信息：\n\n有关系统环境、现状及需求的信息。此类信息由用户提出\n有关软件的功能设计与物理设计的各种信息。这类信息是由分析人员（或设计人员）根据需求分析而形成的，它体现为设计方案\n软件成果本身，包括程序与文档。程序代码必然是在计算机内的，文档也常常以联机方式提供\n用户对系统的各种变更要求，以及系统的各种变更的记录。而这类信息是跨软件开发周期的\n\n围绕以上四类信息，涉及的信息管理工作有以下几方面：\n\n许多信息需要长期保存，因为它们并非只用一次，而是需要不断更新，不断被调用\n在许多环节上都要进行数据的转换或加工\n大量的人与人之间的信息交流\n\n软件开发工具正是为上述四类信息的合理存储、正确转化和顺畅流通提供帮助\n软件开发工具用到的比较重要的理论和方法:\n\n**认知科学(Cognitive Science)中关于概念模式(Conceptual Model)**的概念与方法\n数据库技术的理论与方法\n编译技术的有关方法\n关于人机界面的理论与方法\n管理科学中关于项目管理与版本管理的理论与方法\n系统科学与系统工程中的有关理论与方法\n\n3.2 概念模式及其作用Conceptual Model概念模式 ,也译为概念模型。它指人们在认识事物过程中，对于某一事物或某一系统形成的、抽象的、一般化的框架。这种概念模式具有主观性\n概念模式是人们认识客观世界的一种方法，一种工具\n概念模式是人们在长期的实践活动中逐渐形成的\n\n从上图中可以看出概念模式总是在一定理论、思想指导之下形成的，同时又不断地根据实际情况修正\n概念模式在认识中的作用十分重要，同时作为交流与表达工具也是十分重要的\n如何评价概念模式:\n概念模式的意义决定了它的相对性，即面对各种不同的用途，必然会有不同的形式的概念模式。一般来说，它们是各有各的用处，不能互相代替，也无法一般地说哪个更好或更有利。对于有一定的应用领域而言，如果有多种概念模式，则可以从它的表达能力，是否方便易用，是否严格，有没有二义性（容易引起误解）等方面进行评价和比较\n作为表达与交流的工具，必须简单明了、易于理解\n正确理解、掌握和运用概念模式，是做好软件开发工作的基础，也是掌握和运用软件开发工具的基础\n常见的概念模式有以下:\n\n框图(Flow Chart)\n框图是人们编写软件时用的最早的一种概念模式,用来描述程序执行的逻辑过程。\n当软件规模不太大时，它比较适用\n\n\n\n\n\n结构图(Structure Chart)又叫模块结构图\n\n它的观点是,程序的调用方式有三种: 顺序调用、选择调用、循环调用\n\n数据流程图(Data Flow Diagram)\n\n简称DFD\n面对的是一个系统的信息流程\n它更多地用于描述某一业务处理系统的信息来源、存储、处理、去向的全面情况\n基本思想是把信息流看成一个组织或系统运作的线索，力图简明扼要地勾画出全局\n和结构图相比，它更适用于客观描述\n\n\n实体关系图(Entity-Relationship Diagram)\n\n简称E-R图\n用于描述静态数据结构的概念模式\n它以实体、关系、属性三个基本概念概括数据的基本结构\n广泛应用于数据库的设计中\n\n\n**数据字典(**Data Dictionary)\n\n简称DD\n描述数据内容的概念模式\n\n\n时序网络(Petri Net)\n\n它主要描述系统状态及其转换方式\n常用于一些实时控制方面的软件的功能描述\n\n\n数学与逻辑模型\n\n作为逻辑模型的表达方式，决策树和决策表也是经常使用的\n\n\n计算机模拟模型\n\n计算机模拟是一种强有力的概念模式\n利用计算机大量、高速处理信息的能力，在计算机内设置一定的环境（如资源条件等），又以程序来实现客观系统中的某些规律或规则，在二者基础上，计算机就可以高速运行，以便人们观察与预测客观系统的状况软件开发的质量与效率可以由此得到很大的提高。在此基础上，软件开发工具进一步用计算机来帮助人们使用和实现这些概念模式，使软件开发工作提高一步\n\n\n\n3.3 信息库及其一致性信息库（Repository）译法不统一，有的专家译为中心库、总库、主库等。实际上，从它原义来说，无非就是数据库。但他不同于Database或Data Warehouse\nDatabase是在文件系统基础上发展起来的一种数据管理技术，它的重点在于合理地组织数据，体现出数据之间的逻辑关系，并尽可能地帮助用户检索，减少冗余。\n而数据仓库(Data Warehouse)是近年来针对大批数据的分析利用而提出来的概念。它的基本思想是：现实中的大量原始数据与实际的应用是有相当距离的，为了能够切实为企业管理者提出对管理真正有用的信息，就要对信息或数据进行多次的加工或提炼，从而得出许多派生的或综合的数据\n信息库的特点：信息库是一个包罗万象的，随着项目进度不断修改与补充的数据集合。作为软件开发全过程的信息管理总枢纽，它的数据结构是相当复杂的，而且会随着时间不断变化，因此保持一致性的任务变得十分复杂和艰巨。\n信息库的研究主要在以下方面:\n\n信息库的内容应当包括哪些方面\n所述软件的工作环境、功能需求、性能要求、有关的各种信息来源的状况、用户状况、硬件环境以及在该专业领域中的作用等外部信息\n需求分析阶段中收集的有关用户的各种信息，包括用户本身提供的\n逻辑设计阶段的各种调查材料和由此生成的各种文档，包括调查记录 、原始数据、报表及单证的样本、绘制的各种图以及最后生成的系统说明书\n编程阶段的所有成果，包括程序代码、框图、变量说明、测试情况（测试数据及输出结果）、验收报告、使用说明等。\n运行及使用情况的详细记录\n维护及修改的情况\n项目管理的有关信息、人员变更、资金投入、进度计划及实施情况。还包括版本信息\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n信息库应当具备哪些管理功能\n需要把计算机内外的信息存储统一起来管理\n信息库面对 分析人员、程序员和维护人员（一般不直接面对用户）等不同的对象，由于他们各有各的权限和使用目标，所以除了规定复杂的内部结构以存放信息外，还需要认真设计有关的界面\n\n\n如何保持一致性\n由于软件环境、需求以及它本身都在不断变化，信息库中的信息需要不断更新\n这里说的更新与一般的更新不同，信息库中的内容一般不删除，当有新的信息需要存入时，旧的信息只是加上时间标志移入历史信息中去，并且它还与新的信息保持着历史的、逻辑的联系\n一个模块的更新往往带来其他模块的相应变更，并不是一个模块更新后就能够自然而然地与其他模块一起构成一个新的版本\n对于一些国际性的大软件公司来说，各种语言的资料之间 的一致性同样需要认真的、细致的组织与安排\n\n\n\n因保持信息库的一致性，是信息库研究中的核心问题\n3.4 人机界面及其管理《用户界面程序设计–原理与实例》。这本书讨论了一系列原则\n关于用户界面的基本原则， 该书列举了以下几个方面：\n\n用户界面的主要功能是通信\n用户界面必须始终一致\n用户界面必须使用户随时掌握任务的进展状况\n用户界面必须能提供帮助\n宁可让程序多干，不可让用户多干 \n\n该书还特别讨论了在人机界面设计中经常遇到的一个困难的权衡：灵活性和一致性的矛盾\nIBM的AD/Cycle提供了应用系统及其开发过程中的一个总框架，其应用系统框架为系统应用体系结构（Systems Application Architecture——SAA）\nSAA包括三个方向的接口：程序员接口（CPI）、通信接口（CCS）、用户接口（CUA）\n人机交互的手段可归结于8个方面：键盘操作、屏幕滚动、菜单选择、帮助系统、鼠标操作、色彩应用、数据录入、信息显示\n由于技术的发展，这个归纳已经不能说是完全的了\n3.5 项目管理与版本管理项目管理项目管理是指与固定的生产线上的日常生产管理不同的，具有更大的变动性，时间性的另一类挂你任务。\n项目管理具有以下四个突出的特点：\n\n子任务多，关系复杂\n任务不可重复，形式不断变更\n协调组织**的任务十分突出，资源浪费闲置的风险与合理地优化组合、提高效益的机会并存\n信息处理工作的作用与意义更为突出\n\n进度和质量对于软件开发来说，是最关键的问题\n但是，软件开发工作还有自己的不同于一般项目管理的特点。一般工程项目没有版本更新的问题\n项目管理的基本目标：\n\n使产品(或工程)的质量得到有效的控制\n保证整个系统按预定的进度完成\n有效地利用各种资源，尽可能使资源的闲置与浪费减少\n控制与降低成本 \n\n项目管理中的方法：\n\n工程计划网络方法（计划评审技术）\n甘特图（Gantt Chart）\n检查点方法（Check Point）\n排队论等\n\n版本管理版本管理的核心是保证两个一致性。从时间上说，它的主要关心点是系统的逐步完善，以前达到的成果不要丢失\n每一步新的进步都要切实与以前的工作一致，是改进而不是破坏或降低系统的已有功能\n每一局部与整体保持一致,合理地判断每一次修改的必要性及影响范围\n版本管理的具体方法：\n\n规定长远的版本更新计划\n制定版本有关的信息范围及收集、管理方法\n在项目组内明确分工\n在程序编写、测试、文档缩写等工作中贯穿项目管理的思想及要求\n\n用户的反馈信息是项目管理与版本管理的重要资源。因此在信息库的组织、项目管理或版本管理中，都要有其对应的位置\n第4章 软件开发工具的技术要素由于软件开发工具一般都较为复杂、复杂，所以它的功能设计与总体结构是必须首先认真考虑的\n4.1 基本功能与一般结构基本功能软件开发工具的基本功能:\n\n提供描述软件状况及其开发过程的概念模式，以协助软件开发人员认识软件工作的环境与要求，合理地组织与管理软件开发的工作过程。\n提供存储和管理有关信息的机制与手段。简单地说，就是提供一个信息库和一个人机界面\n帮助使用者编制、生成及修改各种文档。（实现需信息库的支持）\n帮助使用者编写程序代码，即一般常说的代码生成\n对于历史信息进行跨生命周期的管理，把项目进度与版本更新的有关信息科学地管理**起来\n\n完整的、一体化的软件开发工具应当具备以上这些功能\n一般结构总控和人机界面处于一般结构中的中间位置，它是使用者和软件开发工具之间交流信息，实现所有的支持功能的桥梁。总控与人机界面的中心位置是不言而喻的、顺理成章的。\n系统中的另一个重要部分是信息库及其管理。信息库的结构框架反映了人们对软件产品及软件开发过程的基本看法，信息库内容的丰富程度是软件开发工具的功能与作用的最基本的依据。如果说总控和人机界面使用户面对一个良好的工作环境的话，那么在这个环境中，工作的范围及深度取决于信息库的功能和内容\n除了直接通过人机对话提供查询之外，最重要的两个信息就是代码生成与文档生成\n一般结构中没有反映出来的另一个技术要素是项目管理和版本管理\n如果要实现跨越开发周期的信息共享、知识重用以及软件重用，那么它的信息管理功能就必须大大加强\n4.2 总控与人机界面作为一个完整的、一体化的软件开发工具，总控和人机界面处于中心的位置\n解决软件配置或集成（Software Configuration）的问题的实质: 设立一个有效的总控，它能够在各个具体工具之上、实现信息的正确传递与转换，帮助人们完成协调与配合的工作，从而形成一个统一的、完整的支撑环境，并通过一个统一的、友好的人机界面与用户对话\n总控和人机界面的技术要点：面向使用者、保证信息的准确传递、保证系统的开放性（或灵活性）\nAD/Cycle是IBM根据多年软件开发的经验形成的对于软件开发过程的抽象理解，将软件开发过程的每一个周期分为五个阶段：\n\n需求分析阶段\n\n任务是建立逻辑模型\n首先建立起软件所处领域或环境的模型\n其次建立软件所要处理的信息的静态模型，即数据模型\n最后建立信息流通的模型，即信息的来源、去向、存储及处理的逻辑过程\n\n\n分析设计阶段\n\n包括数据结构的详细设计、处理过程的详细设计、子系统或模块的划分以及它们之间相互联系的具体规定\n还应当完成屏幕设计、报表设计、数据库的物理设计\n\n\n编码阶段\n\n编码阶段指具体地编写软件的阶段，这里是实际的程序代码的产生点\n\n\n测试阶段\n测试阶段指是对已经完成的各个模块或子系统进行测试、调整，以便最终形成完整的软件。这就需要准备测试数据，收集与分析测试结果\n\n维护阶段 维护阶段主要是组织管理软件的日常运行，收集运行中的状态信息及出现的问题，并及时进行局部的修改与完善 \n所谓面向用户，最根本的是要立足于符合实际的应用领域，符合软件开发人员思路的概念模型\n\n\n软件开发的技术原则:\n\n面向用户原则，具体体现在两方面：\n\n\n总控对各部分的调度与安排应当符合上述模式\n向用户提供的统一界面应当体现这个模式\n\n\n保证各部分之间信息的准确传递。信息能否准确地从一个部分传送到另一个部分，就成为一体化是否成功的关键\n\n保证系统的开放型或灵活性\n\n\n以上三项原则当然是对整个软件开发工具而言的，但是它们的实现，主要体现在总控和人机界面这个中心环节中\n4.3 信息库及其管理信息库(Repository)是软件开发工具的基础。合理地组织信息库的内容，加强信息库的管理内容，是软件开发工具的又一个重要的技术要素。\n信息库的技术要素：\n\n信息库的内容\n\n信息库的组织方式\n\n信息库的管理功能\n\n历史信息的处理方法\n\n\n1. 信息库的内容\n关于软件应用的领域与环境的状况。主要用于分析设计阶段\n\n设计成果，包括逻辑设计与物理设计的成果。主要包括数据流程图、数据字典、系统结构图、数据库的逻辑设计、各模块的设计要求，以及由此形成的设计文档。主要是为了组织实际编码工作\n\n运行状况的记录。包括 运行运行效率、作用、用户反映、故障情况、故障的原因及处理情况\n\n有关项目管理与版本管理的信息。这属于跨生命周期的信息\n\n\n2. 信息库的组织方式人们最初的思路是集中存储，集中存储的思想是建立一个庞大的数据库，把上述各种信息都存放在这个数据库中，而各种工具或实现各项单项功能的模块则围绕在这个信息库的周围，对这个信息进行录入、修改、查询、删除。这种想法比较自然，而且充分利用已有的数据库技术，比较容易保持一致性。但是，它的缺点是与前面所要求的模块化相冲突\n于是就有分散存储的想法出现，即把信息分别存入不同的数据库，由不同的功能模块来处理。这种方法的优点是易于变更和剪裁，一旦某一部分发生变更，不影响整个系统。但是各部分之间的一致性无从保证。针对这个问题，专家提出了第三种思路：逻辑上统一，物理上分散，设立统一的信息库管理模块来进行管理。它通过信息库管理模块来对分散的各个数据库进行存取，并进行一致性的检查与维护。这样一来，数据库与模块都实现了模块化，既保持了一致性，又保证了灵活性\n\n3. 信息库的管理功能图4-1中粗略地画出了三项，录入更新、使用查询、一致性维护。其中许多功能是数据库管理系统所具备的\n与一般数据库管理系统不同的有：\n\n信息之间逻辑联系的识别与记录\n如何实现定量信息与文字信息的协调一致\n\n4. 历史信息的处理方法如何处理历史信息是信息库的一个困难问题\n实际操作中出现2个具体的困难：\n\n历史信息的数量太大，占用存储设备过多\n解决方法：一般采用脱机备份的方法解决\n\n\n历史信息格式不一致，难以有效地利用\n解决方法：加强标准化，稳定数据结构\n这需要应用一些智能方法，使得跨越生命周期的信息得以相互转化、实现共享与重用\n\n\n\n4.4 文档生成与代码生成除了通过屏幕上的对话获取信息支持之外，使用者从软件开发工具得到的最主要的帮助，应当来自文档生成与代码生成两种方式\n1. 代码生成(Code Generator)代码生成器的基本任务是根据设计要求,自动地或者半自动地产生响应的某种语言的程序\n输出程序代码是这个模块的目标，输出的代码有两种情况：\n\n某种高级程序设计语言的代码\n优点：使用者可以在这基础上进一步修改加工，即利用自动生成模块作为一个原型，然后在此基础上形成自己所要求的系统（或系统的一部分）\n缺点：功能比较死，效率不高，因此还需要修改\n\n\n某种机器（包括硬件和操作系统）环境下可运行的机器指令\n优点：可以直接运行，从而立即检查是否符合要求\n\n\n\n原则：程序设计归根到底只要由人来做的，任何工具都只能发挥帮助和支持的作用，而不能完全代替人来工作\n生成代码时依据的是三个方面的资料：\n\n信息库里已有的有关资料\n代码生成器还要利用各种标准模块的框架和构件\n使用者通过屏幕前 的操作送入的信息\n\n2. 文档生成文档生成的功能与代码生成相比，数量更大，内容更复杂\n文档生成包括：文章、表格、图形\n4.5 项目管理与版本管理从技术上讲，它们的核心问题是跨生命周期的信息的管理问题。前面章节提到的历史信息的处理也是项目管理与版本管理的关键问题\n项目数据库实际上是信息库的一个组成部分。它的内容与另外几部分不同，它记录的是项目本身进展的各种信息。这里的关键是质量、进度、资源配置和费用四个基本问题\n在AD/Cycle的总框架中，对项目管理应当考虑的范围给出了如下的规定：\n\n研究与确定开发工作的方针与方法\n开发任务的划分与分工\n资源状况\n人员情况\n变更情况\n质量情况\n\n关于版本的信息，有的工具中把它作为项目数据库的一部分处理。它的主要内容是各个版本的编号、功能改变、模块组成、文档状况、推出时间、用户数量（或用户名单）、用户反映、封存情况等。\n第5章 软件开发工具的使用与开发人们首先遇到的问题往往是购买现成的软件开发工具还是自己开发专用的工具。对于这个问题，不能简单地回答是或不是，它与具体工作的条件、环境、人员素质、项目特征都有不可分割的联系\n5.1 购置与开发权衡购买市场上已有的软件开发工具，能帮助人们：\n\n减轻一定的工作负担\n使工作的组织管理比较规范\n信息的管理与检索比较方便\n\n真正经过考验的、一体化的软件开发工具还不多。他们的作用于可靠程度还不尽人意。\n自己开发的优点：\n\n目标明确，切实符合自己的需要，便于进一步扩容和升级\n不存在引进外面产品时不可避免的冲突与不一致\n\n","slug":"examination/tool for software development","date":"2021-10-03T11:37:25.000Z","categories_index":"应试","tags_index":"升本,自考","author_index":"Joshlee"},{"id":"2cc8b90b0dba95b11728dd29144d57a6","title":"《软件开发工具》","content":"\n\n第1章 绪论软件产品的质量、效率、价格已成为各方关注的十分重要的问题。\n1.1 软件开发工具的由来\n操作系统、汇编程序、汇编系统时软件开发中必不可少的工具，但一般不把他们归入软件开发工具的范围，类似的还有磁盘的处理、病毒的防治、系统的备份等。\n\n软件开发工具的范围（概念）：在高级程序设计语言（第三代语言）的基础上，为提高软件开发的质量和效率，从规划、分析、设计、测试、文档和管理等方面，对软件开发者提供各种不同程度的帮助的一类新型的软件\n\n第一代计算机语言（机器语言）：由0和1组成的字符串\n\n第二代计算机语言（汇编语言）：针对难记忆、无意义的二进制字符串，人们试图用英语中具有一定意义的单词（或单词的缩写）来代替它，这就是 “助记忆码”或汇编码,用汇编编写的程序叫汇编程序，而把这些汇编程序转换成机器指令的程序则称为汇编系统（Assembler）。至今，汇编语言还是计算机专业人员必须学习的基本知识之一。\n\n操作系统差不多与汇编语言同时出现（20世纪50年代末60年代初）：\n\n操作系统的出现改善了人们应用计算机的条件。操作系统利用计算机本身能迅速处理信息的优势\n\n\n\n自动地完成系统初始化、文件管理、内存管理、作业管理、处理机管理等一系列工作\n这改善了计算机的使用环境，也同样对计算机应用的前进发挥了十分重要的作用\n\n\n第三代计算机语言（过程化语言）：在第三代语言的应用中，人们又发现了新的瓶颈–处理过程的描述\n\n第四代计算机语言（非过程化语言）：非过程化语言的思想是只要给机器下达做什么的命令，由机器自己去安排执行的顺序。在认识到软件工作的重要性的同时，也认识到了软件工作的困难性，这就是“软件危机”的问题\n\n硬件是计算机的躯体，软件是计算机的灵魂\n\n软件是广大使用者与计算机之间的桥梁\n\n软件是人类在各个领域中积累的知识的结晶\n\n软件是人类文明与知识得以延续的新的载体\n\n客观世界的复杂性，决定了软件本身的复杂性，人类知识的丰富多彩决定了软件的极大多样性；客观世界的动态性，决定了软件对可维护性、可重用性越来越高的要求。保证它的正确性、可靠性、如何控制软件开发工作的进度与成本，很自然地称为理论上十分重要、实际中十分迫切的课题。\n\n克服软件危机的方法(新技术)：\n\n\n结构化程序语言\n软件工程学\n面向对象的程序设计方法\n即插即用的程序设计方法（Plug and Play Programming）\n面向开源软件和互联网的程序设计\n\n\n用通用软件(如早期的WORDSTAR)帮助软件开发的主要弱点：\n\n\n有许多工作是通用软件无法完成的\n通用软件完成某些工作，只能表现出其表面的形式，而不能反映其逻辑内涵\n通用软件来帮助人们完成软件开发工作时，常常遇到难以保持一致性的困难\n\n\n\n针对以上问题，20世纪80年代以来，一些专门用于支持软件开发的软件开发工具陆续问世，从而进入专用的软件开发工具的阶段。如以下几类：\n\n\n面向特定功能模块的各种代码生成程序（包括报表生成器、菜单生成器、对话生成器等）\n综合性的第四代语言\n专用于某种文档的编写工具\n数据字典管理系统（DDMS）\n专用于画数据流程图、E-R图或程序框图的绘图软件等\n\n\n1989年，IBM公司宣布了一个名为AD/Cycle的巨大的理论框架（一体化环境开始，里程碑）\n\n\n缺点：\n\n\n拘泥于集中式的处理思路，对于新兴起的客户、服务器结构没有及时跟上\n坚持在OS/400等自己、特定的硬件平台上开发，背离了开放型的大趋势\n\n\n\n但是集成的软件开发环境的研发并没有因此停滞，例如Rational公司推出了Objectory，Rose等集成的软件开发工具\n\n21世纪以来，软件开发工具的发展也进入了新的阶段。两个鲜明的特点使软件开发工具的功能和效率提高了一个新的阶段：\n\n\n面向网络，不仅基于网络，而且用于网络。从HTML到XML，从SOAP到UDDL\n软件开发越来越需要考虑互联网上的应用，越来越注意要再网络环境下使用\n\n\n\n开源软件的兴起和运用\n开源软件开发工作效率地提供是肯定有益的\n\n\n\n1.2 软件开发工具的概念软件开发工具的概念要点:\n\n它是在**高级程序设计语言(第三代语言)**之后，软件技术进一步发展的产物\n它的目的是在人们开发软件中给予各种不同方面、不同程度的支持或帮助\n它支持软件开发的全过程，而不是仅限于编码或其他稳定的工作阶段\n\n在理解这个概念时,应同时认识软件开发工具的继承性与创新性。它的基本思想仍是致力于软件开发的高效优质\n\n硬件（Hardware）是躯体，软件（Software）是灵魂，二者缺一不可。软件一端连着计算机硬件，向硬件提供可以执行的机器指令，另一端面向用户\n软件是用户与硬件之间的桥梁\n软件实际上是人类知识与经验的结晶。所谓事先编好的指令，正是人们在实践中形成的工作规范与步骤\n当人们把程序编制出来时，已经为这些经验或理论知识找到了一种新的载体\n\n软件开发过程的实质： 知识的提炼、表述、固化\n软件开发新特点：\n\n自动化程度的提高\n这一阶段的工作明确地把需求分析和架构设计包括在软件工作的范围之内\n把软件开发工作延伸到项目及版本管理，从而超出了一次编程的局限\n在这一阶段的研究中，吸收了许多管理科学的内容与方法。在这方面卡内基·梅隆大学的软件工程研究所提出的能力成熟度模型（Capacity Morality Model-CMM）具有重要的意义\n\n总之，软件开发工具的提出与使用，是软件技术发展的一个新的阶段。\n与软件开发工具的概念术语有很多，如：\n\n第四代语言\n第四代语言系统通过某些标准处理过程的自动生成，使得用户可以只说明要求做什么，而把具体的执行步骤的安排交由软件自动处理\n\nCASE工具\n\n\nCASE工具有两种理解。一种是计算机辅助软件工程（Computer Aided Software Engineering），另一种则是计算机辅助系统工程（Computer Aided System Engineering）\n无论按哪种理解, 它的基本思想与软件开发工具是完全一致的,即应用计算机自身处理信息的巨大能力,帮助人们开发复杂的软件或应用系统\n\n可视化程序设计（Visual Programming）\n\n最终用户计算（End User Computing）\n\n组件程序设计（Component Programming）\n\n即插即用的程序设计（Plug and Play Programming）\n\n\n1.3 软件开发工具的功能与性能1. 软件开发的过程第一阶段 - 需求分析:\n软件开发工作首要的任务是根据这种初始要求形成严格的、明确的、可供实际开发使用的功能说明书。\n软件设计者需要从初始要求出发、经过大量的调查研究工作，抽象出应用领域中的实际的信息需求，设计出计算机系统内外的、合理的信息流程，并规定出软件系统的功能与性能要求。\n这些调查分析的成果集中体现在第一个重要文档–软件功能说明书\n第二阶段 - 总体设计：\n软件的结构设计、公用的数据文件或数据库的设计、各部分的连接方式及信息交换的标准\n总体设计的成果是系统的总体设计文件及各个模块的设计任务书。总体设计文件应包括结构图、模块清单、公用数据结构\n第三阶段 - 实现阶段（Coding）:程序的编写与文档的编写是两件并行的工作\n第四阶段 - 测试或调试阶段：其中包括模块的调试与整个软件的联调两个部分\n2. 软件开发工具的功能要求\n\n认识与描述客观系统： 主要用于需求分析阶段\n存储及管理开发过程中的信息\n代码的编写或生成\n文档的编制或生成\n软件项目的管理: 这方面的功能更明确地是为项目管理人员提供支持, 项目管理包括进度管理、资源与费用管理、质量管理三个基本内容\n\n\n\n3. 软件开发工具的性能对于软件开发工具来说以下五项应是特别重要的:\n\n表达能力或描述能力\n保持信息一致性的能力\n使用的方便程度\n工具的可靠程度: 即在各种各样的干扰下仍能保持正常工作,而不导致丢失或弄错信息\n 对硬件和软件环境的要求: 一般来说, 软件开发工具对环境的要求不应当超出它所支持的应用软件的环境要求, 有时甚至还应当低于应用软件的环境要求\n\n1.4 软件开发工具的类别1. 按工作阶段划分可以把软件开发工具分为三类：计划工具(出现最晚)、分析工具、设计工具(出现最早)\n各种代码生成器、一般所说的第四代语言及帮助人们进行测试的工具，都属于设计工具\n分析工具主要指用于支持需求分析的工具，如帮助人们编写数据字典的、专用的数据字典管理系统工具-FLOW，帮助人们画系统结构图或E-R图的工具等。保持信息的一致性，在这类工具中具有十分重要的地位\n计划工具则是完全为项目主管人员服务的\n2. 按集成程度划分专用的、面对某一工作阶段或某一工作任务的工具，以及集成化的、面对软件开发的全过程的工具\n集成化的软件开发工具也常常被称为软件工作环境（是指支持全过程、全阶段的软件开发工具）。\n3. 按与硬件、软件的关系划分有点软件开发工具依赖于特定的计算机或特定的软件（如某种数据库管理系统），有的则是独立于硬件与其他软件的。\n设计工具多是依赖于特定软件的\n分析工具与计划工具往往是独立于机器与软件的\n集成化的软件开发工具又常常是依赖于机器与软件的\n1.5 软件开发工具的研究与使用软件开发工具的使用者：\n\n从计算机专业出身的技术人员\n来自各个应用领域，他们出身于计算机以外的各个专业领域，如会计、金融、工程、企业管理等\n\n第2章 软件开发过程及其组织软件危机源于客观世界，大系统的复杂性，规模越来越大\n如何克服软件危机: 1. 结构化程序设计方法 2. 软件工程方法 3. 面向对象的程序设计方法 4.即插即用的程序设计方法 5.面向开源软件和互联网平台的程序设计\n两个领域的问题需要特别注意: 1.软件质量的评价与改善问题 2.项目组管理的任务与方法。这两者与软件开发工作也是有直接联系的\n2.1 软件开发的困难软件的复杂性超出了人类的处理能力\n1. 软件开发的基本问题两个转换没有顺利地通过。首先是从用户的理解到程序员的理解，其次是从程序员的理解到程序的理解\n\n\n第一个转换是用户对软件功能的理解与程序员对软件功能的理解之间的转换\n程序员必须花相当的时间尽可能地了解与熟悉应用领域, 并且正确地理解用户工作中的信息需求和信息流程\n保证这一顺利完成的手段就是利用尽可能的标准化的方法编写程序设计任务书, 用明确的语言或图形、表格，把程序要处理的信息的内容、格式、来源、去向、存储与处理清楚地表达出来，作为双方共同的理解\n\n\n第二个转换所要解决的是人和机器之间的交流与协调问题, 这个转换关键在于程序员的知识水平和实际经验\n\n2. 大型软件开发中的困难\n一致性的保持称为十分困难的问题\n\n测试的困难大大增加\n\n水波效应: 人们修改程序的某一处时, 由于没有充分考虑这一修改对相关部分带来的影响, 结果出现了新的错误\n每个程序员只了解自己的一部分, 无法全面地预测自己的任何改动对其他部分的影响, 而项目负责人也不可能深入每一个细节中, 只能采用所谓的”黑箱“检验方法。这种检验只能证明程序有错而不能证明程序无错\n\n\n工作进度难以控制\n\n单个程序员常常过低估计工作难度而拖延进度\n对整个系统进行联调, 联调后发现问题回到程序员手中的修改, 反复多少次是无法事前判断的\n\n\n文档与代码的协调十分困难\n\n我们所说的文档包括: 功能说明书、总体设计、各模块的设计任务书、每个部分的研制报告、测试报告、直到最终的验收报告和给使用者的用户手册\n\n代码与文档必须一致，否则文档不仅没有用处，反而会造成混乱\n\n版本更新带来的困难\n\n版本更新的大量工作往往在于审核与回顾，包括对代码和文档两个方面的认真检查\n\n\n3. 困难产生的原因\n这些困难来自大系统的复杂性\n许多具有主动性的个人之间的组织与协调带来大量的困难\n各个应用领域之间的差别导致困难的加重\n时间的因素，变化的因素给软件开发工作带来许多困难\n\n2.2 软件开发方法的发展大型软件开发过程的各种角色:\n\n用户\n\n\n提出需求\n验收\n使用\n需求修改\n\n\n项目负责人(或软件架构师)\n\n\n分析需求(包括设计方案的形式)\n向程序员分配任务\n验收程序员的工作成果–代码与文档\n对整个软件进行联调\n向用户交付使用\n接收与分析用户的修改要求\n向程序员布置修改任务\n验收修改成果并向用户提交新的版本或修改的结果\n\n\n程序员\n\n\n编写程序\n编写文档\n调试自己编码的程序\n向项目负责人提交工作成果\n\n\n硬件\n\n\n1. 结构化程序设计方法好的程序结构的各种看法: \n\n它能够保证程序正常地，按照功能说明书运行\n它具有灵活性，没有错误，即使有了错误也能够很快地改正\n它的文档齐全，一旦需要变更，很容易找到应当改动的地方\n它运行速度快\n它在经济上能够保证投资很快地得到回报\n\n程序的结构分解成三种基本模块（避免“水波效应”）：\n\n处理单元\n循环机制\n二分决策机制 \n\n模块的划分应当符合以下三条基本的要求:\n\n凝聚性强：模块的功能在逻辑上尽可能地单一化、明确化，最好做到一一对应\n低耦合：模块之间的联系及互相影响尽可能的少，尽量避免逻辑耦合，而仅限于数据耦合\n模块的规模应当足够小，以便使它本身的调试易于进行\n\n结构化程序设计的实施要点:\n\n限制甚至不用GOTO语句，绝对禁止超越模块边界的GOTO语句\n子程序（也叫方法或函数）尽可能做到只有一个入口和出口\n程序风格应尽量明确、清晰，包括适当增加注释\n在程序编写的同时完成有关的文档编撰，不要拖延时间\n\n结构程序设计的方法是为程序员服务的，而对于项目负责人来说，则较少涉及他所关心的问题。对于这种方法的批评意见是增大了程序工作量，增加了编程中的麻烦与繁琐的工作，并且降低了程序的运行效率。\n为了保证软件的可靠、准确与易于修改，这种代价是值得的\n2. 软件工程方法根据经典的辞书《简明不列颠百科全书》，工程指的是“应用科学知识使自然资源最佳地为人类服务的一种专门技术”。工程的观点是和近代、现代的大生产联系在一起的，它是和依靠个人技艺的手工的生产方式相对立的\n软件工程的思想和方法:\n\n把软件的质量寄托于各个程序员的技能与认真负责是不牢靠的、危险的、不现实的\n要想从根本上提高软件开发的效率和质量，就应当吸取人们在各种传统产业中的成功经验\n从组织和管理的角度加强力量\n使软件生产从程序员的个人劳动提高到有组织的、可控制的工程\n\n软件工程从传统产业中吸取的经验：\n\n它们在多年实践的基础上，对于这项工作的步骤做出了严格的规定\n顺序绝对不能颠倒\n每一个阶段都有各自的明确的任务\n在质量、表达方式等方面要有统一\n它们作为有关各方沟通与交流的手段，使参加工作的不同职务、不同角色的人们成为一个整体，共同地完成一项大的工程任务\n\nIBM提出的AD/Cycle中，对于应用软件的开发过程作了如下的划分和规定：\n第一阶段：需求分析\n第二阶段：分析与设计阶段\n第三阶段：编程阶段\n第四阶段：测试阶段\n第五阶段：使用及维护阶段\n在标准化方面（如著名的ISO 9001标准等），人们主要从2个方面去探索：\n\n表达方式的标准化\n对工作的质量及检查制定标准\n\n软件工程的思想主要集中于加强项目管理者的工作上，对于程序员关系不大，这点与结构化程序设计方法正好互相补充。\n3. 面向对象的程序设计方法面向对象的程序设计(Object Oriented Programming–OOP)\n“面向对象”（Object Oriented）这个用于有多种不同的翻译方法，如“面向客体”、“面向目标”、“物件导向”\n“Object”的由来：把信息的静态属性(数据结构)和对它的处理(功能模块)从根本上结合起来，数据库(数据结构)和功能的矛盾和冲突就迎刃而解了\n20世纪70年代，Smalltalk语言的出现 ，使人们对这种思想的作用刮目相看。这种与众不同的语言把一切事物都看做Object，仅用三个最基本的语句（new，send，get）来表明对象的生成、送出消息、得到消息，而把一切动作都作为对象接到信息的反应，通过一套巧妙的递归嵌套，可以发展出任意的、复杂的结构。当C语言接受了这种思想后，发展出C++后，面向对象的思想成为普遍的潮流 \n面向对象的程序设计的基本思想：\n\n客观世界的任何事物都是对象，它们都有一些静态属性（相当于数据结构），也都有一些相关的操作（相当于程序模块或方法）。作为一个整体，对象对外不必公开这些属性与操作。这就是所谓的“封装性”（Encapsulation）\n对象之间有抽象与具体\n抽象的、较大的对象所具有的性质，包括静态属性和动态操作，自然地成为它的子类的性质，不必加以说明或规定。这就是所谓的“遗传”（Inheritance）\n对象之间可以互送消息(Message)。这消息可以是传送有一个参数\n\n面向对象的程序设计之所以能产生巨大的影响，其根本原因在于它提供了认识框架。也正因为这样，认识框架迅速地散步到程序设计语言的范围之外，以至出现了面向对象的系统分析（OOA）,面向对象的系统设计（OOD)，面向对象的数据库管理系统（ODBMS）\n4. 即插即用的程序设计方法与即插即用紧密相关的还有组件程序设计(Component Programming)，组合文件（Compound Document），宏观程序设计（Macro Programming）等，这是在面向对象的程序设计方法的基础上提出来的\n一部分人专门生产软件组件（相当于芯片），而另一部分人构造整个软件的结构（相当于计算机结构），并且把软件组件插入这个结构，以便迅速地完成大型软件的研制工作。这就是即插即用的意思\n实现的困难:\n\n标准化的问题十分困难\n软件部件的提供方式\n存在多种硬件、多种操作系统\n\n一些软件公司或机构在这方面作了不少探索，并已经在标准化方面提出了方案，如注明的CORBA（Common Object Request Broker Architeeture），就是一种公用的对象需求的转换结构，还有COM101（Common Object Model 101）等 \n5. 面向开源软件的程序设计方法随着开源软件（Open Source）的出现和发展，利用开源软件进行程序设计，已经成为越来越普遍的方法。对于开源软件，社会上和学术界有不同的看法。支持者认为这实现了软件的重用，能够大大提高软件生产的效率，是一种革命性的进步\n在一些应用面广，流程比较清晰，比较规范的应用领域，开源代码的重用是比较有把握的。\n使用开源代码并不一定会减轻工作量。实际上这对于软件开发人员，特别是项目负责人或软件系统的架构师来说，要求更高、更难。\n2.3 软件开发过程的管理一般来说，项目管理的要素是进度、质量、费用（开支）、资源利用。对于软件开发来说，核心是质量问题\n1. 什么样的软件才是好的软件?\n正确地实现所要求的功能，准确地给出预定的输出结果\n用户界面友好，符合实际用户的使用习惯于知识能力\n具有足够的速度（而不是越快越好），能在符合用户要求的时间额度内，给出所要求的处理结果\n具有足够的可靠性，能够在各种干扰下保持正常的工作\n程序易读，结构良好，文档齐全，从而保证系统易于修改\n\n2. 好的程序员与好的项目组就单个程序员来说，主要的指标包括以下几个方面：\n\n具有程序设计所需要的基本知识与技能，如关于数理逻辑的知识与训练，关于各类数据结构的概念及处理方法等\n对本项目所在的领域有较深入的了解，从而能够准确地理解用户的信息需求，正确地把握有关的信息流程与信息处理原则\n对于软件开发的技术环境比较熟悉，包括硬件设备、软件环境和网络环境。特别是对于所用的语言，应当有足够的、实际运用的经验\n\n就规模超出单个程序员的工作量的大型软件来说：\n\n保证严格地在本模块范围内操作，绝不使用可能干扰其他模块的命令或函数\n严格按总体设计的要求和理解去传递参数值，绝不随意修改其内容或含义\n在对公用的文件或数据库进行存取时，必须完全地、准确地统一规定的格式去操作，决不能擅自改变 \n在使用标识符时，应按照统一的原则，尽量使用易于看出逻辑含义的名称。\n严格按照统一的要求编写文档，在内容、格式、表达方式、符号使用上遵循项目组的统一规定\n尽量保持程序风格的统一，如注释行的安排，行末空格的使用等。\n\n3. 怎样建立一个好的项目组?根据CMM模型及其他一些材料，一个好的项目组至少具备以下几个条件：\n\n有严格的、成文的工作规范和文档标准，而且应当为全体成员所熟知，并且切实得到遵守\n人员之间有严格的分工，除了程序员之外，必须有专门的秘书（负责文档的收集、审核及保管）\n每个项目都要事先制定详细的时间表，并且得到严格执行。每一项目完成之后都有完整的资料，并得到妥善保存\n\n第3章 软件开发工具的理论基础软件开发工具的目的十分明确，就是从信息管理与信息处理方面，给软件开发人员提供支持与帮助\n本章重点阐述概念模式、信息库（或称为中心库）、人机界面以及项目管理\n3.1 软件开发过程的信息需求软件开发过程的信息：\n\n有关系统环境、现状及需求的信息。此类信息由用户提出\n有关软件的功能设计与物理设计的各种信息。这类信息是由分析人员（或设计人员）根据需求分析而形成的，它体现为设计方案\n软件成果本身，包括程序与文档。程序代码必然是在计算机内的，文档也常常以联机方式提供\n用户对系统的各种变更要求，以及系统的各种变更的记录。而这类信息是跨软件开发周期的\n\n围绕以上四类信息，涉及的信息管理工作有以下几方面：\n\n许多信息需要长期保存，因为它们并非只用一次，而是需要不断更新，不断被调用\n在许多环节上都要进行数据的转换或加工\n大量的人与人之间的信息交流\n\n软件开发工具正是为上述四类信息的合理存储、正确转化和顺畅流通提供帮助\n软件开发工具用到的比较重要的理论和方法:\n\n**认知科学(Cognitive Science)中关于概念模式(Conceptual Model)**的概念与方法\n数据库技术的理论与方法\n编译技术的有关方法\n关于人机界面的理论与方法\n管理科学中关于项目管理与版本管理的理论与方法\n系统科学与系统工程中的有关理论与方法\n\n3.2 概念模式及其作用Conceptual Model概念模式 ,也译为概念模型。它指人们在认识事物过程中，对于某一事物或某一系统形成的、抽象的、一般化的框架。这种概念模式具有主观性\n概念模式是人们认识客观世界的一种方法，一种工具\n概念模式是人们在长期的实践活动中逐渐形成的\n\n从上图中可以看出概念模式总是在一定理论、思想指导之下形成的，同时又不断地根据实际情况修正\n概念模式在认识中的作用十分重要，同时作为交流与表达工具也是十分重要的\n如何评价概念模式:\n概念模式的意义决定了它的相对性，即面对各种不同的用途，必然会有不同的形式的概念模式。一般来说，它们是各有各的用处，不能互相代替，也无法一般地说哪个更好或更有利。对于有一定的应用领域而言，如果有多种概念模式，则可以从它的表达能力，是否方便易用，是否严格，有没有二义性（容易引起误解）等方面进行评价和比较\n作为表达与交流的工具，必须简单明了、易于理解\n正确理解、掌握和运用概念模式，是做好软件开发工作的基础，也是掌握和运用软件开发工具的基础\n常见的概念模式有以下:\n\n框图(Flow Chart)\n框图是人们编写软件时用的最早的一种概念模式,用来描述程序执行的逻辑过程。\n当软件规模不太大时，它比较适用\n\n\n\n\n\n结构图(Structure Chart)又叫模块结构图\n\n它的观点是,程序的调用方式有三种: 顺序调用、选择调用、循环调用\n\n数据流程图(Data Flow Diagram)\n\n简称DFD\n面对的是一个系统的信息流程\n它更多地用于描述某一业务处理系统的信息来源、存储、处理、去向的全面情况\n基本思想是把信息流看成一个组织或系统运作的线索，力图简明扼要地勾画出全局\n和结构图相比，它更适用于客观描述\n\n\n实体关系图(Entity-Relationship Diagram)\n\n简称E-R图\n用于描述静态数据结构的概念模式\n它以实体、关系、属性三个基本概念概括数据的基本结构\n广泛应用于数据库的设计中\n\n\n**数据字典(**Data Dictionary)\n\n简称DD\n描述数据内容的概念模式\n\n\n时序网络(Petri Net)\n\n它主要描述系统状态及其转换方式\n常用于一些实时控制方面的软件的功能描述\n\n\n数学与逻辑模型\n\n作为逻辑模型的表达方式，决策树和决策表也是经常使用的\n\n\n计算机模拟模型\n\n计算机模拟是一种强有力的概念模式\n利用计算机大量、高速处理信息的能力，在计算机内设置一定的环境（如资源条件等），又以程序来实现客观系统中的某些规律或规则，在二者基础上，计算机就可以高速运行，以便人们观察与预测客观系统的状况软件开发的质量与效率可以由此得到很大的提高。在此基础上，软件开发工具进一步用计算机来帮助人们使用和实现这些概念模式，使软件开发工作提高一步\n\n\n\n3.3 信息库及其一致性信息库（Repository）译法不统一，有的专家译为中心库、总库、主库等。实际上，从它原义来说，无非就是数据库。但他不同于Database或Data Warehouse\nDatabase是在文件系统基础上发展起来的一种数据管理技术，它的重点在于合理地组织数据，体现出数据之间的逻辑关系，并尽可能地帮助用户检索，减少冗余。\n而数据仓库(Data Warehouse)是近年来针对大批数据的分析利用而提出来的概念。它的基本思想是：现实中的大量原始数据与实际的应用是有相当距离的，为了能够切实为企业管理者提出对管理真正有用的信息，就要对信息或数据进行多次的加工或提炼，从而得出许多派生的或综合的数据\n信息库的特点：信息库是一个包罗万象的，随着项目进度不断修改与补充的数据集合。作为软件开发全过程的信息管理总枢纽，它的数据结构是相当复杂的，而且会随着时间不断变化，因此保持一致性的任务变得十分复杂和艰巨。\n信息库的研究主要在以下方面:\n\n信息库的内容应当包括哪些方面\n所述软件的工作环境、功能需求、性能要求、有关的各种信息来源的状况、用户状况、硬件环境以及在该专业领域中的作用等外部信息\n需求分析阶段中收集的有关用户的各种信息，包括用户本身提供的\n逻辑设计阶段的各种调查材料和由此生成的各种文档，包括调查记录 、原始数据、报表及单证的样本、绘制的各种图以及最后生成的系统说明书\n编程阶段的所有成果，包括程序代码、框图、变量说明、测试情况（测试数据及输出结果）、验收报告、使用说明等。\n运行及使用情况的详细记录\n维护及修改的情况\n项目管理的有关信息、人员变更、资金投入、进度计划及实施情况。还包括版本信息\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n信息库应当具备哪些管理功能\n需要把计算机内外的信息存储统一起来管理\n信息库面对 分析人员、程序员和维护人员（一般不直接面对用户）等不同的对象，由于他们各有各的权限和使用目标，所以除了规定复杂的内部结构以存放信息外，还需要认真设计有关的界面\n\n\n如何保持一致性\n由于软件环境、需求以及它本身都在不断变化，信息库中的信息需要不断更新\n这里说的更新与一般的更新不同，信息库中的内容一般不删除，当有新的信息需要存入时，旧的信息只是加上时间标志移入历史信息中去，并且它还与新的信息保持着历史的、逻辑的联系\n一个模块的更新往往带来其他模块的相应变更，并不是一个模块更新后就能够自然而然地与其他模块一起构成一个新的版本\n对于一些国际性的大软件公司来说，各种语言的资料之间 的一致性同样需要认真的、细致的组织与安排\n\n\n\n因保持信息库的一致性，是信息库研究中的核心问题\n3.4 人机界面及其管理《用户界面程序设计–原理与实例》。这本书讨论了一系列原则\n关于用户界面的基本原则， 该书列举了以下几个方面：\n\n用户界面的主要功能是通信\n用户界面必须始终一致\n用户界面必须使用户随时掌握任务的进展状况\n用户界面必须能提供帮助\n宁可让程序多干，不可让用户多干 \n\n该书还特别讨论了在人机界面设计中经常遇到的一个困难的权衡：灵活性和一致性的矛盾\nIBM的AD/Cycle提供了应用系统及其开发过程中的一个总框架，其应用系统框架为系统应用体系结构（Systems Application Architecture——SAA）\nSAA包括三个方向的接口：程序员接口（CPI）、通信接口（CCS）、用户接口（CUA）\n人机交互的手段可归结于8个方面：键盘操作、屏幕滚动、菜单选择、帮助系统、鼠标操作、色彩应用、数据录入、信息显示\n由于技术的发展，这个归纳已经不能说是完全的了\n3.5 项目管理与版本管理项目管理项目管理是指与固定的生产线上的日常生产管理不同的，具有更大的变动性，时间性的另一类挂你任务。\n项目管理具有以下四个突出的特点：\n\n子任务多，关系复杂\n任务不可重复，形式不断变更\n协调组织**的任务十分突出，资源浪费闲置的风险与合理地优化组合、提高效益的机会并存\n信息处理工作的作用与意义更为突出\n\n进度和质量对于软件开发来说，是最关键的问题\n但是，软件开发工作还有自己的不同于一般项目管理的特点。一般工程项目没有版本更新的问题\n项目管理的基本目标：\n\n使产品(或工程)的质量得到有效的控制\n保证整个系统按预定的进度完成\n有效地利用各种资源，尽可能使资源的闲置与浪费减少\n控制与降低成本 \n\n项目管理中的方法：\n\n工程计划网络方法（计划评审技术）\n甘特图（Gantt Chart）\n检查点方法（Check Point）\n排队论等\n\n版本管理版本管理的核心是保证两个一致性。从时间上说，它的主要关心点是系统的逐步完善，以前达到的成果不要丢失\n每一步新的进步都要切实与以前的工作一致，是改进而不是破坏或降低系统的已有功能\n每一局部与整体保持一致,合理地判断每一次修改的必要性及影响范围\n版本管理的具体方法：\n\n规定长远的版本更新计划\n制定版本有关的信息范围及收集、管理方法\n在项目组内明确分工\n在程序编写、测试、文档缩写等工作中贯穿项目管理的思想及要求\n\n用户的反馈信息是项目管理与版本管理的重要资源。因此在信息库的组织、项目管理或版本管理中，都要有其对应的位置\n第4章 软件开发工具的技术要素由于软件开发工具一般都较为复杂、复杂，所以它的功能设计与总体结构是必须首先认真考虑的\n4.1 基本功能与一般结构基本功能软件开发工具的基本功能:\n\n提供描述软件状况及其开发过程的概念模式，以协助软件开发人员认识软件工作的环境与要求，合理地组织与管理软件开发的工作过程。\n提供存储和管理有关信息的机制与手段。简单地说，就是提供一个信息库和一个人机界面\n帮助使用者编制、生成及修改各种文档。（实现需信息库的支持）\n帮助使用者编写程序代码，即一般常说的代码生成\n对于历史信息进行跨生命周期的管理，把项目进度与版本更新的有关信息科学地管理**起来\n\n完整的、一体化的软件开发工具应当具备以上这些功能\n一般结构总控和人机界面处于一般结构中的中间位置，它是使用者和软件开发工具之间交流信息，实现所有的支持功能的桥梁。总控与人机界面的中心位置是不言而喻的、顺理成章的。\n系统中的另一个重要部分是信息库及其管理。信息库的结构框架反映了人们对软件产品及软件开发过程的基本看法，信息库内容的丰富程度是软件开发工具的功能与作用的最基本的依据。如果说总控和人机界面使用户面对一个良好的工作环境的话，那么在这个环境中，工作的范围及深度取决于信息库的功能和内容\n除了直接通过人机对话提供查询之外，最重要的两个信息就是代码生成与文档生成\n一般结构中没有反映出来的另一个技术要素是项目管理和版本管理\n如果要实现跨越开发周期的信息共享、知识重用以及软件重用，那么它的信息管理功能就必须大大加强\n4.2 总控与人机界面作为一个完整的、一体化的软件开发工具，总控和人机界面处于中心的位置\n解决软件配置或集成（Software Configuration）的问题的实质: 设立一个有效的总控，它能够在各个具体工具之上、实现信息的正确传递与转换，帮助人们完成协调与配合的工作，从而形成一个统一的、完整的支撑环境，并通过一个统一的、友好的人机界面与用户对话\n总控和人机界面的技术要点：面向使用者、保证信息的准确传递、保证系统的开放性（或灵活性）\nAD/Cycle是IBM根据多年软件开发的经验形成的对于软件开发过程的抽象理解，将软件开发过程的每一个周期分为五个阶段：\n\n需求分析阶段\n\n任务是建立逻辑模型\n首先建立起软件所处领域或环境的模型\n其次建立软件所要处理的信息的静态模型，即数据模型\n最后建立信息流通的模型，即信息的来源、去向、存储及处理的逻辑过程\n\n\n分析设计阶段\n\n包括数据结构的详细设计、处理过程的详细设计、子系统或模块的划分以及它们之间相互联系的具体规定\n还应当完成屏幕设计、报表设计、数据库的物理设计\n\n\n编码阶段\n\n编码阶段指具体地编写软件的阶段，这里是实际的程序代码的产生点\n\n\n测试阶段\n测试阶段指是对已经完成的各个模块或子系统进行测试、调整，以便最终形成完整的软件。这就需要准备测试数据，收集与分析测试结果\n\n维护阶段 维护阶段主要是组织管理软件的日常运行，收集运行中的状态信息及出现的问题，并及时进行局部的修改与完善 \n所谓面向用户，最根本的是要立足于符合实际的应用领域，符合软件开发人员思路的概念模型\n\n\n软件开发的技术原则:\n\n面向用户原则，具体体现在两方面：\n\n\n总控对各部分的调度与安排应当符合上述模式\n向用户提供的统一界面应当体现这个模式\n\n\n保证各部分之间信息的准确传递。信息能否准确地从一个部分传送到另一个部分，就成为一体化是否成功的关键\n\n保证系统的开放型或灵活性\n\n\n以上三项原则当然是对整个软件开发工具而言的，但是它们的实现，主要体现在总控和人机界面这个中心环节中\n4.3 信息库及其管理信息库(Repository)是软件开发工具的基础。合理地组织信息库的内容，加强信息库的管理内容，是软件开发工具的又一个重要的技术要素。\n信息库的技术要素：\n\n信息库的内容\n\n信息库的组织方式\n\n信息库的管理功能\n\n历史信息的处理方法\n\n\n1. 信息库的内容\n关于软件应用的领域与环境的状况。主要用于分析设计阶段\n\n设计成果，包括逻辑设计与物理设计的成果。主要包括数据流程图、数据字典、系统结构图、数据库的逻辑设计、各模块的设计要求，以及由此形成的设计文档。主要是为了组织实际编码工作\n\n运行状况的记录。包括 运行运行效率、作用、用户反映、故障情况、故障的原因及处理情况\n\n有关项目管理与版本管理的信息。这属于跨生命周期的信息\n\n\n2. 信息库的组织方式人们最初的思路是集中存储，集中存储的思想是建立一个庞大的数据库，把上述各种信息都存放在这个数据库中，而各种工具或实现各项单项功能的模块则围绕在这个信息库的周围，对这个信息进行录入、修改、查询、删除。这种想法比较自然，而且充分利用已有的数据库技术，比较容易保持一致性。但是，它的缺点是与前面所要求的模块化相冲突\n于是就有分散存储的想法出现，即把信息分别存入不同的数据库，由不同的功能模块来处理。这种方法的优点是易于变更和剪裁，一旦某一部分发生变更，不影响整个系统。但是各部分之间的一致性无从保证。针对这个问题，专家提出了第三种思路：逻辑上统一，物理上分散，设立统一的信息库管理模块来进行管理。它通过信息库管理模块来对分散的各个数据库进行存取，并进行一致性的检查与维护。这样一来，数据库与模块都实现了模块化，既保持了一致性，又保证了灵活性\n\n3. 信息库的管理功能图4-1中粗略地画出了三项，录入更新、使用查询、一致性维护。其中许多功能是数据库管理系统所具备的\n与一般数据库管理系统不同的有：\n\n信息之间逻辑联系的识别与记录\n如何实现定量信息与文字信息的协调一致\n\n4. 历史信息的处理方法如何处理历史信息是信息库的一个困难问题\n实际操作中出现2个具体的困难：\n\n历史信息的数量太大，占用存储设备过多\n解决方法：一般采用脱机备份的方法解决\n\n\n历史信息格式不一致，难以有效地利用\n解决方法：加强标准化，稳定数据结构\n这需要应用一些智能方法，使得跨越生命周期的信息得以相互转化、实现共享与重用\n\n\n\n4.4 文档生成与代码生成除了通过屏幕上的对话获取信息支持之外，使用者从软件开发工具得到的最主要的帮助，应当来自文档生成与代码生成两种方式\n1. 代码生成(Code Generator)代码生成器的基本任务是根据设计要求,自动地或者半自动地产生响应的某种语言的程序\n输出程序代码是这个模块的目标，输出的代码有两种情况：\n\n某种高级程序设计语言的代码\n优点：使用者可以在这基础上进一步修改加工，即利用自动生成模块作为一个原型，然后在此基础上形成自己所要求的系统（或系统的一部分）\n缺点：功能比较死，效率不高，因此还需要修改\n\n\n某种机器（包括硬件和操作系统）环境下可运行的机器指令\n优点：可以直接运行，从而立即检查是否符合要求\n\n\n\n原则：程序设计归根到底只要由人来做的，任何工具都只能发挥帮助和支持的作用，而不能完全代替人来工作\n生成代码时依据的是三个方面的资料：\n\n信息库里已有的有关资料\n代码生成器还要利用各种标准模块的框架和构件\n使用者通过屏幕前 的操作送入的信息\n\n2. 文档生成文档生成的功能与代码生成相比，数量更大，内容更复杂\n文档生成包括：文章、表格、图形\n4.5 项目管理与版本管理从技术上讲，它们的核心问题是跨生命周期的信息的管理问题。前面章节提到的历史信息的处理也是项目管理与版本管理的关键问题\n项目数据库实际上是信息库的一个组成部分。它的内容与另外几部分不同，它记录的是项目本身进展的各种信息。这里的关键是质量、进度、资源配置和费用四个基本问题\n在AD/Cycle的总框架中，对项目管理应当考虑的范围给出了如下的规定：\n\n研究与确定开发工作的方针与方法\n开发任务的划分与分工\n资源状况\n人员情况\n变更情况\n质量情况\n\n关于版本的信息，有的工具中把它作为项目数据库的一部分处理。它的主要内容是各个版本的编号、功能改变、模块组成、文档状况、推出时间、用户数量（或用户名单）、用户反映、封存情况等。\n第5章 软件开发工具的使用与开发人们首先遇到的问题往往是购买现成的软件开发工具还是自己开发专用的工具。对于这个问题，不能简单地回答是或不是，它与具体工作的条件、环境、人员素质、项目特征都有不可分割的联系\n5.1 购置与开发权衡购买市场上已有的软件开发工具，能帮助人们：\n\n减轻一定的工作负担\n使工作的组织管理比较规范\n信息的管理与检索比较方便\n\n真正经过考验的、一体化的软件开发工具还不多。他们的作用于可靠程度还不尽人意。\n自己开发的优点：\n\n目标明确，切实符合自己的需要，便于进一步扩容和升级\n不存在引进外面产品时不可避免的冲突与不一致\n\n","slug":"examination/tool_for_software_development","date":"2021-10-03T11:37:25.000Z","categories_index":"应试","tags_index":"升本,自考","author_index":"Joshlee"}]