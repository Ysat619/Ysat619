{"name":"数据结构","slug":"数据结构","count":3,"postlist":[{"title":"一文搞懂树状数组","uid":"b6bea84273156013b3326c84401baf8a","slug":"data-structure/binary-indexed-tree","date":"2022-02-17T10:00:41.000Z","updated":"2022-07-14T04:43:58.382Z","comments":true,"path":"api/articles/data-structure/binary-indexed-tree.json","keywords":null,"cover":[],"text":" 介绍树状数组是由Peter M. Fenwick提出的二叉索引树（Binary Indexed Trees）结构，最初用于数据压缩。在算法竞赛中，常用于区间操作。 类似的数据结构还有线段树，线段树可以实现树状数组所有的操作，甚至更多。而树状数组代码简洁，运行速度也线段树快，占用...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":3,"path":"api/categories/数据结构.json"}],"tags":[{"name":"树状数组","slug":"树状数组","count":1,"path":"api/tags/树状数组.json"},{"name":"数据结构","slug":"数据结构","count":1,"path":"api/tags/数据结构.json"}],"author":{"name":"Jx","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"图","uid":"0b9c5318228023fdd1e179358a45ba07","slug":"data-structure/graph","date":"2022-01-12T11:37:25.000Z","updated":"2022-11-12T00:04:34.332Z","comments":true,"path":"api/articles/data-structure/graph.json","keywords":null,"cover":[],"text":" 图的基本概念 图是一种复杂的非线性结构。在线性结构中，数据元素之间满足唯一的线性关系，每个数据元素（除第一个和最后一个）只有一个直接前趋和一个直接后继；在树形结构中，数据元素之间有明显的层次关系，并且每个数据元素只与上一层中的一个元素（parent node）及下一层的多个元素...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":3,"path":"api/categories/数据结构.json"}],"tags":[{"name":"图论","slug":"图论","count":1,"path":"api/tags/图论.json"},{"name":"考研","slug":"考研","count":2,"path":"api/tags/考研.json"}],"author":{"name":"Jx","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"树和二叉树","uid":"50552977e0ec8094596ba83ac872ee52","slug":"data-structure/tree","date":"2022-01-14T05:11:25.000Z","updated":"2023-01-08T14:25:24.417Z","comments":true,"path":"api/articles/data-structure/tree.json","keywords":null,"cover":[],"text":" 树的性质 结点数 = 总度数 + 1 度为 的数和 叉树的区别 度为 的树: 至少有一个结点的度 = 叉树: 允许所有节点的度 &lt; 度为 的树: 一定是非空树，至少有 个结点 叉树：可以是空树 度为 的树第 层最多有 个结点（）， 叉树同理 高度为 的 叉树最多有 个结点...","link":"","photos":[],"count_time":{"symbolsCount":"32k","symbolsTime":"29 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":3,"path":"api/categories/数据结构.json"}],"tags":[{"name":"考研","slug":"考研","count":2,"path":"api/tags/考研.json"},{"name":"树","slug":"树","count":1,"path":"api/tags/树.json"}],"author":{"name":"Jx","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}