{"title":"《汇编语言》第4版.王爽 Lab 全集","uid":"8559ab85236f0cb2d5fafd0366ccdb0b","slug":"assembly/Assembly_Language_Lab_In_8086_PC","date":"2023-08-22T12:56:51.000Z","updated":"2023-09-03T14:40:40.639Z","comments":true,"path":"api/articles/assembly/Assembly_Language_Lab_In_8086_PC.json","keywords":null,"cover":[],"content":"<h1 id=\"Assembly-Language-Lab-In-8086PC\"><a href=\"#Assembly-Language-Lab-In-8086PC\" class=\"headerlink\" title=\"Assembly Language Lab In 8086PC\"></a>Assembly Language Lab In 8086PC</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用教材：《汇编语言》第 4 版 - 王爽</p></blockquote>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p>由于王爽的《汇编语言》是以 <code>Intel 8086</code> CPU为基础进行教学的，全书处于实模式（Real Mode）中进行讲解，在 Real Mode 下 CPU 以 16 位模式运行，可以访问 1MB 的物理内存，并且没有内存保护的机制，可以随意访问和修改其他程序的内存，这是相当的有利于我们学习~</p>\n<p>而现代的操作系统，如 Windows10、Windows11 通常使用的是保护模式（Protected Mode）和长模式（Long Mode），这也就意味着我们想要运行书中的汇编代码，需要使用模拟器（DOSBox）去模拟早期的 DOS 操作系统环境。</p>\n<p>下面进入正题，将介绍如何在现代的操作系统中搭建 8086CPU 的环境</p>\n<ol>\n<li>下载并安装 <a href=\"https://www.dosbox.com/\">DOSBox</a></li>\n<li>下载 <a href=\"https://github.com/microsoft/MS-DOS/blob/master/v2.0/bin/DEBUG.COM\">DEBUG.COM</a> 文件并放入 <code>[Your Folder]</code> 内，注意<code>[Your Folder]</code> 指的是你自己的文件夹路径，请将此替换成你自己的路径，如 <code>D:\\Debug</code> 。 <em>// 在MS-DOS中，扩展名为<code>.COM</code> 的文件通常是可执行的二进制文件，全称为”Command File”，即“命令文件”</em> </li>\n<li>配置 DOSBox<ol>\n<li><strong>打开配置文件</strong>：打开 DOSBox 的安装目录，双击运行<code>DOSBox 0.74-3 Options.bat</code>，成功运行后会自动打开配置文件 <code>dosbox-0.74-3.conf</code>。若你使用的是 Mac OS ，则可以直接打开配置文件 <code>~/Library/Preferences/DOSBox 0.73 Preferences</code>，其余方法和 Windows 同理。</li>\n<li><strong>添加启动后自动执行的命令</strong>：直接前往配置文件的底部，在<code>[autoexec]</code>下添加下面代码（记得改成自己的路径）</li>\n</ol>\n</li>\n</ol>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">MOUNT C [Your Folder]\nC:\nDEBUG.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>最后保存文件然后退出。</p>\n<p>做到这里，将DOSBox运行起来，不出意外的话会自动运行 <code>debug</code> 程序，可以输入 <code>r</code> 命令验证一下，效果如下，这样就大功告成啦~</p>\n<p><img src=\"../../images/assembly/asm_lab_01.png\"></p>\n<h2 id=\"实验1-查看CPU和内存，用机器指令和汇编指令编程\"><a href=\"#实验1-查看CPU和内存，用机器指令和汇编指令编程\" class=\"headerlink\" title=\"实验1 查看CPU和内存，用机器指令和汇编指令编程\"></a>实验1 查看CPU和内存，用机器指令和汇编指令编程</h2><h3 id=\"Register-查看、改变CPU寄存器内容\"><a href=\"#Register-查看、改变CPU寄存器内容\" class=\"headerlink\" title=\"(Register) 查看、改变CPU寄存器内容\"></a>(Register) 查看、改变CPU寄存器内容</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>r [register]</code></p></blockquote>\n<p>查看所有的 8086 寄存器的内容 <code>r</code>：</p>\n<p><img src=\"../../images/assembly/asm_lab_02.png\"></p>\n<p>改变寄存器的内容 <code>r [寄存器名称]</code>：</p>\n<p><img src=\"../../images/assembly/asm_lab_03.png\"></p>\n<h3 id=\"Dump-查看内存\"><a href=\"#Dump-查看内存\" class=\"headerlink\" title=\"(Dump) 查看内存\"></a>(Dump) 查看内存</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>d [range]</code></p></blockquote>\n<ul>\n<li><code>d [段地址:偏移地址]</code><ul>\n<li>查看内存 10000H 处的内容：<code>d 1000:0</code></li>\n<li>查看内存 11451H 处的内容：<code>d 1145:1</code></li>\n</ul>\n</li>\n<li><code>d [段地址:偏移地址] [长度]</code><ul>\n<li>查看 1000:0~1000:9 中的内容：<code>d 1000:0 9</code></li>\n<li>仅查看内存单元 10000H 中的内容：<code>d 1000:0 0</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Enter-改写内存内容\"><a href=\"#Enter-改写内存内容\" class=\"headerlink\" title=\"(Enter) 改写内存内容\"></a>(Enter) 改写内存内容</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>e address [list]</code></p></blockquote>\n<ul>\n<li>将内存 1000:0<del>1000:9 单元中的内容分别写为1</del>9: <code>e 1000:0 0 1 2 3 4 5 6 7 8 9</code></li>\n<li>向内存 1000:10 处写入字符串”Hello, World”：<code>e 1000:10 \"Hello, World\"</code></li>\n</ul>\n<p>同理也可以在内存中写入机器码 <code>e 1000:0 b8 01 00 b9 02 00 01 c8</code></p>\n<table>\n<thead>\n<tr>\n<th>机器码</th>\n<th>对应的汇编指令</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>b80100</td>\n<td><code>mov ax,0001</code></td>\n</tr>\n<tr>\n<td>b90200</td>\n<td><code>mov cx,0002</code></td>\n</tr>\n<tr>\n<td>01c8</td>\n<td><code>add ax cx</code></td>\n</tr>\n</tbody></table>\n<p>接下来我们可以用 <code>u</code> 命令进行反汇编d 200</p>\n<h3 id=\"Unassemble-将内存中的机器指令翻译成汇编指令\"><a href=\"#Unassemble-将内存中的机器指令翻译成汇编指令\" class=\"headerlink\" title=\"(Unassemble) 将内存中的机器指令翻译成汇编指令\"></a>(Unassemble) 将内存中的机器指令翻译成汇编指令</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>u [range]</code></p></blockquote>\n<p><code>u 1000:0</code>:</p>\n<p><img src=\"../../images/assembly/asm_lab_05.png\"></p>\n<h3 id=\"Trace-执行一条机器指令\"><a href=\"#Trace-执行一条机器指令\" class=\"headerlink\" title=\"(Trace) 执行一条机器指令\"></a>(Trace) 执行一条机器指令</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>t [=address] [number]</code></p></blockquote>\n<p>在内存地址 1000:0 处执行并追溯两条指令：</p>\n<p><img src=\"../../images/assembly/asm_lab_06.png\"></p>\n<h3 id=\"Assemble-以汇编指令的格式在内存中写入一条机器指令\"><a href=\"#Assemble-以汇编指令的格式在内存中写入一条机器指令\" class=\"headerlink\" title=\"(Assemble) 以汇编指令的格式在内存中写入一条机器指令\"></a>(Assemble) 以汇编指令的格式在内存中写入一条机器指令</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>a [address]</code></p></blockquote>\n<p>从内存 1000:0 开始写入指令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-a 1000:0\n1000:0000 mov ax,1\n1000:0003 mov bx,2\n1000:0006 mov cx,3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"实验2-用机器指令和汇编指令编程\"><a href=\"#实验2-用机器指令和汇编指令编程\" class=\"headerlink\" title=\"实验2 用机器指令和汇编指令编程\"></a>实验2 用机器指令和汇编指令编程</h2><h3 id=\"实验任务-1\"><a href=\"#实验任务-1\" class=\"headerlink\" title=\"实验任务 1\"></a>实验任务 1</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用 Debug，将下面的程序段写入内存，逐条执行，根据指令执行后的实际运行情况填空</p></blockquote>\n<hr>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">mov <span class=\"token register variable\">ax</span>,ffff\nmov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n\nmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">2200</span>\nmov <span class=\"token register variable\">ss</span>,<span class=\"token register variable\">ax</span>\n\nmov <span class=\"token register variable\">sp</span>,<span class=\"token number\">0100</span>\n\nmov <span class=\"token register variable\">ax</span>,<span class=\"token operator\">[</span><span class=\"token number\">0</span><span class=\"token operator\">]</span>            <span class=\"token comment\">;ax=C0EA</span>\nadd <span class=\"token register variable\">ax</span>,<span class=\"token operator\">[</span><span class=\"token number\">2</span><span class=\"token operator\">]</span>            <span class=\"token comment\">;ax=C0FC</span>\nmov <span class=\"token register variable\">bx</span>,<span class=\"token operator\">[</span><span class=\"token number\">4</span><span class=\"token operator\">]</span>            <span class=\"token comment\">;bx=30F0</span>\nadd <span class=\"token register variable\">bx</span>,<span class=\"token operator\">[</span><span class=\"token number\">6</span><span class=\"token operator\">]</span>            <span class=\"token comment\">;bx=6021</span>\n\npush <span class=\"token register variable\">ax</span>               <span class=\"token comment\">;sp=00FE; 修改的内存单元的地址是 2200:00FE 内容为 C0FC</span>\npush <span class=\"token register variable\">bx</span>               <span class=\"token comment\">;sp=00FC; 修改的内存单元的地址是 2200:00FC 内容为 6021</span>\npop <span class=\"token register variable\">ax</span>                <span class=\"token comment\">;sp=00FE; ax=6021   </span>\npop <span class=\"token register variable\">bx</span>                <span class=\"token comment\">;sp=0100; bx=C0FC</span>\n\npush <span class=\"token operator\">[</span><span class=\"token number\">4</span><span class=\"token operator\">]</span>              <span class=\"token comment\">;sp=00FE; 修改的内存单元的地址是 2200:00FE 内容为 30F0</span>\npush <span class=\"token operator\">[</span><span class=\"token number\">6</span><span class=\"token operator\">]</span>              <span class=\"token comment\">;sp=00FC; 修改的内存单元的地址是 2200:00FC 内容为 2F31</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"实验任务-2\"><a href=\"#实验任务-2\" class=\"headerlink\" title=\"实验任务 2\"></a>实验任务 2</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>观察下图中的实验过程，然后分析：为什么2000:0~2000:f中的内容会发生改变？<br>可能要再做些实验才能发现其中的规律。如果你在这里就正确回答了这个问题，那么要恭喜你，因为你有很好的悟性。大多数的学习者对这个问题还是比较迷惑的，不过不要紧，因为随着课程的进行，这个问题的答案将逐渐变得显而易见。</p></blockquote>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_07.png\"></p>\n<p>2023-8-8 20:51:28：确确实实，执行了 <code>MOV SS,AX</code> 后 <code>MOV SP 10</code> 也会自动执行，栈内存会被填充一些数据，通过分析发现被填充的是 <code>IP</code>, <code>DS</code> 和 <code>ES</code>，但具体用处还有待研究</p>\n<p><img src=\"../../images/assembly/asm_lab_08.png\"></p>\n<h2 id=\"实验3-编程、编译、连接、跟踪\"><a href=\"#实验3-编程、编译、连接、跟踪\" class=\"headerlink\" title=\"实验3 编程、编译、连接、跟踪\"></a>实验3 编程、编译、连接、跟踪</h2><h3 id=\"实验任务1\"><a href=\"#实验任务1\" class=\"headerlink\" title=\"实验任务1\"></a>实验任务1</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>将下面的程序保存为 <code>t1.asm</code> 文件，将其生成可执行文件 <code>t1.exe</code></p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:codesg\n\ncodesg segment\n\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">2000H</span>\n\tmov <span class=\"token register variable\">ss</span>,<span class=\"token register variable\">ax</span>\n\tmov <span class=\"token register variable\">sp</span>,<span class=\"token number\">0</span>\n\tadd <span class=\"token register variable\">sp</span>,<span class=\"token number\">10</span>\n\tpop <span class=\"token register variable\">ax</span>\n\tpop <span class=\"token register variable\">bx</span>\n\tpush <span class=\"token register variable\">ax</span>\n\tpush <span class=\"token register variable\">bx</span>\n\tpop <span class=\"token register variable\">ax</span>\n\tpop <span class=\"token register variable\">bx</span>\n\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00H</span>\n\tint <span class=\"token number\">21H</span>\n\ncodesg ends\n\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote>\n<hr>\n<p>由于我们使用的是 <code>DOSBox</code>，需要下载<a href=\"https://github.com/microsoft/MS-DOS/blob/master/v2.0/bin/MASM.EXE\">编译器(masm)</a>，<a href=\"https://github.com/microsoft/MS-DOS/blob/master/v2.0/bin/LINK.EXE\">连接器(link)</a>和<a href=\"http://www.thealmightyguru.com/Wiki/index.php?title=MS-DOS_Editor\">编辑器(edit)</a>，并且将其放到你所挂载的目录<code>[Your Folder]</code>，如 <code>D:\\debug</code></p>\n<p>出于个人习惯问题，我比较喜欢用一些流行的编辑器，比如 <code>Sublime Text</code>。我们在 <code>[Your Folder]</code> 中新建个文件，并改名为 <code>t1.asm</code>，然后开始写代码。</p>\n<p>写完代码之后，我们重启 DOSBox 以重新挂载目录，然后开始编译 <code>masm c:\\t1;</code> 得到<code>T1.OBJ</code>，最后进行连接 <code>link t1;</code> 得到可执行文件 <code>T1.EXE</code></p>\n<h3 id=\"实验任务2\"><a href=\"#实验任务2\" class=\"headerlink\" title=\"实验任务2\"></a>实验任务2</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>用Debug跟踪 <code>t1.exe</code> 的执行过程，写出每一步执行后，相关寄存器的内容和栈顶的内容</p></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<p>用 Debug 运行 t1.exe: <code>debug T1.EXE</code></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_09.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_10.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_19.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_11.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_12.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_13.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_14.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_15.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_16.png\"></p>\n<hr>\n<p><img src=\"../../images/assembly/asm_lab_17.png\"></p>\n<h3 id=\"实验任务3\"><a href=\"#实验任务3\" class=\"headerlink\" title=\"实验任务3\"></a>实验任务3</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>PSP的头两个字节是<code>CD 20</code>，用 Debug 加载 <code>t1.exe</code>，查看 PSP 的内容</p></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<p>通过 <code>r</code> 命令我们可知 <code>CS</code> 为 <code>04AD</code>，那么PSP的地址则为 <code>04ADH-10H=049D</code>，查看其内存，发现开头两个字节确实如此</p>\n<p><img src=\"../../images/assembly/asm_lab_18.png\"></p>\n<p>可以看到 PSP 的首个指令为 <code>INT 20</code> ，是一个软中断（Software interrupt）指令，用于向 DOS 操作系统发出终止程序的请求。</p>\n<h2 id=\"实验4-bx-和loop的使用\"><a href=\"#实验4-bx-和loop的使用\" class=\"headerlink\" title=\"实验4 [bx]和loop的使用\"></a>实验4 <code>[bx]</code>和<code>loop</code>的使用</h2><h3 id=\"实验任务1-1\"><a href=\"#实验任务1-1\" class=\"headerlink\" title=\"实验任务1\"></a>实验任务1</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>编程，向内存 <code>0:200</code> ~ <code>0:23F</code> 依次传递数据 0~63(3FH)</p></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:codesg\n\ncodesg segment\n\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">0</span>\n\tmov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n\tmov <span class=\"token register variable\">bx</span>,<span class=\"token number\">200h</span>\n\tmov <span class=\"token register variable\">cx</span>,<span class=\"token number\">40h</span>\n<span class=\"token label function\">s:</span>  mov <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>,<span class=\"token register variable\">ax</span>\n\tinc <span class=\"token register variable\">bx</span>\n\tinc <span class=\"token register variable\">ax</span>\n\tloop s\n\t\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n\tint <span class=\"token number\">21h</span>\n\ncodesg ends\n\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"实验任务2-1\"><a href=\"#实验任务2-1\" class=\"headerlink\" title=\"实验任务2\"></a>实验任务2</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>编程，向内存 <code>0:200</code> ~ <code>0:23F</code> 依次传递数据 0~63(3FH)，程序中只能使用 9 条指令，9 条指令中包括 <code>mov ax,4c00h</code> 和 <code>int 21h</code></p></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\"><span class=\"token comment\">; Acknowledgement: chan_honman </span>\nassume <span class=\"token register variable\">cs</span>:codesg\n\ncodesg segment\n\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">20h</span>\n\tmov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n\tmov <span class=\"token register variable\">bx</span>,<span class=\"token number\">0</span>\n\tmov <span class=\"token register variable\">cx</span>,<span class=\"token number\">40h</span>\n<span class=\"token label function\">s:</span>  mov <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>,<span class=\"token register variable\">bx</span>\n\tinc <span class=\"token register variable\">bx</span>\n\tloop s\n\t\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n\tint <span class=\"token number\">21h</span>\n\ncodesg ends\n\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"实验任务3-1\"><a href=\"#实验任务3-1\" class=\"headerlink\" title=\"实验任务3\"></a>实验任务3</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>下面的程序的功能是将 <code>mov ax,4c00h</code>  之前的指令复制到内存 0:200 处，补全程序。上机调试，跟踪运行结果。</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code\n\ncode segment\n\nmov <span class=\"token register variable\">ax</span>,____\nmov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\nmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">0020h</span>\nmov <span class=\"token register variable\">es</span>,<span class=\"token register variable\">ax</span>\nmov <span class=\"token register variable\">bx</span>,<span class=\"token number\">0</span>\nmov <span class=\"token register variable\">cx</span>,____\n<span class=\"token label function\">s:</span>  mov <span class=\"token register variable\">al</span>,<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>\nmov <span class=\"token register variable\">es</span>:<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>,<span class=\"token register variable\">al</span>\ninc <span class=\"token register variable\">bx</span>\nloop s\nmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\nint <span class=\"token number\">21h</span>\n\ncode ends\n\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>提示：</p>\n<ol>\n<li>复制的是什么？从哪里到哪里？</li>\n<li>复制的是什么？有多少个字节？你如何知道要复制的字节的数量？</li>\n</ol></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<p>复制的是可执行文件的机器指令，从 <code>cs</code> 复制到内存 20:0 处，故第一个空填入 <strong>cs</strong></p>\n<p>通过 <code>u</code> 命令对程序进行反汇编，可得知每条指令对应的机器码和其所占用的字节数</p>\n<ul>\n<li><code>inc register</code> 这种类型的指令占用 1 Byte</li>\n<li><code>mov register,register</code> 和 <code>loop</code> 类型的指令占用 2 Byte，如 <code>MOV DS,AX</code>，对应的机器码为<code>8ED8</code></li>\n<li><code>mov register,value</code> 这种类型的指令占用 3 Byte</li>\n</ul>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code\n\ncode segment\n\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token register variable\">cs</span>          <span class=\"token comment\">; 2B</span>\n\tmov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>          <span class=\"token comment\">; 2B</span>\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">0020h</span>       <span class=\"token comment\">; 3B</span>\n\tmov <span class=\"token register variable\">es</span>,<span class=\"token register variable\">ax</span>          <span class=\"token comment\">; 2B</span>\n\tmov <span class=\"token register variable\">bx</span>,<span class=\"token number\">0</span>           <span class=\"token comment\">; 3B</span>\n\tmov <span class=\"token register variable\">cx</span>,<span class=\"token number\">23</span>          <span class=\"token comment\">; 3B</span>\n<span class=\"token label function\">s:</span>  mov <span class=\"token register variable\">al</span>,<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>        <span class=\"token comment\">; 2B</span>\n\tmov <span class=\"token register variable\">es</span>:<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>,<span class=\"token register variable\">al</span>     <span class=\"token comment\">; 2B</span>\n\tinc <span class=\"token register variable\">bx</span>             <span class=\"token comment\">; 1B</span>\n\tloop s             <span class=\"token comment\">; 2B</span>\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n\tint <span class=\"token number\">21h</span>\n\ncode ends\n\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>计算逐个指令后，可得出 <code>mov ax,4c00h</code> 之前的指令共占 <strong>22</strong> 字节，又因为每次 loop 只会复制一个字节，则需要循环 23 次，故第二个空填入 <strong>23</strong></p>\n<h2 id=\"实验-5-编写、调试具有多个段的程序\"><a href=\"#实验-5-编写、调试具有多个段的程序\" class=\"headerlink\" title=\"实验 5 编写、调试具有多个段的程序\"></a>实验 5 编写、调试具有多个段的程序</h2><h3 id=\"实验任务-1-1\"><a href=\"#实验任务-1-1\" class=\"headerlink\" title=\"实验任务 1\"></a>实验任务 1</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 将下面的程序编译、连接，用 Debug 加载、跟踪，然后回答问题。</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code,<span class=\"token register variable\">ds</span>:data,<span class=\"token register variable\">ss</span>:stack\n\ndata segment\n\tdw <span class=\"token number\">0123h</span>,<span class=\"token number\">0456h</span>,<span class=\"token number\">0789h</span>,<span class=\"token number\">0abch</span>,<span class=\"token number\">0defh</span>,<span class=\"token number\">0fedh</span>,<span class=\"token number\">0cbah</span>,<span class=\"token number\">0987h</span>\ndata ends\n\nstack segment\n\tdw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nstack ends\n\ncode segment\n\n<span class=\"token label function\">start:</span> mov <span class=\"token register variable\">ax</span>,stack\n       mov <span class=\"token register variable\">ss</span>,<span class=\"token register variable\">ax</span>\n       mov <span class=\"token register variable\">sp</span>,<span class=\"token number\">16</span>\n       \n       mov <span class=\"token register variable\">ax</span>,data\n       mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n       \n       push <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">0</span><span class=\"token operator\">]</span>\n       push <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">2</span><span class=\"token operator\">]</span>\n       pop <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">2</span><span class=\"token operator\">]</span>\n       pop <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">0</span><span class=\"token operator\">]</span>\n       \n       mov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n       int <span class=\"token number\">21h</span>\n\ncode ends\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>CPU执行程序，程序返回前，data 段中的数据为多少？</li>\n<li>CPU 执行程序，程序返回前，<code>cs=_____</code>、<code>ss=_____</code>、<code>ds=_____</code>。</li>\n<li>设程序加载后，code 段的段地址为 X，则 data 段的段地址为 <code>_____</code>，stack 段的段地址为 <code>_____</code>。</li>\n</ol></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<ol>\n<li><code>0123h,0456h,0789h,0abch,0defh,0fedh,0cbah,0987h</code></li>\n<li><code>CS=04AF</code>, <code>SS=04AE</code>,<code>DS=04AD</code></li>\n<li><code>X-2</code>, <code>X-1</code></li>\n</ol>\n<h3 id=\"实验任务-2-1\"><a href=\"#实验任务-2-1\" class=\"headerlink\" title=\"实验任务 2\"></a>实验任务 2</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>将下面的程序编译、连接，用 Debug 加载、跟踪，然后回答问题。</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code,<span class=\"token register variable\">ds</span>:data,<span class=\"token register variable\">ss</span>:stack\n\ndata segment\n\tdw <span class=\"token number\">0123h</span>,<span class=\"token number\">0456h</span>\ndata ends\n\nstack segment\n\tdw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nstack ends\n\ncode segment\n\n<span class=\"token label function\">start:</span> mov <span class=\"token register variable\">ax</span>,stack\n    mov <span class=\"token register variable\">ss</span>,<span class=\"token register variable\">ax</span>\n    mov <span class=\"token register variable\">sp</span>,<span class=\"token number\">16</span>\n\n    mov <span class=\"token register variable\">ax</span>,data\n    mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n\n    push <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">0</span><span class=\"token operator\">]</span>\n    push <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">2</span><span class=\"token operator\">]</span>\n    pop <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">2</span><span class=\"token operator\">]</span>\n    pop <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">0</span><span class=\"token operator\">]</span>\n\n    mov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n    int <span class=\"token number\">21h</span>\n\ncode ends\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>CPU执行程序，程序返回前，data 段中的数据为多少？</li>\n<li>CPU 执行程序，程序返回前，<code>cs=_____</code>、<code>ss=_____</code>、<code>ds=_____</code>。</li>\n<li>设程序加载后，code 段的段地址为 X，则 data 段的段地址为 <code>_____</code>，stack 段的段地址为 <code>_____</code>。</li>\n<li>对于如下定义的段：</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">name segement\n...\nname ends<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>​        如果段中的数据占 N 个字节，则程序加载后，该段实际占有的空间为 <code>_____</code>。</p></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<ol>\n<li><code>23 01 56 04</code></li>\n<li><code>CS=04AF</code>, <code>SS=04AE</code>, <code>DS=04AD</code></li>\n<li><code>X-2</code>, <code>X-1</code></li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"17.848ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7888.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(278,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(667,0)\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1777.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2777.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3777.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(4166.4,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"mn\" transform=\"translate(4666.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5666.4,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6166.7,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6888.9,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\" transform=\"translate(500,0)\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h3 id=\"实验任务-3\"><a href=\"#实验任务-3\" class=\"headerlink\" title=\"实验任务 3\"></a>实验任务 3</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 将下面的程序编译、连接，用 Debug 加载、跟踪，然后回答问题。</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code,<span class=\"token register variable\">ds</span>:data,<span class=\"token register variable\">ss</span>:stack\n\ncode segment\n<span class=\"token label function\">start:</span> \n\tmov <span class=\"token register variable\">ax</span>,stack\n    mov <span class=\"token register variable\">ss</span>,<span class=\"token register variable\">ax</span>\n    mov <span class=\"token register variable\">sp</span>,<span class=\"token number\">16</span>\n\n    mov <span class=\"token register variable\">ax</span>,data\n    mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n\n    push <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">0</span><span class=\"token operator\">]</span>\n    push <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">2</span><span class=\"token operator\">]</span>\n    pop <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">2</span><span class=\"token operator\">]</span>\n    pop <span class=\"token register variable\">ds</span>:<span class=\"token operator\">[</span><span class=\"token number\">0</span><span class=\"token operator\">]</span>\n\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n\tint <span class=\"token number\">21h</span>\ncode ends\n\ndata segment\n\tdw <span class=\"token number\">0123h</span>,<span class=\"token number\">0456h</span>\ndata ends\n\nstack segment\n\tdw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nstack ends\n\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>CPU执行程序，程序返回前，data 段中的数据为多少？</li>\n<li>CPU 执行程序，程序返回前，<code>cs=_____</code>、<code>ss=_____</code>、<code>ds=_____</code>。</li>\n<li>设程序加载后，code 段的段地址为 X，则 data 段的段地址为 <code>_____</code>，stack 段的段地址为 <code>_____</code>。</li>\n</ol></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<ol>\n<li>仍不变，为：<code>21 01 56 04 ...</code></li>\n<li><code>CS=04AD</code>, <code>SS=04B1</code>,<code>DS=04B0</code></li>\n<li><code>X+3</code>, <code>X+4</code></li>\n</ol>\n<h3 id=\"实验任务-4\"><a href=\"#实验任务-4\" class=\"headerlink\" title=\"实验任务 4\"></a>实验任务 4</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果将实验任务 1、2 和 3 题中的最后一条伪指令“end start”改为“end”（也就是说不指明程序的入口），则哪个程序仍然可以正常执行？请说明原因</p></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<p>第三题的可以正常执行，因为它的代码段在前面，而前两题的程序都是数据段放在前面，没有标记程序的入口程序则会将 IP 指向到程序的最上方，也就是数据段，从而将数据段的机器码错误地当做指令去执行，那显然是错误的。</p>\n<h3 id=\"实验任务-5\"><a href=\"#实验任务-5\" class=\"headerlink\" title=\"实验任务 5\"></a>实验任务 5</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>程序如下，编写 code 段中的代码，将 a 段和 b 段中的数据依次相加到 c 段中。</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code\na segment\n\tdb <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>\na ends\nb segment\n\tdb <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>\nb ends\nc segment\n\tdb <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nc ends\ncode segment\n<span class=\"token label function\">start:</span>\n\t?\ncode ends\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<p>首先能想到的最简单粗暴的办法就是不断的更换 DS 去计算 a 段和 b 段的数据，代码如下，显得非常冗余</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code\na segment\n\tdb <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>\na ends\nb segment\n\tdb <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>\nb ends\nc segment\n\tdb <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nc ends\ncode segment\n<span class=\"token label function\">start:</span>\n\tmov <span class=\"token register variable\">cx</span>,<span class=\"token number\">8</span>\n\tmov <span class=\"token register variable\">bx</span>,<span class=\"token number\">0</span>\n\n<span class=\"token label function\">s:</span>  mov <span class=\"token register variable\">dx</span>,<span class=\"token number\">0</span>\n\n    mov <span class=\"token register variable\">ax</span>,a\n    mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n    add <span class=\"token register variable\">dx</span>,<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>\n    \n    mov <span class=\"token register variable\">ax</span>,b\n    mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n    add <span class=\"token register variable\">dx</span>,<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>\n    \n    mov <span class=\"token register variable\">ax</span>,c\n    mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n    mov <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>,<span class=\"token register variable\">dx</span>\n    \n    inc <span class=\"token register variable\">bx</span>\n\tloop s\n\n\tmov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n\tint <span class=\"token number\">21h</span>\ncode ends\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>但通过前几个实验，我们可以知道 a 段和、b 段和 c 段都是可以通过计算而得出来的，如果a段的地址为<code>X:0</code>, 那么 b 段的地址则为 <code>X:10</code>, c 段的地址则为 <code>X:20</code>，那么我们就可以利用这个特性去简化代码了，如下：</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code\n\na segment\n    db <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>\na ends\n\nb segment\n    db <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>\nb ends\n\nc segment\n    db <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nc ends\n\ncode segment\n<span class=\"token label function\">start:</span>\n    mov <span class=\"token register variable\">ax</span>,a\n    mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n    mov <span class=\"token register variable\">cx</span>,<span class=\"token number\">8</span>\n    mov <span class=\"token register variable\">bx</span>,<span class=\"token number\">0</span>\n    mov <span class=\"token register variable\">si</span>,<span class=\"token number\">10h</span>\n    mov <span class=\"token register variable\">di</span>,<span class=\"token number\">20h</span>\n<span class=\"token label function\">s:</span>  \n    mov <span class=\"token register variable\">ax</span>,<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>\n    add <span class=\"token register variable\">ax</span>,<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">+</span><span class=\"token register variable\">si</span><span class=\"token operator\">]</span>\n    mov <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">+</span><span class=\"token register variable\">di</span><span class=\"token operator\">]</span>,<span class=\"token register variable\">ax</span>\n    add <span class=\"token register variable\">bx</span>,<span class=\"token number\">2</span>\n    loop s\n\n    mov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n    int <span class=\"token number\">21h</span>\ncode ends\n\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"实验任务-6\"><a href=\"#实验任务-6\" class=\"headerlink\" title=\"实验任务 6\"></a>实验任务 6</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>程序如下，编写 code 段中的代码，用 push 指令将 a 段中的前 8 个字型数据，逆序存储到 b 段中。</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code\na segment\n\tdw <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>,<span class=\"token number\">9</span>,<span class=\"token number\">0ah</span>,<span class=\"token number\">0bh</span>,<span class=\"token number\">0ch</span>,<span class=\"token number\">0dh</span>,<span class=\"token number\">0eh</span>,<span class=\"token number\">0fh</span>,<span class=\"token number\">0ffh</span>\na ends\nb segment\n\tdw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nb ends\ncode segment\n\t?\ncode ends\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<p>根据题目的要求可知，我们将 b 段设为栈，长度为 16 字节，push 的时候刚好就可以将 a 段的前 8 个数据逆序，代码如下：</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:code\na segment\n    dw <span class=\"token number\">1</span>,<span class=\"token number\">2</span>,<span class=\"token number\">3</span>,<span class=\"token number\">4</span>,<span class=\"token number\">5</span>,<span class=\"token number\">6</span>,<span class=\"token number\">7</span>,<span class=\"token number\">8</span>,<span class=\"token number\">9</span>,<span class=\"token number\">0ah</span>,<span class=\"token number\">0bh</span>,<span class=\"token number\">0ch</span>,<span class=\"token number\">0dh</span>,<span class=\"token number\">0eh</span>,<span class=\"token number\">0fh</span>,<span class=\"token number\">0ffh</span>\na ends\nb segment\n    dw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nb ends\ncode segment\n<span class=\"token label function\">start:</span>\n    mov <span class=\"token register variable\">ax</span>,b\n    mov <span class=\"token register variable\">ss</span>,<span class=\"token register variable\">ax</span>\n    mov <span class=\"token register variable\">sp</span>,<span class=\"token number\">16</span>\n    mov <span class=\"token register variable\">cx</span>,<span class=\"token number\">8</span>\n    mov <span class=\"token register variable\">ax</span>,a\n    mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n    mov <span class=\"token register variable\">bx</span>,<span class=\"token number\">0</span>\n<span class=\"token label function\">s:</span>  push <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>\n    add <span class=\"token register variable\">bx</span>,<span class=\"token number\">2</span>\n    loop s\n\n    mov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n    int <span class=\"token number\">21h</span>\ncode ends\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"实验-6-实践课程中的程序\"><a href=\"#实验-6-实践课程中的程序\" class=\"headerlink\" title=\"实验 6 实践课程中的程序\"></a>实验 6 实践课程中的程序</h2><h3 id=\"实验任务-1-2\"><a href=\"#实验任务-1-2\" class=\"headerlink\" title=\"实验任务 1\"></a>实验任务 1</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>将课程中所有讲解过的程序上机调试，用 Debug 跟踪其执行过程，并在过程中进一步理解所讲内容。</p></blockquote>\n<h3 id=\"实验任务-2-2\"><a href=\"#实验任务-2-2\" class=\"headerlink\" title=\"实验任务 2\"></a>实验任务 2</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>编程，完成问题7.9中的程序。</p>\n<p>问题 7.9：将 datasg 段中每个单词的前 4 个字母改为大写字母</p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:codesg,<span class=\"token register variable\">ss</span>:stacksg,<span class=\"token register variable\">ds</span>:datasg\n\nstacksg segment\n  dw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nstacksg ends\n\ndatasg segment\n  db <span class=\"token string\">'1. display      '</span>\n  db <span class=\"token string\">'2. brows        '</span>\n  db <span class=\"token string\">'3. replace      '</span>\n  db <span class=\"token string\">'4. modify       '</span>\ndatasg ends\n\ncodesg segment\n  <span class=\"token label function\">start:</span> \ncodesg ends\n\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote>\n<hr>\n<p><strong>答：</strong></p>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">assume <span class=\"token register variable\">cs</span>:codesg,<span class=\"token register variable\">ss</span>:stacksg,<span class=\"token register variable\">ds</span>:datasg\n\nstacksg segment\n  dw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nstacksg ends\n\ndatasg segment\n  db <span class=\"token string\">'1. display      '</span>\n  db <span class=\"token string\">'2. brows        '</span>\n  db <span class=\"token string\">'3. replace      '</span>\n  db <span class=\"token string\">'4. modify       '</span>\ndatasg ends\n\nstacksg segment\n\tdw <span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>,<span class=\"token number\">0</span>\nstacksg ends\n\ncodesg segment\n\n  <span class=\"token label function\">start:</span> mov <span class=\"token register variable\">ax</span>,stacksg\n  \t     mov <span class=\"token register variable\">ss</span>,<span class=\"token register variable\">ax</span>\n  \t     mov <span class=\"token register variable\">sp</span>,<span class=\"token number\">16</span>\n  \t\t mov <span class=\"token register variable\">ax</span>,datasg\n  \t     mov <span class=\"token register variable\">ds</span>,<span class=\"token register variable\">ax</span>\n  \t     mov <span class=\"token register variable\">cx</span>,<span class=\"token number\">4</span>\n  \t     mov <span class=\"token register variable\">bx</span>,<span class=\"token number\">0</span>\n  \t  <span class=\"token label function\">s0:</span>push <span class=\"token register variable\">cx</span>\n  \t     mov <span class=\"token register variable\">cx</span>,<span class=\"token number\">4</span>\n  \t     mov <span class=\"token register variable\">si</span>,<span class=\"token number\">0</span>\n      <span class=\"token label function\">s:</span> mov <span class=\"token register variable\">al</span>,<span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">+</span><span class=\"token register variable\">si</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">]</span>\n         and <span class=\"token register variable\">al</span>,<span class=\"token number\">11011111B</span>\n         mov <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">+</span><span class=\"token register variable\">si</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">]</span>,<span class=\"token register variable\">al</span>\n         inc <span class=\"token register variable\">si</span>\n         loop s\n         \n         add <span class=\"token register variable\">bx</span>,<span class=\"token number\">16</span>\n         pop <span class=\"token register variable\">cx</span>\n         loop s0\n         \n         mov <span class=\"token register variable\">ax</span>,<span class=\"token number\">4c00h</span>\n         int <span class=\"token number\">21h</span>\n         \ncodesg ends\n\nend start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"实验-7-寻址方式在结构化数据访问中的应用\"><a href=\"#实验-7-寻址方式在结构化数据访问中的应用\" class=\"headerlink\" title=\"实验 7 寻址方式在结构化数据访问中的应用\"></a>实验 7 寻址方式在结构化数据访问中的应用</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Power idea 公司从 1975 年成立一直到 1995 年的基本情况如下</p>\n<table>\n<thead>\n<tr>\n<th>年份</th>\n<th>收入(千美元)</th>\n<th>雇员(人)</th>\n<th>人均收入(千美元)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1975</td>\n<td>16</td>\n<td>3</td>\n<td>?</td>\n</tr>\n<tr>\n<td>1976</td>\n<td>22</td>\n<td>7</td>\n<td>?</td>\n</tr>\n<tr>\n<td>1977</td>\n<td>382</td>\n<td>9</td>\n<td>?</td>\n</tr>\n<tr>\n<td>1978</td>\n<td>1356</td>\n<td>13</td>\n<td>?</td>\n</tr>\n<tr>\n<td>1979</td>\n<td>2390</td>\n<td>28</td>\n<td>?</td>\n</tr>\n<tr>\n<td>1980</td>\n<td>8000</td>\n<td>38</td>\n<td>?</td>\n</tr>\n<tr>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n</tr>\n<tr>\n<td>1995</td>\n<td>5937000</td>\n<td>17800</td>\n<td>?</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-nasm\" data-language=\"nasm\"><code class=\"language-nasm\">data segment\n   db <span class=\"token string\">'1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982'</span>, <span class=\"token string\">'1983'</span>\n   db <span class=\"token string\">'1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992'</span>\n   db <span class=\"token number\">1993</span>, <span class=\"token number\">1994</span>, <span class=\"token number\">1995</span><span class=\"token operator\">!</span>\n   <span class=\"token comment\">;以上是表示21年的21个字符串</span>\n   \n   dd <span class=\"token number\">16</span>,<span class=\"token number\">22</span>,<span class=\"token number\">382</span>,<span class=\"token number\">1356</span>,<span class=\"token number\">2390</span>, <span class=\"token number\">8000</span>, <span class=\"token number\">16000</span>,<span class=\"token number\">24486</span>,<span class=\"token number\">50065</span>,<span class=\"token number\">97479</span>,<span class=\"token number\">140417</span>,<span class=\"token number\">197514</span>\n   dd <span class=\"token number\">345980</span>, <span class=\"token number\">590827</span>, <span class=\"token number\">803530</span>,<span class=\"token number\">1183000</span>,<span class=\"token number\">1843000</span>,<span class=\"token number\">2759000</span>, <span class=\"token number\">3753000</span>, <span class=\"token number\">4649000</span>,<span class=\"token number\">5937000</span>\n   <span class=\"token comment\">;以上是表示21年公司总收入的21个 dword 型数据</span>\n   \n   dw <span class=\"token number\">3</span>,<span class=\"token number\">7</span>,<span class=\"token number\">9</span>,<span class=\"token number\">13</span>,<span class=\"token number\">28</span>, <span class=\"token number\">38</span>,<span class=\"token number\">130</span>,<span class=\"token number\">220</span>,<span class=\"token number\">476</span>, <span class=\"token number\">778</span>, <span class=\"token number\">1001</span>, <span class=\"token number\">1442</span>,<span class=\"token number\">2258</span>,<span class=\"token number\">2793</span>, <span class=\"token number\">4037</span>, <span class=\"token number\">5635</span>, <span class=\"token number\">8226</span>\n   dw <span class=\"token number\">11542</span>, <span class=\"token number\">14430</span>,<span class=\"token number\">15257</span>,<span class=\"token number\">17800</span>\n   <span class=\"token comment\">;以上是表示21年公司雇员人数的21个word型数据</span>\ndata ends\ntable segment\ndb <span class=\"token number\">21</span> dup ('year summ ne ??)\ntable ends<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote>\n<h2 id=\"实验-10-编写子程序\"><a href=\"#实验-10-编写子程序\" class=\"headerlink\" title=\"实验 10 编写子程序\"></a>实验 10 编写子程序</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在指定的位置，用指定的颜色，显示一个用 0 结束的字符串。</p>\n<p>参数：(dh)=行号，(dl)=列号</p>\n<p>​            (cl)=颜色，ds:si 指向字符串的首地址。</p>\n<pre><code class=\"nasm\">assume cs:code\ndata segment\n    db 'Welcome to masm!',0\ndata ends\n\ncode segment\n\nstart:  mov dh,8\n        mov dl,3\n        mov cl,2\n        mov ax,data\n        mov ds,ax\n        mov si,0\n        call show_str\n\n        mov ax,4c00h\n        int 21h\nshow_str:\n        mov ds,b800h\n\n\ncode ends\nend start\n</code></pre></blockquote>\n","feature":true,"text":"Assembly Language Lab In 8086PC 使用教材：《汇编语言》第 4 版 - 王爽 环境搭建由于王爽的《汇编语言》是以 Intel 80...","permalink":"/post/assembly/Assembly_Language_Lab_In_8086_PC","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"汇编","slug":"汇编","count":1,"path":"api/categories/汇编.json"}],"tags":[{"name":"汇编","slug":"汇编","count":1,"path":"api/tags/汇编.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Assembly-Language-Lab-In-8086PC\"><span class=\"toc-text\">Assembly Language Lab In 8086PC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">环境搭建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C1-%E6%9F%A5%E7%9C%8BCPU%E5%92%8C%E5%86%85%E5%AD%98%EF%BC%8C%E7%94%A8%E6%9C%BA%E5%99%A8%E6%8C%87%E4%BB%A4%E5%92%8C%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E7%BC%96%E7%A8%8B\"><span class=\"toc-text\">实验1 查看CPU和内存，用机器指令和汇编指令编程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Register-%E6%9F%A5%E7%9C%8B%E3%80%81%E6%94%B9%E5%8F%98CPU%E5%AF%84%E5%AD%98%E5%99%A8%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">(Register) 查看、改变CPU寄存器内容</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Dump-%E6%9F%A5%E7%9C%8B%E5%86%85%E5%AD%98\"><span class=\"toc-text\">(Dump) 查看内存</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Enter-%E6%94%B9%E5%86%99%E5%86%85%E5%AD%98%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">(Enter) 改写内存内容</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Unassemble-%E5%B0%86%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E6%9C%BA%E5%99%A8%E6%8C%87%E4%BB%A4%E7%BF%BB%E8%AF%91%E6%88%90%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">(Unassemble) 将内存中的机器指令翻译成汇编指令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Trace-%E6%89%A7%E8%A1%8C%E4%B8%80%E6%9D%A1%E6%9C%BA%E5%99%A8%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">(Trace) 执行一条机器指令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Assemble-%E4%BB%A5%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E5%86%99%E5%85%A5%E4%B8%80%E6%9D%A1%E6%9C%BA%E5%99%A8%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">(Assemble) 以汇编指令的格式在内存中写入一条机器指令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C2-%E7%94%A8%E6%9C%BA%E5%99%A8%E6%8C%87%E4%BB%A4%E5%92%8C%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E7%BC%96%E7%A8%8B\"><span class=\"toc-text\">实验2 用机器指令和汇编指令编程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-1\"><span class=\"toc-text\">实验任务 1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-2\"><span class=\"toc-text\">实验任务 2</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C3-%E7%BC%96%E7%A8%8B%E3%80%81%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%9E%E6%8E%A5%E3%80%81%E8%B7%9F%E8%B8%AA\"><span class=\"toc-text\">实验3 编程、编译、连接、跟踪</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A11\"><span class=\"toc-text\">实验任务1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A12\"><span class=\"toc-text\">实验任务2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A13\"><span class=\"toc-text\">实验任务3</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C4-bx-%E5%92%8Cloop%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">实验4 [bx]和loop的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A11-1\"><span class=\"toc-text\">实验任务1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A12-1\"><span class=\"toc-text\">实验任务2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A13-1\"><span class=\"toc-text\">实验任务3</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C-5-%E7%BC%96%E5%86%99%E3%80%81%E8%B0%83%E8%AF%95%E5%85%B7%E6%9C%89%E5%A4%9A%E4%B8%AA%E6%AE%B5%E7%9A%84%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">实验 5 编写、调试具有多个段的程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-1-1\"><span class=\"toc-text\">实验任务 1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-2-1\"><span class=\"toc-text\">实验任务 2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-3\"><span class=\"toc-text\">实验任务 3</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-4\"><span class=\"toc-text\">实验任务 4</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-5\"><span class=\"toc-text\">实验任务 5</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-6\"><span class=\"toc-text\">实验任务 6</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C-6-%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E4%B8%AD%E7%9A%84%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">实验 6 实践课程中的程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-1-2\"><span class=\"toc-text\">实验任务 1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%E4%BB%BB%E5%8A%A1-2-2\"><span class=\"toc-text\">实验任务 2</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C-7-%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%E5%9C%A8%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">实验 7 寻址方式在结构化数据访问中的应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C-10-%E7%BC%96%E5%86%99%E5%AD%90%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">实验 10 编写子程序</span></a></li></ol></li></ol>","author":{"name":"Joshlee","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{}},"mapped":true,"hidden":false,"prev_post":{"title":"颉斌斌の阅读方法论","uid":"44adc1e67c8364c54a9fb52ef95b3372","slug":"english/xie_bin_bin_reading_note","date":"2023-09-10T03:25:56.000Z","updated":"2023-09-10T03:56:16.904Z","comments":true,"path":"api/articles/english/xie_bin_bin_reading_note.json","keywords":null,"cover":[],"text":" 解码考研阅读： 单词 长难句 掌握主旨 查找细节 课程目录 阅读应试思维理论部分讲解 阅读应试思维具体应用：细节题 阅读应试思维具体应用：主旨题 阅读应试思维...","permalink":"/post/english/xie_bin_bin_reading_note","photos":[],"count_time":{"symbolsCount":321,"symbolsTime":"1 mins."},"categories":[{"name":"英语","slug":"英语","count":5,"path":"api/categories/英语.json"}],"tags":[{"name":"英语","slug":"英语","count":5,"path":"api/tags/英语.json"}],"author":{"name":"Joshlee","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{}},"feature":true},"next_post":{"title":"摘录 -《被讨厌的勇气》","uid":"0e64c25e3be51245c5ad83f092c399cf","slug":"life/exceprts_the_courage_to_be_disliked","date":"2023-07-18T05:48:25.000Z","updated":"2023-07-18T05:55:06.249Z","comments":true,"path":"api/articles/life/exceprts_the_courage_to_be_disliked.json","keywords":null,"cover":null,"text":"被讨厌的勇气：“自我启发之父”阿德勒的哲学课第一夜 我们的不幸是谁的错？ 无论过去发生了什么样的事情，现在的状态取决于你赋予既有事件的意义。 人并不受过去的原因...","permalink":"/post/life/exceprts_the_courage_to_be_disliked","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"生活","slug":"生活","count":4,"path":"api/categories/生活.json"}],"tags":[{"name":"摘录","slug":"摘录","count":2,"path":"api/tags/摘录.json"},{"name":"读书","slug":"读书","count":2,"path":"api/tags/读书.json"}],"author":{"name":"Joshlee","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{}},"feature":true}}