{"title":"如何在个人博客(hexo)中放入图片","uid":"90287f2d1cda5dcde7895722d8985714","slug":"tools/blog-image-upload-strategy","date":"2023-09-13T07:12:47.000Z","updated":"2023-09-13T13:28:10.992Z","comments":true,"path":"api/articles/tools/blog-image-upload-strategy.json","keywords":null,"cover":[],"content":"<p>这个问题的本质其实是在讨论如何将本地的图片上传到服务器中，并在 markdown 写作中引用已上传的图片。最理想的方式当然是：截图工具一截图，然后就直接把图片 <code>Ctrl V</code> 进文章中啦。那么具体如何做呢？本文将介绍两种方法</p>\n<h2 id=\"方法-1-Github-Typora\"><a href=\"#方法-1-Github-Typora\" class=\"headerlink\" title=\"方法 1. Github + Typora\"></a>方法 1. Github + Typora</h2><p>第一种方法是直接将图片存入 Github 的仓库中，这种方法最大的优点就是免费和可靠了，访问的速度也很快。缺点是 Repository 的存储空间不能太大，官方推荐是小于 1GB，如下面我从 <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#limits-on-use-of-github-pages\">Github Docs</a> 中截的图。</p>\n<p><img src=\"https://josh-blog-images.oss-cn-shenzhen.aliyuncs.com/202309131331788.png\"></p>\n<p>如果一张图 1MB，那么大约可以放 1000 张图到 Repository 中， emmm这么算下来的话，其实大部分人使用肯定是戳戳有余了</p>\n<p>众所周知，在用 hexo 写博客的时候，可以将图片放在 <code>source</code> 的文件夹内，然后用相对路径进行引用，比如将图片都放在 <code>./source/images</code> 中，如果你的文章是 <code>./source/_posts/xxx.md</code> 的话，可以在文章中使用类似于 <code>![](../images/xxx.png)</code> 的方式引用图片。最终 <code>hexo generate</code> 的时候会将你的 <code>images</code> 文件夹原封不动的放入 <code>./build</code> 文件夹，部署的时候也会将这些图片部署到 Github Repository 中。</p>\n<p>利用这个hexo 的特性，我们就可以将 github 作为我们自己放文章图片的地方了。但这样的问题是，使用起来很是麻烦，要在文章中插入图片，首先要将截的图存入博客中专门放图片的文件夹如 <code>./source/images</code> ，还要将图片归个类…还要在 markdown 中写上插入图片的语法…这可太麻烦了。</p>\n<p>于是我们可以使用 Typora 图片上传的特性完美解决这个痛点。打开 Typora 的 Setting，Image，选择 <code>Copy image to custom folder</code>，意思就是当插入图片的时候会将图片复制到指定的文件夹中，指定的那个文件夹我们用相对路径表示就行，如下图（请务必按照你自己的实际情况来配置）</p>\n<p><img src=\"https://josh-blog-images.oss-cn-shenzhen.aliyuncs.com/202309131442115.png\"></p>\n<p>最后大功告成啦，截个图，然后直接粘贴到 Typora 里就行。</p>\n<h2 id=\"方法-2-阿里云-OSS-PicGo\"><a href=\"#方法-2-阿里云-OSS-PicGo\" class=\"headerlink\" title=\"方法 2. 阿里云 OSS + PicGo\"></a>方法 2. 阿里云 OSS + PicGo</h2><p>第二种方法就是图床 + 图片上传工具啦，市面上的图床有很多，但免费的一些野鸡图床一般都很不稳定，比如随便谷歌或百度搜<code>免费图床</code>，会出来一大堆，具体稳定性如何，就需要大家自己去甄别了。</p>\n<p>这里我只介绍我用的：阿里云 OSS 当图床，PicGo 当图片上传工具。</p>\n<hr>\n<p>前往 <a href=\"https://www.aliyun.com/product/oss\">阿里云 OSS官网</a>，点击立即购买。然后按照下图购买方案即可，一年 9 块钱，也不算很贵</p>\n<p><img src=\"https://josh-blog-images.oss-cn-shenzhen.aliyuncs.com/202309131349982.png\"></p>\n<hr>\n<p>然后点击 Bucket 列表，创建 Bucket，填写 <code>Bucket 名称</code>、<code>地域</code>还有<code>读写权限</code>(改成公共读)，如下图</p>\n<p><img src=\"https://josh-blog-images.oss-cn-shenzhen.aliyuncs.com/202309131358364.png\"></p>\n<hr>\n<p>阿里云OSS 创建完之后，我们需要下载个图片上传的软件，<a href=\"https://github.com/Molunerfinn/PicGo/releases/\">PicGo下载链接</a></p>\n<p>如果 mac 下载安装完 PicGo，打开后提示「文件已损坏」的情况，可以按照以下方式操作：</p>\n<hr>\n<p>信任开发者，会要求输入密码:</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">sudo</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">spctl</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--master-disable</span></span></code></pre></div>\n\n<p>然后放行 PicGo :</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">xattr</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-cr</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">/Applications/PicGo.app</span></span></code></pre></div>\n\n<p>然后就能正常打开。</p>\n<hr>\n<p>打开PicGo 的主窗口，图床设置，阿里云 OSS</p>\n<p>这里需要填入 <code>设定KeyId</code> 和 <code>设定KeySecret</code>，可以在「阿里云 -&gt; 右上角头像 -&gt; AccessKey 管理」中创建 <code>AccessKey</code>。</p>\n<p><img src=\"https://josh-blog-images.oss-cn-shenzhen.aliyuncs.com/202309131409613.png\"></p>\n<p>然后分别把刚刚在阿里云中创建的 <code>AssessKey ID</code>和 <code>AssessKey Secret</code> 填入PicGo中的 <code>设定KeyId</code> 和 <code>设定KeySecret</code> 。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>记得把你自己的 <code>AssessKey ID</code>和 <code>AssessKey Secret</code> 妥善保管好</p></blockquote>\n<p>然后 <code>设定Bucket</code> 和 <code>设定存储区域</code> 根据自身情况填，可参考下图，最后按确定即可</p>\n<p><img src=\"https://josh-blog-images.oss-cn-shenzhen.aliyuncs.com/202309131258387.png\"></p>\n<p>使用起来就非常方便了，用微信、Snipaste 等一些截图工具，截图后直接在状态栏中点 PigGo 的图标就能上传啦~上传成功后会自动将 markdown 格式的图片复制到你的剪贴板，直接粘贴进你 <code>.md</code> 即可</p>\n<p>软件具体的操作细节可以自己探索，很简单的</p>\n<p><img src=\"https://josh-blog-images.oss-cn-shenzhen.aliyuncs.com/202309131414529.png\"></p>\n","feature":true,"text":"这个问题的本质其实是在讨论如何将本地的图片上传到服务器中，并在 markdown 写作中引用已上传的图片。最理想的方式当然是：截图工具一截图，然后就直接把图片 ...","permalink":"/post/tools/blog-image-upload-strategy","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"常用工具","slug":"常用工具","count":2,"path":"api/categories/常用工具.json"}],"tags":[{"name":"杂谈","slug":"杂谈","count":1,"path":"api/tags/杂谈.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95-1-Github-Typora\"><span class=\"toc-text\">方法 1. Github + Typora</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95-2-%E9%98%BF%E9%87%8C%E4%BA%91-OSS-PicGo\"><span class=\"toc-text\">方法 2. 阿里云 OSS + PicGo</span></a></li></ol>","author":{"name":"Joshlee","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"颉斌斌の阅读方法论","uid":"44adc1e67c8364c54a9fb52ef95b3372","slug":"english/xie_bin_bin_reading_note","date":"2023-09-10T03:25:56.000Z","updated":"2023-09-10T03:56:16.904Z","comments":true,"path":"api/articles/english/xie_bin_bin_reading_note.json","keywords":null,"cover":[],"text":" 解码考研阅读： 单词 长难句 掌握主旨 查找细节 课程目录 阅读应试思维理论部分讲解 阅读应试思维具体应用：细节题 阅读应试思维具体应用：主旨题 阅读应试思维...","permalink":"/post/english/xie_bin_bin_reading_note","photos":[],"count_time":{"symbolsCount":321,"symbolsTime":"1 mins."},"categories":[{"name":"英语","slug":"英语","count":5,"path":"api/categories/英语.json"}],"tags":[{"name":"英语","slug":"英语","count":5,"path":"api/tags/英语.json"}],"author":{"name":"Joshlee","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"这个人很菜，什么也没有留下","socials":{}},"feature":true}}